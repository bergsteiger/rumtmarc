////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/ImplementationTypes/Box.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$Templates::CommonTemplates::CommonLang::ImplementationTypes::Box
//
// Контейнер со счетчиком
// ---
// Контейнер с независимым счетчиком для заданного типа. Абстракция уровня реализации. Тип Box'а
// определяется связью наследования.
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: Box::Class
implementation @ <<Box>>
//? Контейнер со счетчиком
//? Контейнер с независимым счетчиком для заданного типа. Абстракция уровня реализации. Тип Box'а определяется связью наследования.
//< *::Class,*::Category

//= ClassBaseGenerator::MDAGenerator

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
//v +#-
// - типы видимости
//Y code_box.gif
//L code_box
// Параметры визуализации
//$ C 240,205,240
//$ l 120,40,120
//$ f 120,40,120

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p Need deallocator:b=false ? определяет нужен ли специальный деаллокатор (будет сгенерирован специальный класс для уничтожения хранимого объекта)
//p force usage:b=false ? явно определяет, что элемент будет кем-то использован (нужно для проверки)

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{Need deallocator}"!="%S{!Need deallocator}"}%f_up_prefix(%S) *Need deallocator* = *%S{Need deallocator}* - определяет нужен ли специальный деаллокатор (будет сгенерирован специальный класс для уничтожения хранимого объекта)
 ?inherited
 %IF ( ( %S get_up ( 'Need deallocator' ) ) %!= ( %S get_up_def ( 'Need deallocator' ) ) ) 
  [%f] up_prefix %( %S )% ' *Need deallocator* = *'
  %S get_up ( 'Need deallocator' ) '* - определяет нужен ли специальный деаллокатор (будет сгенерирован специальный класс для уничтожения хранимого объекта)'
//	][{"%S{force usage}"!="%S{!force usage}"}%f_up_prefix(%S) *force usage* = *%S{force usage}* - явно определяет, что элемент будет кем-то использован (нужно для проверки)
 %END-IF
 %IF ( ( %S get_up ( 'force usage' ) ) %!= ( %S get_up_def ( 'force usage' ) ) ) 
  [%f] up_prefix %( %S )% ' *force usage* = *'
  %S get_up ( 'force usage' ) '* - явно определяет, что элемент будет кем-то использован (нужно для проверки)'
//	]
 %END-IF


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// реализация абстрактного стереотипа Документация::MDAGenerator
// проверка ограничений накладываемых на элемент
//%t _constraint
; // wiki_up_print

<<transformator>> constraint OBJECT IN %S
//#UC START# *4704C0E30186for4714685D005D*
//c                                                                       {}
//r "%t_refcounted(%G)"="true":                                        {Box cant used on RefCounted objects (like Interfaces,  Servants, or SimplClass with RefCount)}
//r	"%Rx"="true":                                                    {Box cant realize any other objects}
//r	"<{}{}{%GC}>"!="1":                                              {Box must generalize just one type (now is <{}{}{%GC}>)}
//r "<{}{%CS=deallocator}{C}>"!="1"&"<{}{%CS=deallocator}{C}>"!="0":   {Box can specify only one dealocator}
//r <{}{%CS=deallocator}{C}>!=0&%S{Need deallocator}=true:             {dealloctaor specified by model- remove UP{Need deallocator}}
//r {%S{force usage}=false&%ax=false}:                                 {%SS ни кем не используется}
//#UC END# *4704C0E30186for4714685D005D*
; // constraint


// реализация абстрактного стереотипа C++ интерфейсы и реализация::MDAGenerator
// генератор заголовочных файлов C++ (.h)
//+ h
<<generator>> h OBJECT IN %S
//#UC START# *47022C88029Ffor4714685D005D*
//	%f_docs(%S)\
 [%f] docs %( %S )% 
//	[{%S{Need deallocator}=true}struct %SNDeallocator {
 %IF ( ( %S get_up ( 'Need deallocator' ) ) %==  true ) 
  'struct '
  %S |N 'Deallocator {'
//		static void destroy (%f_type(%G)* content) {
  '	static void destroy ('
  [%f] type %( %G )% '* content) {'
//		%U[
  '	'
  %U%IF-NOT-EMPTY

//			throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION); 
   '		throw Core::Root::MDAGenNotImplemented(GDS_CURRENT_FUNCTION); '
//		]
   '	' 
  %END-IF
 //		}
  '	}'
//	};
  '};'
//	]#typedef ::Core::Box\<%f_type(%G)[{%S{Need deallocator}=true}, %SNDeallocator]<{}{%CS=deallocator}, %f_type(%C%T)>\> %SN;
 %END-IF
 out_indent 'typedef ::Core::Box<'
 [%f] type %( %G )% %IF ( ( %S get_up ( 'Need deallocator' ) ) %==  true ) 
  ', '
  %S |N 'Deallocator' 
 %END-IF
 %FOR %ITEM-CONDITION ( ( %C |S ) %== 'deallocator' ) 
  ', '
  [%f] type %( %C ->T  )% 
 %END-FOR
 '> '
 %S |N ';'
//	
//#UC END# *47022C88029Ffor4714685D005D*
; // h


// реализация абстрактного стереотипа Документация::MDAGenerator
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for4714685D005D*
//G %PU
//#UC END# *46E6D4BB0339for4714685D005D*
; // wiki


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Вложенные стереотипы

//: Box::Class::deallocator::Attribute
end. // <<Box>>

implementation @ :: <<Box>> <<deallocator>> ;
//? класс отвечающий за уничтожение хранимого объекта
// Параметры стереотипа
//Y code_deallocator.gif
//L code_deallocator
//l l
// - возможные типы связи атрибута

// Генераторы
// Генерация модели в MDKnow
//+ wiki
<<generator>> wiki OBJECT IN %S
//#UC START# *46E6D4BB0339for471468EC031C*
//#UC END# *46E6D4BB0339for471468EC031C*
; // wiki


// генератор заголовочных файлов C++ (.h)
//+ h
<<generator>> h OBJECT IN %S
//#UC START# *47022C88029Ffor471468EC031C*
//#UC END# *47022C88029Ffor471468EC031C*
; // h


// Функции стереотипа
//%f _st_space_key
: st_space_key OBJECT IN %S
//	MDP
 'MDP'



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

; // st_space_key

end. // :: <<Box>> <<deallocator>> ;

