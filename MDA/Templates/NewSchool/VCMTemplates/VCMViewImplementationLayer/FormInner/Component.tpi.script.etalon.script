////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/VCMTemplates/VCMViewImplementationLayer/FormInner/Component.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::VCMTemplates::VCMViewImplementationLayer::FormInner::Component
//
// Компонент
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: Component::Class
implementation @ <<Component>>
//? Компонент
//< *::Class,*::Category

//= FormInner::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Параметры стереотипа
// Параметры визуализации
//$ C 152,251,152
//$ l 0,64,64
//$ f 0,85,0

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Пользовательские свойства

//p need Caption:tribool=false ? 
//p ComponentClass=none|TnscTextSource ? 

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'

//%f _wiki_up_print
; // st_space_key

: wiki_up_print OBJECT IN %S
//	%S#[inherited][{"%S{need Caption}"!="%S{!need Caption}"}%f_up_prefix(%S) *need Caption* = *%S{need Caption}*
 ?inherited
 %IF ( ( %S get_up ( 'need Caption' ) ) %!= ( %S get_up_def ( 'need Caption' ) ) ) 
  [%f] up_prefix %( %S )% ' *need Caption* = *'
  %S get_up ( 'need Caption' ) '*'
//	][{"%S{ComponentClass}"!="%S{!ComponentClass}"}%f_up_prefix(%S) *ComponentClass* = *%S{ComponentClass}*
 %END-IF
 %IF ( ( %S get_up ( 'ComponentClass' ) ) %!= ( %S get_up_def ( 'ComponentClass' ) ) ) 
  [%f] up_prefix %( %S )% ' *ComponentClass* = *'
  %S get_up ( 'ComponentClass' ) '*'
//	]
 %END-IF


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
//%f _DoSpell
; // wiki_up_print

: DoSpell OBJECT IN %S
//#UC START# *4B2A19E3038Bfor4A794D1700B2*
//	[{%S%f_IsOverride()!=true}\
 %IF ( ( %S %f IsOverride %( )% ) %!=  true ) 
//	[{%Gx!=true}\
  %IF ( ( %G |x ) %!=  true ) 
//	[{%S{ComponentClass}!=none&"%S{ComponentClass}"!=""}\
   %IF ( ( %S get_up ( 'ComponentClass' ) ) %!= 'none' %&& 
     ( ( %S get_up ( 'ComponentClass' ) ) %!= ''  ) ) 
//	%f_find_element(%S{ComponentClass},l_Elem)\
    [%f] find_element %( %S get_up ( 'ComponentClass' ) %, 'l_Elem' )% 
//	%S%f_make_accessable(%{l_Elem}U)\
    %S %f make_accessable %( ( get_global_var ( 'l_Elem' ) |U ) )% 
//	%S%f_add_inheritable(%{l_Elem}U)\
    %S %f add_inheritable %( ( get_global_var ( 'l_Elem' ) |U ) )% 
//	]\
   %END-IF
//	]\
  %END-IF
//	]\
 %END-IF

//	%S%[inherited]\
 inherited
//	[{%S%f_IsOverride()!=true}\
 %IF ( ( %S %f IsOverride %( )% ) %!=  true ) 


//	%f_set_var(FOUND,"false")\
  [%f] set_var %( 'FOUND' %, false )% 
//	%f_set_var(PARENT,"")\
  [%f] set_var %( 'PARENT' %, '' )% 
//	<{}{%P#f_IsControl()!=true}{%P}\
  %FOR %ITEM-CONDITION ( ( %P %?f IsControl %( )% ) %!=  true ) 
   ( %P ) 
//	[{%{FOUND}N=false}\
   %IF ( ( ( get_global_var ( 'FOUND' ) |N ) ) %==  false ) 
//	%f_set_var(FOUND,"true")\
    [%f] set_var %( 'FOUND' %, true )% 
//	%f_set_var(PARENT,P)\
    [%f] set_var %( 'PARENT' %, 'P' )% 
//	]\
   %END-IF
//	>\
  %END-FOR

//	%f_warning(%{PARENT}S : %{PARENT}N)\


//	%{PARENT}%f_add_class(%SU_Word,SimpleClass,Tkw_%f_N(%{PARENT})_Component_%f_N(%S),Word_Inst)\
  ( get_global_var ( 'PARENT' ) %f add_class %( %S |U '_Word' %, 'SimpleClass' %, 'Tkw_'
  [%f] N %( ( get_global_var ( 'PARENT' ) ) )% '_Component_'
  [%f] N %( %S )% %, 'Word_Inst' )% ) 
//	[{"%{TtfwControlString}N"=""}%f_find_element(TtfwControlString,TtfwControlString)]\
  %IF ( ( ( get_global_var ( 'TtfwControlString' ) |N ) ) %== '' ) 
   [%f] find_element %( 'TtfwControlString' %, 'TtfwControlString' )% 
  %END-IF
//	%{Word_Inst}%f_make_accessable(%{TtfwControlString}U)\
  ( get_global_var ( 'Word_Inst' ) %f make_accessable %( ( get_global_var ( 'TtfwControlString' ) |U ) )% ) 
//	%{Word_Inst}%f_add_inheritable(%{TtfwControlString}U)\
  ( get_global_var ( 'Word_Inst' ) %f add_inheritable %( ( get_global_var ( 'TtfwControlString' ) |U ) )% ) 
//	%{Word_Inst}%f_set_up(NeedsKeywordDoc,true)\
  ( get_global_var ( 'Word_Inst' ) %f set_up %( 'NeedsKeywordDoc' %, true )% ) 
//	%{PARENT}%f_add_dependency(%SU_%{Word_Inst}U_uses,%{Word_Inst}U,uses,,USES_Inst)\
  ( get_global_var ( 'PARENT' ) %f add_dependency %( %S |U '_'
  ( get_global_var ( 'Word_Inst' ) |U ) '_uses' %, ( get_global_var ( 'Word_Inst' ) |U ) %, 'uses' %, '' %, 'USES_Inst' )% ) 
//	%{Word_Inst}%f_set_documentation(Слово словаря для идентификатора компонента %SN
  ( get_global_var ( 'Word_Inst' ) %f set_documentation %( 'Слово словаря для идентификатора компонента '
  %S |N 
//	----
  '----'
//	*Пример использования*:
  '*Пример использования*:'
//	\{code\}
  '{code}'
//	компонент::%f_str_replace(%f_N(%S), ,_) TryFocus ASSERT
  'компонент::'
  [%f] str_replace %( [%f] N %( %S )% %, ' ' %, '_' )% ' TryFocus ASSERT'
//	\{code\})\
  '{code}' )% ) 
//	%{Word_Inst}%f_set_up(ifdef,InsiderTest)\
//	%{Word_Inst}%f_set_visibility_type(PrivateAccess)\
  ( get_global_var ( 'Word_Inst' ) %f set_visibility_type %( 'PrivateAccess' )% ) 

//	[{"%{TtfwControlString.GetString}N"=""}%f_find_element(4DDFD2EA0116,TtfwControlString.GetString)]\
  %IF ( ( ( get_global_var ( 'TtfwControlString.GetString' ) |N ) ) %== '' ) 
   [%f] find_element %( '4DDFD2EA0116' %, 'TtfwControlString.GetString' )% 
  %END-IF
//	%{Word_Inst}%f_add_override(%{TtfwControlString.GetString}U)\
  ( get_global_var ( 'Word_Inst' ) %f add_override %( ( get_global_var ( 'TtfwControlString.GetString' ) |U ) )% ) 
//	%{TtfwControlString.GetString}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{TtfwControlString.GetString},%{Word_Inst})_var,\
  ( get_global_var ( 'TtfwControlString.GetString' ) %f set_uc_content %( 'intf.pas' %, '_'
  [%f] pas_MethodOwnerID %( ( get_global_var ( 'TtfwControlString.GetString' ) ) %, ( get_global_var ( 'Word_Inst' ) ) )% '_var' %, 
//	 {-}\
  ' {-}'
//	)\
)% ) //	%{TtfwControlString.GetString}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{TtfwControlString.GetString},%{Word_Inst})_impl,\
  ( get_global_var ( 'TtfwControlString.GetString' ) %f set_uc_content %( 'intf.pas' %, '_'
  [%f] pas_MethodOwnerID %( ( get_global_var ( 'TtfwControlString.GetString' ) ) %, ( get_global_var ( 'Word_Inst' ) ) )% '_impl' %, 
//	 Result := '%f_N(%S)';\
  ' Result := '''
  [%f] N %( %S )% ''';'
//	)
)% ) 

//	%{Word_Inst}%f_add_operation(%{Word_Inst}U_Ini,ini,Ini (),Op_Instance)\
  ( get_global_var ( 'Word_Inst' ) %f add_operation %( ( get_global_var ( 'Word_Inst' ) |U ) '_Ini' %, 'ini' %, 'Ini ()' %, 'Op_Instance' )% ) 
//	%{Op_Instance}%f_set_documentation(Регистрация %{Word_Inst}N)\
  ( get_global_var ( 'Op_Instance' ) %f set_documentation %( 'Регистрация '
  ( get_global_var ( 'Word_Inst' ) |N ) )% ) 
//	%{Op_Instance}%f_set_abstraction_type(final)\
  ( get_global_var ( 'Op_Instance' ) %f set_abstraction_type %( 'final' )% ) 
//	%{Op_Instance}%f_set_visibility_type(PrivateAccess)\
  ( get_global_var ( 'Op_Instance' ) %f set_visibility_type %( 'PrivateAccess' )% ) 
//	%{Op_Instance}%f_set_uc_content(intf.pas,,\
  ( get_global_var ( 'Op_Instance' ) %f set_uc_content %( 'intf.pas' %, '' %, 
//	 %{Word_Inst}N.Register('компонент::%f_str_replace(%f_N(%S), ,_)', %S%f_pas_ResultTypeName());\
  ' '
  ( get_global_var ( 'Word_Inst' ) |N ) '.Register(''компонент::'
  [%f] str_replace %( [%f] N %( %S )% %, ' ' %, '_' )% '''' %, ' '
  %S %f pas_ResultTypeName %( )% ');'
//	)
)% ) 

//	]\
 %END-IF
//	<%C#f_DoSpell()>
 %FOR %C %?f DoSpell %( )% 
 %END-FOR

//#UC END# *4B2A19E3038Bfor4A794D1700B2*
; // DoSpell


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Исключенные вложенные стереотипы
//~ Component::Class::property::Attribute::Attribute
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<Component>>

