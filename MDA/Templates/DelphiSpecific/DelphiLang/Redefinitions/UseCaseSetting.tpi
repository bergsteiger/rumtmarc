////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/DelphiSpecific/DelphiLang/Redefinitions/UseCaseSetting.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::DelphiSpecific::DelphiLang::Redefinitions::UseCaseSetting
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

: UseCaseSetting::Class (redefinition)
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

%f _st_space_key
	SHD


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа UseCase::Class
%f _DoSpell
//#UC START# *4E302A8B026Cfor4E30ECBB004D*
	%S%[inherited]\
	[{"%S{CodeName}"!=""&%Cx=true}\
	%f_set_var(SELF,S)\
	%f_set_var(VALUES_COUNT,"%{SELF}<{}{%CS=UseCaseSettingValue&"%C{CodeName}"!=""}{C}>")\
	[{%{VALUES_COUNT}N!=0}\
	[{%{VALUES_COUNT}N=2}{\
	%f_set_var(IsBool,"false")\
	}\
	%f_set_var(IsBool,"true")\
	]\
	[{"%{BOOLEAN}N"=""}%f_find_element(46A603BB0391,BOOLEAN)]\
	[{"%{Integer}N"=""}%f_find_element(46A606AC03B2,Integer)]\
	[{"%{TddComboBoxConfigItem}N"=""}%f_find_element(TddComboBoxConfigItem,TddComboBoxConfigItem)]\
	[{"%{TddBaseConfigItem}N"=""}%f_find_element(TddBaseConfigItem,TddBaseConfigItem)]\
	[{"%{TddConfigValue}N"=""}%f_find_element(TddConfigValue,TddConfigValue)]\
	[{"%{l3FillChar}N"=""}%f_find_element(l3FillChar,l3FillChar)]\
	[{"%{Tafw}N"=""}%f_find_element(Tafw,Tafw)]\
	<{}{%LS=VCMUseCaseRealization}\
	%L<{}{%GS=VCMFormsPack}\
	%f_set_var(MOD,G)\
	%f_set_var(PAR,G%P)\

	%{PAR}%f_add_class(%{SELF}U_%{MOD}U_Res,UtilityPack,%f_N(%{MOD})%{SELF}{CodeName}SettingRes,Pack_Inst)\

	[{%{IsBool}N=true}{\
	%{Pack_Inst}%f_add_class(%{Pack_Inst}U_Enum,Enum,%{SELF}{CodeName}Enum,Enum_Inst)\
	%{Enum_Inst}%f_set_documentation(Ключи для настройки "%{SELF}N")\

	%{SELF}<{}{%CS=UseCaseSettingValue&"%C{CodeName}"!=""}\
	%{Enum_Inst}%f_add_attribute(%CU_SettingValue_Key,,\
	KEY_%{SELF}{CodeName}_%C{CodeName},\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(%CN)\

	>\
	}\
	]\

	%{MOD}%f_add_class(%{SELF}U_%{MOD}U_FM,FactoryMethod,%f_N(%{MOD})%{SELF}{CodeName}Setting,FM_Inst)\
	%{FM_Inst}%f_set_visibility_type(PublicAccess)\
	%{FM_Inst}%f_set_documentation(Метод для получения значения настройки "%{SELF}N")\
	%{FM_Inst}%f_make_accessable(%{Tafw}U)\
	%{FM_Inst}%f_add_dependency(%{FM_Inst}U_%{Tafw}U_uses,%{Tafw}U,uses,,USES_Inst)\
	%{FM_Inst}%f_set_up(NO_FACTORY_BRACKECTS,true)\
	%{FM_Inst}%f_add_operation(%{FM_Inst}U_DoIt,,DoIt (): \
	[{%{IsBool}N=true}{\
	%{Integer}U}\
	%{BOOLEAN}U\
	]\
	,Op_Instance)\
	%{Op_Instance}%f_set_documentation(%{FM_Inst}D)\
	%{FM_Inst}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{FM_Inst},%{MOD})_var,\
	 {-}\
	)\
	%{FM_Inst}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{FM_Inst},%{MOD})_impl,\
	 if (afw.Settings = nil) then
	  Result := dv_%f_N(%{MOD})_%{SELF}{CodeName}
	 else
	  Result := afw.Settings.\
	[{%{IsBool}N=true}{\
	LoadInteger\
	}\
	LoadBoolean\
	]\
	(pi_%f_N(%{MOD})_%{SELF}{CodeName}, dv_%f_N(%{MOD})_%{SELF}{CodeName});\
	)\

	%{MOD}%f_add_class(%{SELF}U_%{MOD}U_FM_W,FactoryMethod,Write%f_N(%{MOD})%{SELF}{CodeName}Setting,FM_Inst_W)\
	%{FM_Inst_W}%f_set_visibility_type(PublicAccess)\
	%{FM_Inst_W}%f_set_documentation(Метод для записи значения настройки "%{SELF}N")\
	%{FM_Inst_W}%f_make_accessable(%{Tafw}U)\
	%{FM_Inst_W}%f_add_dependency(%{FM_Inst_W}U_%{Tafw}U_uses,%{Tafw}U,uses,,USES_Inst)\
	%{FM_Inst_W}%f_set_up(NO_FACTORY_BRACKECTS,true)\
	%{FM_Inst_W}%f_add_operation(%{FM_Inst_W}U_DoIt,,DoIt (aValue : \
	[{%{IsBool}N=true}{\
	%{Integer}U}\
	%{BOOLEAN}U\
	]\
	),Op_Instance)\
	%{Op_Instance}%f_set_documentation(%{FM_Inst_W}D)\
	%{FM_Inst_W}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{FM_Inst_W},%{MOD})_var,\
	 {-}\
	)\
	%{FM_Inst_W}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{FM_Inst_W},%{MOD})_impl,\
	 if (afw.Settings \<\> nil) then
	  afw.Settings.\
	[{%{IsBool}N=true}{\
	SaveInteger\
	}\
	SaveBoolean\
	]\
	(pi_%f_N(%{MOD})_%{SELF}{CodeName}, aValue);\
	)\

	%{MOD}%f_add_dependency(%{MOD}U_%{Pack_Inst}U_uses,%{Pack_Inst}U,uses,,USES_Inst)\
	%{Pack_Inst}%f_set_documentation(Ресурсы для настройки "%{SELF}N")\

	%{Pack_Inst}%f_add_class(%{Pack_Inst}U_Key,Constants,%{SELF}{CodeName}Key,Const_Inst)\
	%{Const_Inst}%f_add_attribute(%{Const_Inst}U_Key,,\
	pi_%f_N(%{MOD})_%{SELF}{CodeName} = '%{MOD}D/%{SELF}N',\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(Идентификатор настройки "%{SELF}N")\
	%{Const_Inst}%f_add_attribute(%{Const_Inst}U_DefaultValue,,\
	dv_%f_N(%{MOD})_%{SELF}{CodeName} = \
	[{%{IsBool}N=true}{\
	0\
	}\
	false\
	]\
	,\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(Значение по-умолчанию настройки "%{SELF}N")\

	%{Pack_Inst}%f_add_class(%{Pack_Inst}U_Name,LocalConst,%{SELF}{CodeName}Name,Local_Inst)\
	%{Local_Inst}%f_set_documentation(Имя настройки "%{SELF}N")\
	%{Local_Inst}%f_set_visibility_type(PublicAccess)\
	%{Local_Inst}%f_add_attribute(%SU_SettingName,,\
	%{SELF}{CodeName} = '%{SELF}N',\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(%{SELF}N)\

	%{Pack_Inst}%f_add_class(%{Pack_Inst}U_Values,LocalConst,%{SELF}{CodeName}Values,Local_Inst)\
	[{%{IsBool}N=true}{\
	%{Local_Inst}%f_add_inheritable(%{Enum_Inst}U)\
	}\
	%{Local_Inst}%f_add_inheritable(%{BOOLEAN}U)\
	]\
	%{Local_Inst}%f_set_documentation(Значения для настройки "%{SELF}N")\
	%{Local_Inst}%f_set_visibility_type(PublicAccess)\
	%{Local_Inst}%f_set_up(Need mapping support,true)\
	%{Local_Inst}%f_set_up(Need map interface,true)\
	%{Local_Inst}%f_set_up(elements prefix,%{SELF}{CodeName})\

	%{SELF}<{}{%CS=UseCaseSettingValue&"%C{CodeName}"!=""}\
	%{Local_Inst}%f_add_attribute(%CU_SettingValue,,\
	%C{CodeName} = '%CN',\
	Attr_Inst)\
	%{Attr_Inst}%f_set_documentation(%CN)\

	>\

	%{PAR}%f_add_class(%{SELF}U_%{MOD}U_AppConfig,SimpleClass,Tst%f_N(%{MOD})%{SELF}{CodeName}Item,Class_Inst)\
	%{Class_Inst}%f_make_accessable(%{TddComboBoxConfigItem}U)\
	%{Class_Inst}%f_make_accessable(%{l3FillChar}U)\
	%{Class_Inst}%f_make_accessable(%{TddConfigValue}U)\
	%{Class_Inst}%f_add_inheritable(%{TddComboBoxConfigItem}U)\
	%{Class_Inst}%f_add_dependency(%{Class_Inst}U_%{Pack_Inst}U_uses,%{Pack_Inst}U,uses,,USES_Inst)\
	%{Class_Inst}%f_add_dependency(%{Class_Inst}U_%{l3FillChar}U_uses,%{l3FillChar}U,uses,,USES_Inst)\
	%{Class_Inst}%f_add_dependency(%{Class_Inst}U_%{TddConfigValue}U_uses,%{TddConfigValue}U,uses,,USES_Inst)\
	%{Class_Inst}%f_set_documentation(Визуализатор для настройки "%{SELF}N")\
	%{Class_Inst}%f_add_operation(%{Class_Inst}U_Create,ctor,Create (aMasterItem : %{TddBaseConfigItem}U = nil),Op_Instance)\
	%{Op_Instance}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{Op_Instance},%{Class_Inst})_var,\
	var
	 l_Value : TddConfigValue;\
	)\
	%{Op_Instance}%f_set_uc_content(intf.pas,_%f_pas_MethodOwnerID(%{Op_Instance},%{Class_Inst})_impl,\
	 l3FillChar(l_Value, SizeOf(l_Value));
	 l_Value.Kind := \
	[{%{IsBool}N=true}{\
	dd_vkInteger\
	}\
	dd_vkBoolean\
	]\
	;
	 [{%{IsBool}N=true}{\
	l_Value.AsInteger\
	}\
	l_Value.AsBoolean\
	]\
	 := dv_%f_N(%{MOD})_%{SELF}{CodeName};
	 inherited Create(pi_%f_N(%{MOD})_%{SELF}{CodeName},
	  str_%{SELF}{CodeName}.AsStr,
	  l_Value, T%{SELF}{CodeName}ValuesMapImpl.Make, aMasterItem);\
	)\

	%{MOD}%f_add_dependency(%{MOD}U_%{Class_Inst}U_uses,%{Class_Inst}U,uses,,USES_Inst)\

	>\
	>\
	]\
	]
//#UC END# *4E302A8B026Cfor4E30ECBB004D*


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

