////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/EVDTemplates/Data Definition/Elements/InnerTag.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAClass::Class>> MDProcess$ForDelphi::EVDTemplates::Data Definition::Elements::InnerTag
//
// Вложенный тег
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

//: InnerTag::Class
implementation @ <<InnerTag>>
//? Вложенный тег
//> TagChild::Class
//> InnerTag::Class

//= TagValue::Class

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Функции стереотипа

//%f _st_space_key
: st_space_key OBJECT IN %S
//	SHD
 'SHD'


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Унаследованная реализация

// перекрытие базового стереотипа Delphi интерфейсы и реализация::MDAGenerator
// Реализация на Delphi(.pas)
//+ impl.pas
; // st_space_key

<<generator>> impl.pas OBJECT IN %S
//R  
//#UC START# *470F15B800CBfor485FB5350380*
//	#with cAtom(k2_ti%SN[{%Gx=true}, nil, t_%GN]) do
 out_indent 'with cAtom(k2_ti'
 %S |N %IF ( ( %G |x ) %==  true ) 
  ', nil, t_'
  %G |N 
 %END-IF
 ') do'
//	#begin
 out_indent 'begin'
//	[#<{\n#}{%CC!=Class}%CX>\n]\
 %IF-NOT-EMPTY
  out_indent 
  %FOR %ITEM-SEPARATOR #13#10
   out_indent ; // %ITEM-SEPARATOR 
   %ITEM-CONDITION ( ( %C |C ) %!= 'Class' ) 
   %C |X 
  %END-FOR
  #13#10 
 %END-IF
//	%f_shift_intend(+1)\
//	<{}{%CC=Class}[%CX\n]>\
 %FOR %ITEM-CONDITION ( ( %C |C ) %== 'Class' ) 
  %IF-NOT-EMPTY
   %C |X #13#10 
  %END-IF
 %END-FOR
//	%f_shift_intend(-1)\
//	#end;//with cAtom(k2_ti%SN)
 out_indent 'end;//with cAtom(k2_ti'
 %S |N ')'
//#UC END# *470F15B800CBfor485FB5350380*
; // impl.pas



////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

end. // <<InnerTag>>

