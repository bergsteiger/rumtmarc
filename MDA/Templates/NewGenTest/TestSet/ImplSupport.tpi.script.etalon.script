////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//
// Модуль: "w:/MDProcess/CommonTemplates/CommonLang/PackagesIncludes/ImplSupport.tpi"
// Генерация мета-шаблонов
// Generated from UML model, root element: <<MDAUtilityPack::Class>> MDProcess$Templates::CommonTemplates::CommonLang::PackagesIncludes::ImplSupport
//
// набор вспомогательных функции для генерации пакета реализации
//
//
// Все права принадлежат ООО НПП "Гарант-Сервис".
//
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// нужна ли функция сравнения
//f _need_comp_func
: need_comp_func OBJECT IN %S
//#UC START# *4716ECF50399*
//	[{<{}{%f_used_as_compare_func(%s)=true}{%sC}>!=0}{false}true]
 %IF ( 
  %FOR %ITEM-CONDITION ( ( [%f] used_as_compare_func %( %s )% ) %==  true ) 
   ( %s |C ) 
  %END-FOR
  %!= 0 ) 
  %ELSE
    false 
  %THEN
   true 
 %END-IF
//#UC END# *4716ECF50399*
; // need_comp_func


// возвращает true, если структура генериться в cpp
//f _st_need_impl
: st_need_impl OBJECT IN %S
//#UC START# *4716ECFD01D4*
//	[{%SM=Struct::Class}{false}[{%f_need_less_func(%S)=true|%f_need_comp_func(%S)=true|%S%f_struct_need_impl()=true}{false}true]]
 %IF ( ( %S |M ) %== 'Struct::Class' ) 
  %ELSE
    false 
  %THEN
  %IF ( ( [%f] need_less_func %( %S )% ) %==  true %|| 
    ( ( [%f] need_comp_func %( %S )% ) %==  true  ) %|| 
    ( ( %S %f struct_need_impl %( )% ) %==  true  ) ) 
   %ELSE
     false 
   %THEN
    true 
  %END-IF
 %END-IF
//#UC END# *4716ECFD01D4*
; // st_need_impl


// возвращает true, если нужен cpp-файл
//f _need_impl_cpp
: need_impl_cpp OBJECT IN %S
//#UC START# *4716ED0A0203*
//	[{<{}{%f_st_need_impl(%C)=true|%Ca!=inline&%t_has_impl(%C)=true}{%CC}>!=0|<{}{%f_interface_need_impl(%C)=true}{%CC}>!=0}{false}true]
 %IF ( 
  %FOR %ITEM-CONDITION ( ( [%f] st_need_impl %( %C )% ) %==  true %|| 
    ( ( %C |a ) %!= 'inline'  ) %&& 
    ( ( [%t] has_impl %( %C )% ) %==  true  ) ) 
   ( %C |C ) 
  %END-FOR
  %!= 0 %|| 
   ( 
  %FOR %ITEM-CONDITION ( ( [%f] interface_need_impl %( %C )% ) %==  true ) 
   ( %C |C ) 
  %END-FOR
  %!= 0  ) ) 
  %ELSE
    false 
  %THEN
   true 
 %END-IF

//f _interface_need_impl
; // need_impl_cpp

: interface_need_impl OBJECT IN %S
//	[{[{%SS=LocalInterface|%SS=Facet}{false}true]=true&[{<{}{"%CC"="Operation"&"%CS"="oneway"|"%CS"="oneway,chg"}{%CC}>!=0|%f_has_factory_methods(%S)=true}{false}true]=true}{false}true]
 %IF ( %IF ( ( %S |S ) %== 'LocalInterface' %|| 
    ( ( %S |S ) %== 'Facet'  ) ) 
   %ELSE
     false 
   %THEN
    true 
  %END-IF
  %==  true %&& 
   ( %IF ( 
   %FOR %ITEM-CONDITION ( ( %C |C ) %== 'Operation' %&& 
     ( ( %C |S ) %== 'oneway'  ) %|| 
     ( ( %C |S ) %== 'oneway,chg'  ) ) 
    ( %C |C ) 
   %END-FOR
   %!= 0 %|| 
    ( ( [%f] has_factory_methods %( %S )% ) %==  true  ) ) 
   %ELSE
     false 
   %THEN
    true 
  %END-IF
  %==  true  ) ) 
  %ELSE
    false 
  %THEN
   true 
 %END-IF
//#UC END# *4716ED0A0203*
; // interface_need_impl


// возвращает true, если нужен хедер для классов реалиации
//f _need_impl_header
: need_impl_header OBJECT IN %S
//#UC START# *4716ED100203*
//	[{"<{}{"%CO"=""&%CM!=Settings::Class}{C}>"="0"}{true}false]
 %IF ( 
  %FOR %ITEM-CONDITION ( ( %C |O ) %== '' %&& 
    ( ( %C |M ) %!= 'Settings::Class'  ) ) 
   ( 'C' ) 
  %END-FOR
  %== 0 ) 
  %ELSE
    true 
  %THEN
   false 
 %END-IF
//#UC END# *4716ED100203*
; // need_impl_header


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
