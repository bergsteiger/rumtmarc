<html>
<head>
<title>ReadMe</title>
<meta HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
</head>
<body BGCOLOR="#FFFFFF" TEXT="#000000">
<table WIDTH="100%" BORDER="0" CELLSPACING="5" CELLPADDING="5" BGCOLOR="#660000">
  <tr> 
    <td> 
      <div ALIGN="CENTER"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="6" COLOR="#FFFFFF"><b>TSimpleGraph v2.90</b></font></div>
    </td>
  </tr>
</table>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Copyright &copy; 
  <a HREF="mailto:kambiz@delphiarea.com">Kambiz R. Khojasteh</a>. All rights reserved.<br>
  Get future component updates from <a HREF="http://www.delphiarea.com">http://www.delphiarea.com</a>.<br>
</font></p>
<table BORDER="1" CELLSPACING="2" CELLPADDING="5" BORDERCOLOR="#FFFFFF" ALIGN="LEFT">
  <tr BGCOLOR="#333333" ALIGN="CENTER" VALIGN="MIDDLE"> 
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 4</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 5</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 6</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 7</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 2005 </font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 2006</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 2007</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 2009</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi 2010</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi XE</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi XE2</font></b></td>
    <td NOWRAP><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Delphi XE3</font></b></td>
  </tr>
</table>
<p><br>
  <br>
</p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="4"><b><a NAME="DESCRIPTION"></a><br>DESCRIPTION</b></font></p>
<p> 
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">TSimpleGraph is a visual component, which provides a simple user interface for drawing graphs. The control and its graph objects are fully customizable in the way that let you create almost any kind of graphs. </font></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Currently the control has seven node objects for basic geometric shapes: Triangle, Rhomboid, Rectangle, Round Rectangle, Pentagon, Hexagon, and Ellipse. In addition, by sub classing a class and overriding one or two methods, you can provide your own desired nodes. The line (link) object  of the control is very flexible, and can be hook to other objects or connect them together. </font></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">By the way, the control has also some methods for supporting Delphi's clipboard and printer objects.</font></p>
<p></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="INTERFACE"></a><br>
  <font SIZE="4">INTERFACE</font></b></font></p>
<ul>
  <li><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="3">Classes</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    <br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="6">&nbsp;</td>
        <td BGCOLOR="#EEEEEE" WIDTH="825"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TSimpleGraph"></a>TSimpleGraph 
          = class(TCustomControl)<br>
          </b>TSimpleGraph is a windowed control that provides a canvas for drawing 
          a graph. It also manages relation between graph objects and the application.</font> 
          <p> 
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Properties</font></b></td>
            </tr>
            <tr>
              <td><strong><a NAME="ClipboardFormats"></a><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">ClipboardFormats: TGraphClipboardFormats<br>
                TGraphClipboardFormats = set of (cfNative, cfMetafile, cfBitmap)</font></strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                Determines which formats should be used for copying graph contents in to the Windows clipboard.</font>
                <p> </p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr VALIGN="TOP">
                    <td WIDTH="15%"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cfNative</b></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">CF_SIMPLEGRAPH</font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Graph copies in to the clipboard as native format. <a HREF="#PasteFromClipboard">PasteFromClipboard</a> only supports  this format. </font></td>
                  </tr>
                  <tr VALIGN="TOP">
                    <td WIDTH="15%"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cfMetafile</b></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">CF_ENHMETAFILE</font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Graph copies in to the clipboard as an enhanced metafile. </font></td>
                  </tr>
                  <tr VALIGN="TOP">
                    <td WIDTH="15%"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cfBitmap</b></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">CF_BITMAP</font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Graph copies in to the clipboard as a device dependent bitmap. </font> </td>
                  </tr>
                </table>
              <p>&nbsp;</p></td>
            </tr>
            <tr> 
              <td> 
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="CommandMode"></a>CommandMode: 
                  TGraphCommandMode<br>
                  TGraphCommandMode = (cmViewOnly, cmEdit, cmInsertNode, cmLinkNodes)</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                  Determines which kind of commands are available to the user.</font> 
                </p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr> 
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmViewOnly</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                      user cannot modify placement of the objects.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>cmPan</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The user can pan the graph by dragging mouse. </font></td>
                  </tr>
                  <tr> 
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmEdit</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                      user can modify objects by mouse and/or keyboard. </font></td>
                  </tr>
                  <tr> 
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmInsertNode</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                      The user can insert a new node object. When user inserted a node, this mode automaticalley changes to cmEdit. </font></td>
                  </tr>
                  <tr> 
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>cmInsertLink</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                      user can insert a new link object. When user inserted a link, this mode automaticalley changes to cmEdit. </font></td>
                  </tr>
                </table>
                <br>
              </td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="CursorPos"></a><strong>CursorPos: TPoint</strong><br>
              Determines the current mouse cursor position in graph coordinates. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="DefaultLinkClass"></a>DefaultLinkClass: 
                <a HREF="#TGraphLinkClass">TGraphLinkClass</a> </b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><br>
                </b>Determines the class that should be used for a new link object.</font></td>
            </tr>
            <tr> 
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="DefaultNodeClass"></a>DefaultNodeClass: 
                <a HREF="#TGraphNodeClass">TGraphNodeClass</a> </b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><br>
                </b>Determines the class that should be used for a new node object.</font></td>
            </tr>
            <tr>
              <td>
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>DefaultKeyMap: Boolean<br>
                  </b>Indicates whether the control internally handle the keyboard shortcuts entered by the user. See <a HREF="#KEY_MAPPING">Keyboard Shortcuts</a> for the default key mapping.</font></p></td>
            </tr>
            <tr>
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="DraggingBounds"></a>DraggingBounds: TRect </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the smallest visual bounding rectangle of the graph objects being dragged in graph coordinates.</font></td>
            </tr>
            <tr>
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="DraggingObjects"></a>DraggingObjects: <a HREF="#TGraphObjectList">TGraphObjectList</a><br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Contains the list of graph objects being dragged. The first object in the list is source of the drag, and the rest are objects following the drag. </font></td>
            </tr>
            <tr>
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="DragSource" ID="DragSource"></a>DragSource: <a HREF="#TGraphObject">TGraphObject</a> </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
              </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the object being dragged.</font></td>
            </tr>
            <tr>
              <td>
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="DrawOrder" ID="DrawOrder"></a>DrawOrder: TGraphDrawOrder<br>
      TDrawOrder = (doDefault, doNodesOnTop, doLinksOnTop)</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
      Determines the z-order of objects.</font> </p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>doDefault</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The objects draw as they ordered in the <a HREF="#Objects">Objects</a> list. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>doNodesOnTop</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The nodes appear on top of the links.</font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>doLinksOnTop</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The links appear on top of the nodes.</font></td>
                  </tr>
                </table>
                <br>
              </td>
            </tr>
            <tr>
              <td><font SIZE="2"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="FixedScrollBars"></a>FixedScrollBars: Boolean</font></strong> <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                Determines how range of scroll bars should be calculated. When FixedScrollBars is False, the range of scroll bars determines using the graph bounding rectangle, otherwise the range is calculated using graph constraints bounding rectangle.</font></font> </td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="GraphBounds"></a>GraphBounds: 
                TRect </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the smallest visual bounding rectangle of the all visible graph objects 
                in graph coordinates.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="GraphConstraints"></a>GraphConstraints: <a HREF="#TGraphConstraints">TGraphConstraints</a></strong><br>
              Specifies the minimum and maximum coordinates of the objects in the graph. </font></td>
            </tr>
            <tr> 
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>GridColor: 
                TColor</b><br>
                Determines the color of the grid.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="GridSize"></a>GridSize: 
                TGridSize<br>
                TGridSize = 4..128<br>
                </b>Determines the grid spacing in graph's unit along the x- and 
                y-axis.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="HideSelection"></a><b>HideSelection: 
                Boolean</b><br>
                Determines whether the visual indication of the selected grpah 
                objects remains when focus shifts to another control.</font></td>
            </tr>
            <tr> 
              <td> 
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>HorzScrollBar: 
                  <a HREF="#TGraphScrollBar">TGraphScrollBar</a></b><br>
                  Represents the horizontal scroll bar for the scrolling the graph. 
                  </font></p>
              </td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="LockLinks"></a>LockLinks: Boolean</b><br>
    Indicates whether the user can move  graph links by mouse or keyboard.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="LockNodes"></a>LockNodes: 
                Boolean</b><br>
                Indicates whether the user can move or resize graph nodes by 
                mouse or keyboard.</font></td>
            </tr>
            <tr>
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="ObjectAtCursor" ID="ObjectAtCursor"></a>ObjectAtCursor: <a HREF="#TGraphObject">TGraphObject</a> </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                    </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies the last object found under the mouse cursor.</font></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="Objects"></a>Objects: 
                <a HREF="#TGraphObjectList">TGraphObjectList</a><br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Contains 
                the list of graph objects in the graph.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>ObjectPopupMenu: 
                TPopupMenu</b><br>
                Identifies the pop-up menu associated with the graph's objects. 
                </font></td>
            </tr>
            <tr> 
              <td> 
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>MarkerColor: 
                  TColor</b><br>
                  Determines the color of the selection marker.</font></p>
              </td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>MarkerSize: 
                TMarkerSize</b><br>
                <b>TMarkerSize = 3..9</b><br>
                Determines the size of the selection marker in pixels.</font></td>
            </tr>
            <tr> 
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="MinNodeSize"></a>MinNodeSize: 
                Word</b><br>
                Specifies the minimum nodes' with and height in pixels.</font></td>
            </tr>
            <tr> 
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Modified: 
                Boolean</b><br>
                Indicates whether the graph is modified.</font></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">SelectedObjects: 
                <a HREF="#TGraphObjectList">TGraphObjectList</a><br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Contains 
                the list of selected graph objects in the graph.</font></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="SelectionBounds"></a>SelectionBounds: 
                TRect </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the smallest visual bounding rectangle of the selected graph objects 
                in graph coordinates.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>ShowGrid: 
                Boolean</b><br>
                Indicates whether the control shows dot grids on the designer.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>ShowHiddenObjects: 
                Boolean</b><br>
                Indicates whether the control shows graph objects, which are not 
                vissible.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="SnapToGrid"></a>SnapToGrid: 
                Boolean</b><br>
                Indicates whether the control automatically aligns graph objects 
                on the designer with the nearest gridline.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="Transparent"></a>Transparent: Boolean</strong> <br>
              Specifies whether the background of the control is transparent.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>VertScrollBar: 
                <a HREF="#TGraphScrollBar">TGraphScrollBar</a></b><br>
                Represents the vertical scroll bar for the scrolling the graph. 
                </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="VisibleBounds"></a><b>VisibleBounds:</b><b> 
                TRect </b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Specifies the bounding rectangle of the visible part of the graph 
                in graph's unit.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="Zoom"></a><b>Zoom: 
                TZoom</b><br>
                <strong>TZoom = 5..36863</strong><br>
                Specifies the control's zoom factor in percent.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Events</font></b></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnAfterDraw"></a>OnAfterDraw: TGraphDrawEvent;</b><br>
                  <strong>TGraphDrawEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; Canvas: TCanvas) of object;</strong><br>
Occurs after drawing the graph on the canvas.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnBeforeDraw"></a>OnBeforeDraw: TGraphDrawEvent;</b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                  <strong>TGraphDrawEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; Canvas: TCanvas) of object;</strong><br>
Occurs just before the graph being drawn on the canvas.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnCanHookLink"></a>OnCanHookLink: TGraphCanHookEvent;</b><br>
                    <b>TGraphCanHookEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; Link: <a HREF="#TGraphLink">TGraphLink</a>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>; Index: Integer; var CanHook: Boolean) of object;</b><br>
    Occurs when an attempt is made to hook a point of the link to an object. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnCanLinkObjects"></a>OnCanLinkObjects: 
                TGraphCanLinkEvent;</b><br>
                <b>TGraphCanLinkEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; Link: <a HREF="#TGraphLink">TGraphLink</a>; Source, 
                Target: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>; var CanLink: Boolean) of object;</b><br>
                Occurs when an attempt is made to connect two objects together. </font></td>
            </tr>
            <tr> 
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="OnCanMoveResizeNode"></a>OnCanMoveResizeNode: 
                TCanMoveResizeNodeEvent;<br>
                TCanMoveResizeNodeEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; Node: 
                <a HREF="#TGraphNode">TGraphNode</a>; var NewLeft, NewTop, NewWidth, NewHeight: Integer; 
                var CanMove, CanResize: Boolean) of object; <br>
                </b>Occurs when an attempt is made to resize or move a node.</font></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="OnCanRemoveObject"></a>OnCanRemoveObject: TGraphCanRemoveEvent; <br>
              TGraphCanRemoveEvent: procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>; var CanRemove: Boolean);</strong><br>
              Occurs just before object being removed. </font></p>              </td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnCommandModeChange"></a>OnCommandModeChange: 
                TNotifyEvent;</b><br>
                Occurs when <a HREF="#CommandMode">CommandMode</a> is changed.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnGraphChange"></a>OnGraphChange: 
                TNotifyEvent;</b><br>
                Occurs when the graph is changed.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="OnInfoTip"></a>OnInfoTip: TGraphInfoTipEvent;<br>
                TGraphInfoTipEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>;
    var InfoTip: String) of object;<br>
              </strong>Occurs when the user pauses the mouse over an object in the graph.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2"><strong><a NAME="OnMoveResizeNode" ID="OnMoveResizeNode"></a><font FACE="Verdana, Arial, Helvetica, sans-serif">OnMoveResize<font SIZE="2"><strong>Node</strong></font> = TGraph<font SIZE="2"><strong>Node</strong></font>ResizeEvent;<br>
  TGraph<font SIZE="2"><strong>Node</strong></font></font><font FACE="Verdana, Arial, Helvetica, sans-serif">ResizeEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; Node: <a HREF="#TGraphNode">TGraphNode</a>) of object;<br>
                </font></strong><font FACE="Verdana, Arial, Helvetica, sans-serif">Occurs when a node is moved or resized.</font></font><font SIZE="2">&nbsp; </font></td>
            </tr>
            <tr>
              <td><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="OnObjectAfterDraw"></a>OnObjectAfterDraw: TGraphObjectDrawEvent;<br>
              TGraphObjectDrawEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>; Canvas: TCanvas) of object;<br>
              </font></strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Occurs after drawing the graph object on the canvas.</font>              </td>
            </tr>
            <tr>
              <td><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="OnObjectBeforeDraw"></a>OnObjectBeforeDraw: TGraphObjectDrawEvent;<br>
    TGraphObjectDrawEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>; Canvas: TCanvas) of object;<br>
              </font></strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Occurs just before the graph object being drawn on the canvas.</font></td>
            </tr>
            <tr>
              <td><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="OnObjectBeginDrag" ID="OnObjectBeginDrag"></a>OnObjectBeginDrag: TGraphBeginDragEvent;<br>
    </font></strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>TGraphBeginDragEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>; HT: DWORD) of object; </b><br>
Occurs just after the graph object is initiated to drag. Consider that other selected object may follow the drag operation, however this event occurs only for the drag source. </font></td>
            </tr>
            <tr>
              <td><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="OnObjectEndDrag" ID="OnObjectEndDrag"></a>OnObjectEndDrag: TGraphEndDragEvent;<br>
                </font></strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>TGraphEndDragEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>; HT: DWORD; Cancelled: Boolean) of object; </b><br>
    Occurs just after the graph object finished to drag. Consider that other selected object may follow the drag operation, however this event occurs only for the drag source. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectContextPopup"></a>OnObjectContextPopup: 
                TGraphContextPopupEvent;</b><br>
                <b>TGraphContextPopupEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: 
                </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>; const MousePos: TPoint; var Handled: Boolean) of 
                object;<br>
                </b>Occurs when the user right-clicks on a graph object. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectClick" ID="OnObjectClick"></a>OnObjectClick: TGraphNotifyEvent;</b><br>
                    <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; </b><br>
    Occurs when  user clicks on a graph object.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectDblClick"></a>OnObjectDblClick: 
                TGraphNotifyEvent;</b><br>
                <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: 
                </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; </b><br>
                Occurs when user double clicks on a graph object.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectHook" ID="OnObjectHook"></a>OnObjectHook: TGraphHookEvent;</b><br>
                <b>TGraphHookEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>; Link: <a HREF="#TGraphLink">TGraphLink</a>; Index: Integer) of object; <br>
              </b>Occurs when a link is hooked to a graph object.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectUnhook" ID="OnObjectUnhook"></a>OnObjectUnhook: TGraphHookEvent;</b><br>
                    <b>TGraphHookEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>; Link: <a HREF="#TGraphLink">TGraphLink</a>; Index: Integer) of object; <br>
              </b>Occurs when  a link is unhooked from a graph object.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectInitInstance" ID="OnObjectInitInstance"></a>OnObjectInitInstance: TGraphNotifyEvent;</b><br>
                    <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; <br>
                  </b>Occurs when a new graph object is being created. In this stage, the graph object is not inserted on the graph yet. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectInsert"></a>OnObjectInsert: 
                TGraphNotifyEvent;</b><br>
                <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: 
                </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; </b><b><br>
                </b>Occurs when a new graph object is added to the graph.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectRemove"></a>OnObjectRemove: 
                TGraphNotifyEvent;</b><br>
                <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: 
                </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; </b><b><br>
                </b>Occurs when a graph object is removed from the graph.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectChange" ID="OnObjectChange"></a>OnObjectChange: TGraphNotifyEvent;</b><br>
                    <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; <br>
                  </b>Occurs when a graph object is changed.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectSelect"></a>OnObjectSelect: 
                TGraphNotifyEvent;</b><br>
                <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: 
                </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; <br>
                </b>Occurs when a graph object is selected/deselected in the graph. Use <a HREF="#Selected">Selected</a> property of the object to determine whether it is selected or deselected. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="OnObjectRead"></a>OnObjectRead: TGraphStreamEvent;<br>
                TGraphStreamEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>; Stream: TStream) of object;<br>
              </strong>Occurs  when property settings of a graph object is being read, and the graph object has some custom data. The event handler can read custom data from the stream passed as parameter. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="OnObjectWrite" ID="OnObjectWrite"></a>OnObjectWrite: TGraphStreamEvent;<br>
    TGraphStreamEvent = procedure(Graph: <a HREF="#TSimpleGraph">TSimpleGraph</a>; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>; Stream: TStream) of object;<br>
              </strong>Occurs when property settings of a graph object is being written, and <a HREF="#HasCustomData">HasCustomData</a> property of the graph object is True. The event handler can write custom data in to the stream passed as parameter. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectMouseEnter" ID="OnObjectMouseEnter"></a>OnObjectMouseEnter: TGraphNotifyEvent;</b><br>
                    <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; <br>
                  </b>Occurs when the mouse pointer moves over the graph object. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OnObjectMouseLeave" ID="OnObjectMouseLeave"></a>OnObjectMouseLeave: TGraphNotifyEvent;</b><br>
                    <b>TGraphNotifyEvent = procedure(Graph: </b><strong><a HREF="#TSimpleGraph">TSimpleGraph</a></strong><b>; GraphObject: </b><strong><a HREF="#TGraphObject">TGraphObject</a></strong><b>) of object; <br>
                  </b>Occurs when the mouse pointer moves off from over the graph object. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="OnZoomChange"></a>OnZoomChange: TNotifyEvent;</strong><br>
                Occurs when zoom property changes. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Methods</font></b></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure 
                BeginUpdate;</b><br>
                Suspends screen repainting. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure 
                EndUpdate;</b><br>
                Re-enables screen repainting.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Draw"></a>procedure 
                Draw(Canvas: TCanvas); <br>
              </b>Draws the graph  in its actual size on the given canvas. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Print"></a>procedure 
                Print(Canvas: TCanvas; const Rect: TRect); <br>
                </b>Draws the graph on the canvas in the rectangle specified by 
                the Rect parameter. The Print method maintains the original aspect 
                ratio of the graph. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ToggleSelection" ID="ToggleSelection"></a>procedure ToggleSelection(const Rect: TRect; KeepOld: Boolean; GraphObjectClass: <a HREF="#TGraphObjectClass">TGraphObjectClass</a> = nil);<br>
                </b>Toggles selection state of the objects that intersects the given rectangle. If GraphObjectClass parameter is not nil, the function only toggles selection of  graph objects in the specified class type. When KeepOld is True, the function keeps the previous selected objects still selected, otherwise it deselects them.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="FindObjectAt"></a></b><strong>function FindObjectAt(X, Y: Integer; LookAfter: <a HREF="#TGraphObject">TGraphObject</a> = nil ): <a HREF="#TGraphObject">TGraphObject</a>;<br>
</strong>Returns the graph object that contains the specified point. If no graph object found, the return value is nil. The function starts searching from the graph objects behind the graph object specified by the LookAfter parameter. If LookAfter parameter is nil, the search starts from the top most graph object. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="FindObjectByID"></a>function FindObjectByID(ID: DWORD): <a HREF="#TGraphObject">TGraphObject</a>;</strong><br>
                Returns graph object, which its <a HREF="#UniqueID">UniqueID</a> is equal to the value specified by the ID parameter. The function returns nil if search fails. </font></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ForEachObject"></a>function ForEachObject(Callback: TGraphForEachMethod; UserData: Integer;
  Selection: Boolean = False): Integer;<br>
  TGraphForEachMethod = function(GraphObject: TGraphObject; UserData: Integer): Boolean of object;<br>
              </strong>Enumerates all objects (or selected objects) on the graph by passing each object, in turn, to an application-defined callback method specified by the Callback parameter. The function continues until the last object is enumerated or the callback method returns False. The function returns the number of enumerated objects.<br>
                </font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">If the Selection parameter is True, the callback method enumerates only selected objects; otherwise it enumerates all the objects. 
                The UserData parameter specifies a 32-bit, application-defined value to be passed to the callback method. <br>
              </font></p>              </td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="InsertNode"></a>function 
                InsertNode(const Bounds: TRect; ANodeClass: <a HREF="#TGraphNodeClass">TGraphNodeClass</a> 
                = nil): <a HREF="#TGraphNode">TGraphNode</a>;<br>
                </b>Inserts a new node object on the graph, and initiates its bounding rectangle with the rectangle specified by the Bounds paraneter. ANodeClass 
                parameter specifies the node class  of the new node object. 
                If ANodeClass is nil, the function creates the node using <a HREF="#DefaultNodeClass">DefaultNodeClass</a> property. The function returns the new inserted node, or nil on case of failure. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="InsertLink"></a>function InsertLink(Source, Target: <a HREF="#TGraphObject">TGraphObject</a>;
ALinkClass: <a HREF="#TGraphLinkClass">TGraphLinkClass</a> = nil): <a HREF="#TGraphLink">TGraphLink</a>;<br>
                </b>Inserts a new link object to connect the two objects specified by Source and Target parameters.  ALinkClass parameter specifies the class  
                of the new link object. If ALinkClass is nil, the function creates 
                the link using <a HREF="#DefaultLinkClass">DefaultLinkClass</a> property. The function returns the new inserted link, or nil on case of failure. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function InsertLink(Source: <a HREF="#TGraphObject">TGraphObject</a>; const Pts: array of TPoint; ALinkClass: <a HREF="#TGraphLinkClass">TGraphLinkClass</a> = nil): <a HREF="#TGraphLink">TGraphLink</a>;<br>
                </b>Inserts a new link object, which its breakpoints and endpoint are specified by the Pts parameter. The startpoint of the link, hooks to the object specified by the Source parameter.  ALinkClass parameter specifies the class  
                of the new link object. If ALinkClass is nil, the function creates 
                the link using <a HREF="#DefaultLinkClass">DefaultLinkClass</a> property. The function returns the new inserted link, or nil on case of failure. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function InsertLink(const Pts: array of TPoint; Target: <a HREF="#TGraphObject">TGraphObject</a>; ALinkClass: <a HREF="#TGraphLinkClass">TGraphLinkClass</a> = nil): <a HREF="#TGraphLink">TGraphLink</a>;<br>
              </b>Inserts a new link object, which its startpoint and breakpoints are specified by the Pts parameter. The endpoint of the link, hooks to the object specified by the Target parameter.  ALinkClass parameter specifies the class  
                of the new link object. If ALinkClass is nil, the function creates 
              the link using <a HREF="#DefaultLinkClass">DefaultLinkClass</a> property. The function returns the new inserted link, or nil on case of failure. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function InsertLink(const Pts: array of TPoint; ALinkClass: <a HREF="#TGraphLinkClass">TGraphLinkClass</a> = nil): <a HREF="#TGraphLink">TGraphLink</a>;<br>
              </b>Inserts a new link object, which its startpoint, breakpoints, and endpoint are specified by the Pts parameter.  ALinkClass parameter specifies the class  
                of the new link object. If ALinkClass is nil, the function creates 
              the link using <a HREF="#DefaultLinkClass">DefaultLinkClass</a> property. The function returns the new inserted link, or nil on case of failure. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>procedure Invalidate;</strong><br>
              Completely repaints control.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="InvalidateRect"></a>procedure InvalidateRect(const Rect: TRect);</strong><br>
                Repaints a rectangular area of the control. Rectangle coordinates are in graph coordinates. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ScrollCenter" ID="ScrollCenter"></a>procedure ScrollCenter(GraphObject: <a HREF="#TGraphObject">TGraphObject</a>); <br>
    procedure ScrollCenter(const Rect: TRect); <br>
    procedure ScrollCenter(const Point: TPoint); <br>
                </b>Scrolls a graph object, rectangle, or point into center of the control's client area.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ScrollInView"></a>procedure 
                ScrollInView(GraphObject: <a HREF="#TGraphObject">TGraphObject</a>); 
                <br>
                procedure ScrollInView(const Rect: TRect); <br>
                procedure ScrollInView(const Point: TPoint); <br>
                </b>Scrolls a graph object, rectangle, or point into the visible 
                area of the control.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ZoomRect"></a>function 
                ZoomRect(const Rect: TRect): Boolean;</b><br>
                Zooms the view, so that the specified rectangle fits the client 
                area of the control.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ZoomObject"></a>function 
                ZoomObject(GraphObject: TGraphObject): Boolean;</b><br>
                Zooms the view, so that the specified object fits the client area 
                of the control.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ZoomSelection"></a>function 
                ZoomSelection: Boolean;</b><br>
                Zooms the view, so that the selected objects fit the client area 
                of the control.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ZoomGraph"></a>function 
                ZoomGraph: Boolean;</b><br>
                Zooms the view, so that the graph entirly fits the client area 
                of the control.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ChangeZoom"></a>function ChangeZoom(NewZoom: Integer; Origin: TGraphZoomOrigin): Boolean;<br>
                TGraphZoomOrigin = (zoTopLeft, zoCenter, zoCursor); <br>
                </strong>Sets zoom factor to the value specified by the NewZoom parameter. The Origin parameter determines how the zoomed area appears on the client area of the control. </font>
                <p></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">zoTopLeft</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Tries to keep top left cornor of the current view visible. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">zoCenter</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Tries to keep the center of the current view, still centered. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">zoCursor</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Tries to keep the point under cursor, still under cursor.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">zoCursorCenter</font></strong></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Tries to move the point under cursor to the center of view. </font></td>
                  </tr>
                </table>
                <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ChangeZoomBy" ID="ChangeZoomBy"></a>function ChangeZoomBy(Delta: Integer; Origin: TGraphZoomOrigin): Boolean;<br>
    TGraphZoomOrigin = (zoTopLeft, zoCenter, zoCursor);<br>
              </strong>Changes zoom factor by the value specified by the Delta parameter. The Origin parameter determines how the zoomed area appears on the client area of the control. </font>
                <p></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">zoTopLeft</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Tries to keep top left cornor of the current view visible. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">zoCenter</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Tries to keep the center of the current view, still centered. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">zoCursor</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Tries to keep the point under cursor, still under cursor.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">zoCursorCenter</font></strong></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Tries to move the point under cursor to the center of view. </font></td>
                  </tr>
                </table>
              <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="AlignSelection"></a>function AlignSelection(Horz: THAlignOption; Vert: TVAlignOption): Boolean;<br>
      THAlignOption = (haNoChange, haLeft, haCenter, haRight, haSpaceEqually);<br>
      TVAlignOption = (vaNoChange, vaTop, vaCenter, vaBottom, vaSpaceEqually);</strong><br>
      Lines up selected objects in relation to each other. </font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The function returns True if at least one object resizes, otherwise returns False.</font> </p>
                  <p></p>
                  <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                    <tr>
                      <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">haNoChange</font></strong></td>
                      <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Does not change the alignment of the object. </font></td>
                    </tr>
                    <tr>
                      <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">haLeft</font></strong></td>
                      <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up the left edges of the selected objects .</font></td>
                    </tr>
                    <tr>
                      <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">haCenter</font></strong></td>
                      <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up horizontally the centers of the selected objects.</font></td>
                    </tr>
                    <tr>
                      <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">haRight</font></strong></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up the right edges of the selected objects. </font></td>
                    </tr>
                    <tr>
                      <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">haSpaceEqually</font></strong></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up the selected objects horizontally equidistant from each other.</font></td>
                    </tr>
                  </table>
                  <p></p>
                  <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                    <tr>
                      <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">vaNoChange</font></strong></td>
                      <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Does not change the alignment of the object. </font></td>
                    </tr>
                    <tr>
                      <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">vaTop</font></strong></td>
                      <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up the top edges of the selected objects .</font></td>
                    </tr>
                    <tr>
                      <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">vaCenter</font></strong></td>
                      <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up vertically the centers of the selected objects.</font></td>
                    </tr>
                    <tr>
                      <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">vaBottom</font></strong></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up the bottom edges of the selected objects. </font></td>
                    </tr>
                    <tr>
                      <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">vaSpaceEqually</font></strong></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                      <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Lines up the selected objects vertically equidistant from each other.</font></td>
                    </tr>
                  </table>
                  <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ResizeSelection" ID="ResizeSelection"></a>function ResizeSelection(Horz, Vert: TResizeOption): Boolean;<br>
    TResizeOption = (roNoChange, roSmallest, roLargest);<br>
                </strong></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Resizes selected objects to be exactly the same height or width. The function returns True if at least one object resizes, otherwise returns False.</font>
                <p></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>roNoChange</strong></font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Does not change the size of the components.</font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>roSmallest</strong></font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Resizes the selected objects to the height or width of the smallest selected object.</font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>roLargest</strong></font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Resizes the selected object to the height or width of the largest selected object.</font></td>
                  </tr>
                </table>
                <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="SnapPoint"></a>function SnapPoint(const Pt: TPoint): TPoint;</strong><br>
    Returns the closest grid point to the given point. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="SnapOffset" ID="SnapOffset"></a>procedure SnapOffset(const Pt: TPoint; var dX, dY: Integer);</strong><br>
                Adjusts dX and dY parameters in the way that offseting the point specified by the Pt parameter by these values, moves the point on the closest grid point. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ClientToGraph"></a>function 
                ClientToGraph(X, Y: Integer): TPoint;</b><br>
                Converts X and Y pair of values from the client coordinates to 
                the graph cordinates.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="GraphToClient"></a>function 
                GraphToClient(X, Y: Integer): TPoint;</b><br>
                Converts X and Y pair of values from the graph coordinates to 
                the client cordinates.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ScreenToGraph" ID="ScreenToGraph"></a>function ScreenToGraph(X, Y: Integer): TPoint;</b><br>
    Converts X and Y pair of values from the screen coordinates to the graph cordinates.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="GraphToScreen" ID="GraphToScreen"></a>function GraphToScreen(X, Y: Integer): TPoint;</b><br>
    Converts X and Y pair of values from the graph coordinates to the screen cordinates.</font></td>
            </tr>
            <tr> 
              <td> 
                <p><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">function 
                  FindNextObject(StartIndex: Integer; Inclusive, Backward, Wrap: 
                  Boolean; GraphObjectClass: <a HREF="#TGraphObjectClass">TGraphObjectClass</a> 
                  = nil): <a HREF="#TGraphObject">TGraphObject</a>;<br>
                  </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Call 
                  FindNextObject to search for a graph object as type specified 
                  by the GraphObjectClass parameter. If the Inclusive parameter 
                  is True, the graph object specified by StartIndex is the first 
                  item checked. Otherwise, the search starts on the next object. 
                  If the Wrap parameter is True, the search continues at the top 
                  of z-order if a match has not been found before reaching the 
                  bottom. If Backward is False, FindNextObject searches forward 
                  through the graph objects in z-order, otherwise it searches 
                  backward through the graph objects.</font></p>
              </td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function 
                SelectNextObject(Backward: Boolean; GraphObjectClass: <a HREF="#TGraphObjectClass">TGraphObjectClass</a> 
                = nil): Boolean;<br>
                </b>Moves the selection to the next selectable graph object as the specified 
                type in the z-order.<b> </b>If Backward is False, SelectNextObject 
                searches forward through the graph objects in z-order, otherwise 
                it searches backward through the graph objects. If SelectNextObject 
                does not locate an appropriate graph object, the current selection 
                will remain unchanged and the function returns False.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function 
                ObjectsCount(GraphObjectClass: <a HREF="#TGraphObjectClass">TGraphObjectClass</a> 
                = nil): Integer;<br>
                </b>Returns the number of graph objects as the specified type. 
                </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function 
                SelectedObjectsCount(GraphObjectClass: <a HREF="#TGraphObjectClass">TGraphObjectClass</a> 
                = nil): Integer; <br>
                </b>Returns the number of selected graph objects as the specified 
                type.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="SaveAsMetafile"></a>procedure 
                SaveAsMetafile(const Filename: String);</b><br>
                Saves the graph to a file as Windows Enhanced Metafile image.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="SaveAsBitmap" ID="SaveAsBitmap"></a>procedure SaveAsBitmap(const Filename: String);</b><br>
    Saves the graph to a file as a 24bit Bitmap image.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="GraphLoadFromStream"></a>procedure 
                LoadFromStream(Stream: TStream);<br>
              </b>Loads a graph from a stream in to the control. This function clears the previous content of the control. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="GraphLoadFromFile"></a>procedure LoadFromFile(const Filename: String);<br>
              </b>Loads a graph from a file in to the control. This function clears the previous content of the control. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="GraphSaveToStream"></a>procedure 
                SaveToStream(Stream: TStream);<br>
                </b>Saves the graph in to a stream.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="GraphSaveToFile"></a>procedure 
                SaveToFile(const Filename: String);<br>
                </b>Saves the graph to a file. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="MergeFromStream"></a>procedure MergeFromStream(Stream: TStream; OffsetX, OffsetY: Integer);</strong><br>
                Loads a graph from a stream and inserts it at the position specified by OffsetX and OffsetY parameters. This functions keeps the old content of the cotrol unchanged. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="MergeFromFile" ID="MergeFromFile"></a>procedure MergeFromFile(const FileName: String; OffsetX, OffsetY: Integer);</strong><br>
    Loads a graph from a file and inserts it at the position specified by OffsetX and OffsetY parameters. This functions keeps the old content of the cotrol unchanged. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="CopyToGraphic"></a>procedure CopyToGraphic(Graphic: TGraphic);</strong><br>
                Copies the graph in to the image specified by the Graphic parameter. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="CopyToClipboard"></a>procedure 
                CopyToClipboard(Selection: Boolean = True);<br>
                </b>Copies the selected graph objects to the Clipboard. When Selection parameter is False, the function copies 
                all the graph objects to the Clipboard. See <a HREF="#ClipboardFormats">ClipboardFormats</a> property for the supported clipboard formats. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="PasteFromClipboard"></a>function 
                PasteFromClipboard: Boolean; <br>
                </b>Pastes the contents of the clipboard into the control. If 
                the Clipboard is empty, or  its content is not in 
                CF_SIMPLEGRAPH format (<a HREF="#ClipboardFormats">cfNative</a>), PasteFromClipboard does nothing, and function returns False.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ClearSelection"></a>procedure ClearSelection;<br>
              </b>Resets selection state of all objects. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure 
                Clear;<br>
                </b>Removes all the graph objects from the control.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>class 
                procedure Register(ANodeClass: <a HREF="#TGraphNodeClass">TGraphNodeClass</a>); 
                overload;<br>
                class procedure Register(ALinkClass: <a HREF="#TGraphLinkClass">TGraphLinkClass</a>); 
                overload;</b><br>
                Registers a node or link class type for being use in <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>class 
                procedure Unregister(ANodeClass: <a HREF="#TGraphNodeClass">TGraphNodeClass</a>); 
                overload;<br>
                class procedure Unregister(ALinkClass: <a HREF="#TGraphLinkClass">TGraphLinkClass</a>); 
                overload;</b><br>
                Unregisters a node or link class type from <a HREF="#TSimpleGraph">TSimpleGraph</a>. 
                If an object class type is not registered, loading a graph that 
                uses that kind of object fails.</font></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">class 
                function NodeClasses(Index: Integer): <a HREF="#TGraphNodeClass">TGraphNodeClass</a>;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Returns 
                the node class type at the specified index.</font></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">class 
                function LinkClasses(Index: Integer): <a HREF="#TGraphLinkClass">TGraphLinkClass</a>;<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Returns 
                the link class type at the specified index.</font></td>
            </tr>
            <tr> 
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>class 
                function NodeClassCount: Integer;<br>
                </b>Returns the number of registered node class types.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>class 
                function LinkClassCount: Integer;</b><br>
                Returns the number of registered link class types.</font></td>
            </tr>
          </table>
          <br>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font></b>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TGraphConstraints" ID="TGraphConstraints"></a>TGraphConstraints = class(TPersistent)<br>
            </b>Contains bound constraints of the graph. </font></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Properties</font></b></td>
            </tr>
            <tr>
              <td COLSPAN="2">
                <p><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">MinLeft: Integer<br>
              </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Specifies the minumum horizontal coordinates in pixels.</font> </p></td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">MinTop: Integer<br>
              </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Specifies the minumum vartical coordinate ins pixels.</font> </td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">MaxRight: Integer<br>
              </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Specifies the maximum horizontal coordinates in pixels.</font> </td>
            </tr>
            <tr>
              <td COLSPAN="2"><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">MaxBottom: Integer<br>
              </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Specifies the maximum vartical coordinates in pixels.</font> </td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif">BoundsRect: TRect</font></strong> <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                Specifies the bounding rectangle of the constraints. </font></font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="SourceRect" ID="SourceRect"></a>SourceRect: TRect</strong><br>
              Specifies the rectangle that <a HREF="#ConfineOffset">ConfineOffset</a> method checks its bounds against the constraint's bounds. </font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif">Owner: <a HREF="#TSimpleGraph">TSimpleGraph</a></font></strong> <font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                Determines the owner graph of the constraints.</font></font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Events</font></b></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>OnChange: TNotifyEvent;</b><br>
                    Occurs when the constraints change.</font></td>
            </tr>
          </table>          
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Methods</font></b></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure SetBounds(aLeft, aTop, aWidth, aHeight);</b><br>
      Sets the constraints' bounds. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="WithinBounds" ID="WithinBounds"></a>function WithinBounds(const Pts: array of TPoint): Boolean;</strong><br>
              Returns True if all the point specified by the Pts array parameter are within the constraint's bounds. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ConfinePt"></a>function ConfinePt(var Pt: TPoint): Boolean;</strong><br>
                Modifies the point specified by the Pt parameter, so that the point confines in bounding rectangle of the constraints. The function returns True if the point is already within the constraint's bounds. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ConfineRect"></a>function ConfineRect(var Rect: TPoint): Boolean;</strong><br>
Modifies the rectangle specified by the Rect parameter, so that the rectangle confines in bounding rectangle of the constraints. The function returns True if the rectangle is already within the constraint's bounds. </font></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="ConfineOffset"></a><strong>function ConfineOffset(var dX, dY: Integer; Mobility: TObjectSides): Boolean;<br>
              TObjectSide = (osLeft, osTop, osRight, osBottom);<br>
              TObjectSides = set of TObjectSide; <br>
                </strong>Modifies the move/resize offset specified by dX and dY parameters in the way that  after moving/resizing the <a HREF="#SourceRect">SourceRect</a>, none of its edges go outside of the constraint's bounds. The Mobility parameter determines the edges of the <a HREF="#SourceRect">SourceRect</a>, which are about to move/resize. The function returns True if  move/resize operation is allowed. </font></p>
              </td>
            </tr>
          </table>          
          <br>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TGraphObjectList"></a>TGraphObjectList 
            = class(TPersistent)<br>
            </b>TGraphObjectList maintains the collection of graph objects that 
          appear in a simple graph control. </font></p>
          <p> 
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Properties</font></b></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Capacity: Integer</strong><br>
    Specifies the allocated size of the array of graph objects maintained by the list.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Count: Integer </strong></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup> (Read-Only)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> <br>
    Indicates the number of entries in the list that are in use.</font></td>
            </tr>
            <tr> 
              <td> 
                <p><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="TGraphObjectListItems"></a>Items[Index: 
                  Integer]: <a HREF="#TGraphObject">TGraphObject</a></font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> 
                  </font></b>(Read-Only, Default)</sup></font><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                  </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Lists 
                  all graph objects managed by the TGraphObjectList object.</font></p>
              </td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Methods</font></b></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>procedure Assign(Source: TPersistent); </strong><br>
      Copies elements of one list to another.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>procedure Clear; </strong><br>
      Deletes all items from the list.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>function Add(Item: <a HREF="#TGraphObject">TGraphObject</a>); </strong><br>
              Inserts a new item at the end of the list. The function returns the index of added item.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>procedure Insert(Index: Integer; Item: <a HREF="#TGraphObject">TGraphObject</a>); </strong><br>
              Adds a graph object to the <a HREF="#TGraphObjectListItems">Items</a> array at the position specified by Index. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>procedure Delete(Index: Integer);</strong><br>
              Removes the item at the position given by the Index parameter.  </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>function Remove(Item: <a HREF="#TGraphObject">TGraphObject</a>): Integer; </strong><br>
              Deletes the first reference to the Item parameter from the <a HREF="#TGraphObjectListItems">Items</a> array. The function returns the index of the removed item. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>procedure Move(CurIndex, NewIndex: Integer);</strong><br>
              Changes the position of an item in the <a HREF="#TGraphObjectListItems">Items</a> array. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>function IndexOf(Item: <a HREF="#TGraphObject">TGraphObject</a>): Integer; </strong><br>
              Returns the index of the first entry in the <a HREF="#TGraphObjectListItems">Items</a> array with a specified value.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="TGraphObjectListFirst"></a>function First: <a HREF="#TGraphObject">TGraphObject</a>;</strong><br>
                Returns the first item in the <a HREF="#TGraphObjectListItems">Items</a> array, and initialize forward enumeration of the list. If the list is empty, the function returns nil.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="TGraphObjectListLast"></a>function Last: <a HREF="#TGraphObject">TGraphObject</a>;</strong><br>
    Returns the first item in the <a HREF="#TGraphObjectListItems">Items</a> array, and initialize backward enumeration of the list. If the list is empty, the function returns nil.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>function Prior: <a HREF="#TGraphObject">TGraphObject</a>;<br>
              </strong>During emumeration, returns the previous item or nil if begin of list is reached. Before calling this function, <a HREF="TGraphObjectListLast">Last</a>  function should be called to initialize backward enumaration. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>function Next: <a HREF="#TGraphObject">TGraphObject</a>;<br>
              </strong>During emumeration, returns the next item or nil if end of list is reached. Before calling this function, <a HREF="#TGraphObjectListFirst">First</a> function should be called to initialize forward enumaration. </font></td>
            </tr>
            <tr>
              <td><a NAME="TGraphObjectList.Push"></a><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>function Push: Boolean;<br>
              </strong>Saves the current enumeration state.</font></td>
            </tr>
            <tr>
              <td><a NAME="TGraphObjectList.Pop"></a><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>function Pop: Boolean;<br>
              </strong>Restores the last saved enumeration state.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Events</font></b></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>OnChange: TGraphObjectListEvent;<br>
      TGraphObjectListEvent = procedure(Sender: TObject; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>;
Action: TGraphObjectListAction) of object;<br>
TGraphObjectListAction = (glAdded, glRemoved, glReordered);<br>
                            </strong>Occurs when the list changes.</font>
                <p></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>glAdded</strong></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">A graph object is added to the list. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>glRemoved</strong></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">A graph object is removed from the list. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>glReordered</strong></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The index of a graph object in the list is changed.  </font></td>
                  </tr>
                </table>
              <p>&nbsp;</p></td>
            </tr>
          </table>
        <p>&nbsp;</p></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TGraphObjectClass"></a>TGrephObjectClass 
            = class of TGraphObject<br>
            <a NAME="TGraphObject"></a>TGraphObject = class(TPersistent) </b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Abstract)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>TGraphObject is the common ancestor of all graph objects that 
            can appear in the graph designer.</font></p>
          <p></p>
          <p> 
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Properties</font></b></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Brush: 
                TBrush<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the color and pattern for filling the background of the graph 
                object.</font></td>
            </tr>
            <tr> 
              <td> 
                <p><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">BoundsRect: 
                  TRect </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                  </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                  the bounding rectangle of the graph object in the graph.</font></p>
              </td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Data"></a>Data: Pointer <br>
              </b>Stores a pointer value as part of the graph object. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="Dependents" ID="Dependents"></a>Dependents[Index: Integer]: <a HREF="#TGraphObject">TGraphObject</a></strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Contains list of graph objects, which their placement on the graph are dependent to this object. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="DependentCount" ID="DependentCount"></a>DependentCount: Integer</strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Determines the number of objects, which their placement on the graph are dependent to this object. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Dragging"></a>Dragging: Boolean</b> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Indicates whether the graph object is being dragged.</font></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Font: 
                TFont<br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Specifies 
                the font to use when writing text on the graph object.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="HasCustomData"></a>HasCustomData: Boolean</strong><br>
                If this property set to True, <a HREF="#OnObjectWrite">OnObjectWrite</a> event will be called when object properties are being saved. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Hint"></a>Hint: String<br>
                </b>Contains the text string that can appear when the user moves the mouse over the graph object.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="UniqueID"></a>ID: DWORD</strong><b> </b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Indicates the unique identifier of the object in the graph. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="LinkInputs" ID="LinkInputs"></a>LinkInputs[Index: Integer]: <a HREF="#TGraphLink">TGraphLink</a></strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Contains list of graph link objects, which their <a HREF="#Source">source</a> is hooked to this object. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="LinkInputCount" ID="LinkInputCount"></a>LinkInputCount: Integer</strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Determines the number of graph link objects, which their <a HREF="#Source">source</a> is hooked to this object. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="LinkOutputs" ID="LinkOutputs"></a>LinkOutputs[Index: Integer]: <a HREF="#TGraphLink">TGraphLink</a></strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Contains list of graph link objects, which their <a HREF="#Target">target</a> is hooked to this object. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="LinkOutputCount" ID="LinkOutputCount"></a>LinkOutputCount: Integer</strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
    Determines the number of graph link objects, which their <a HREF="#Target">target</a> is hooked to this object. </font></td>
            </tr>
            <tr>
              <td><p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Options" ID="Options"></a>Options: TGraphOptions <br>
  TGraphOptions = set of (goLinkable, goSelectable, goShowCaption) </b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
  Specifies various display and behavioral properties of the node.</font> </p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>goLinkable</b></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The object can be used as either source or target of a link. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">goSelectable</font></strong></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">User can select the object. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>goShowCaption</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The caption of object is shown. </font></td>
                  </tr>
                </table>
              <p>&nbsp;</p></td>
            </tr>
            <tr> 
              <td><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Owner: 
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a HREF="#TSimpleGraph">TSimpleGraph</a> 
                </b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Determines the owner of the graph object.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Pen: 
                TPen<br>
                </b>Specifies the kind of pen the graph object uses for drawing 
                lines and outlining shapes.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>ParentFont: 
                Boolean<br>
                </b>Determines where the graph object looks for its font information. 
                </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Selected"></a>Selected: 
                Boolean<br>
                </b>Indicates wheter the graph object is selected.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="SelectedVisualRect" ID="SelectedVisualRect"></a>SelectedVisualRect: TRect</strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font> <br>
    Specifies the actual rectangle that the graph object, when is selected, occupies on the graph. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Showing: 
                Boolean</b><b> </b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
                Indicates whether the graph object is showing on the graph designer.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="States"></a>States: TGraphObjectStates<br>
TGraphObjectStates = set of (osCreating, osDestroying, osLoading, osReading, osWriting,
osUpdating, osDragging, osDragDisabled)</strong><br>
Describes the current state of the object, indicating when a component needs to avoid certain actions.</font>
                <p> </p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>osCreating</strong></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The object is beging created. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">osDestroying</font></strong></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object is about to be destroyed.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>osLoading</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object is currently loading. This flag is set when the object is first created and not cleared until the component and all its dependences are fully loaded.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>osReading</strong></font></td>
                    <td>&nbsp;</td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object is reading its properties from a stream.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>osWriting</strong></font></td>
                    <td>&nbsp;</td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object is writing its properties in to a stream.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>osUpdating</strong></font></td>
                    <td>&nbsp;</td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object is begin updated. This flag is set between <a HREF="#ObjectBeginUpdate">BeginUpdate</a> and <a HREF="#ObjectEndUpdate">EndUpdate</a> block.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>osDragging</strong></font></td>
                    <td>&nbsp;</td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object is beging dragged. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>osDragDisabled</strong></font></td>
                    <td>&nbsp;</td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object currently doesn't accept drag operation. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>osConverting</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The object is either source or target of a type conversion operation. </font></td>
                  </tr>
                </table>
              <p>&nbsp;</p></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Tag: 
                Integer<br>
                </b>Stores an integer value as part of the graph object. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Text: 
                String<br>
                </b>Specifies a text string that identifies the graph object to 
                the user. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Visible: 
                Boolean</b> <br>
                Determines whether the graph object appears on the graph designer.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="VisualRect" ID="VisualRect"></a>VisualRect: TRect</strong> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font> <br>
              Specifies the actual rectangle that the graph object occupies on the graph. </font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Methods</font></b></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ObjectCreate" ID="ObjectCreate"></a>constructor Create(AOwner: <a HREF="#TSimpleGraph">TSimpleGraph</a>); </strong><br>
              Creates an instance of the object and inserts it on the graph specified by AOwner parameter. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
                <b><a NAME="Assign"></a>procedure Assign(Source: TPersistent); <br>
                </b>Copies the contents of another, similar graph object.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <b><a NAME="AssignTo"></a>procedure AssignTo(Dest: TPersistent); <br>
              </b>Copies the properties of a graph object to a destination graph object.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="BeginUpdateObject" ID="BeginUpdateObject"></a>procedure BeginUpdate;<br>
              </b> Suspends screen repainting.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="EndUpdateObject" ID="EndUpdateObject"></a>procedure EndUpdate;<br>
              </b> Re-enables screen repainting.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="CanDelete"></a>funcrion CanDelete: Boolean;</strong><br>
                Returns True if the object can be removed; otherwise returns False. </font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>function 
                ContainsPoint(X, Y: Integer): Boolean;<br>
                </b>Returns True if the point specified by X and Y parameters is inside the object, and object is visible. </font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ContainsRect"></a>function ContainsRect(const Rect: TRect): Boolean;<br>
                </b>Returns True if any part of the rectangle specified by the Rect parameter is inside the object, and object is visible. </font></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="HitTest"></a><strong>function HitTest(const Pt: TPoint): DWORD;<br>
                </strong>Determines which  object's component is at the point specified by the Pt parameter. Depending on the object type, the return value can be can be one or more of the following values:</font></p>
                <table WIDTH="90%" BORDER="1" CELLSPACING="0" CELLPADDING="5" ALIGN="CENTER">
                  <tr BGCOLOR="#660000">
                    <td VALIGN="TOP"><strong><font COLOR="#FFFFFF" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> VALUE </font></strong></td>
                    <td><strong><font COLOR="#FFFFFF" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">MEANING</font></strong></td>
                    <td VALIGN="TOP"><strong><font COLOR="#FFFFFF" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">SCOPE</font></strong></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">GHT_NOWHERE</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is not on the object.  </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphObject">TGraphObject</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_TRANSPARENT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on the object, but the object is not selectable. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphObject">TGraphObject</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_LEFT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on  left side of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_TOP</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on  top side of the object.</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_RIGHT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on  right side of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_BOTTOM</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on bottom side of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_TOPLEFT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on top left corner of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_TOPRIGHT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on top right corner of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_BOTTOMLEFT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on bottom left corner of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_BOTTOMRIGHT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on bottom right corner of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphNode">TGraphNode</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_CLIENT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on the body of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphObject">TGraphObject</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_CAPTION</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on the caption of the object. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphObject">TGraphObject</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_POINT</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on one of the object's control points. The high order word of the value contains  index of the point. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphLink">TGraphLink</a></font></td>
                  </tr>
                  <tr>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">GHT_LINE</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The point is on one of the object's lines. The high order word of the value contains  index of the line. </font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="#TGraphLink">TGraphLink</a></font></td>
                  </tr>
                </table>                
              <p>&nbsp;</p></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ConvertTo"></a>function 
                ConvertTo(AnotherClass: TGraphObjectClass): <a HREF="#TGraphObject">TGraphObject</a>; </b><br>
                Converts the graph object to another graph object type. If the 
                graph object is a link, the new class type must be a link, 
                and if the graph object is a node, the new class type must be a node.. If function succeeds, it releases the old instance and returns reference to the new instance. If function fails, it returns reference the old instance.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure 
                BringToFront;<br>
                </b>Puts the graph object in front of all other graph objects.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure 
                SendToBack; <br>
                </b>Puts the graph object behind all other graph objects.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure 
                LoadFromStream(Stream: TStream);<br>
                </b>Loads the graph object from a stream.</font></td>
            </tr>
            <tr> 
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>procedure 
                SaveToStream(Stream: TStream); <br>
                </b>Saves the graph object in a stream.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="ObjectInvalidate"></a>procedure Invalidate;</strong><br>
              Repaints the graph object.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="IsNode" ID="IsNode"></a>class funtion IsNode: Boolean;</b><br>
    Returns True of the graph object is a node.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="IsLink"></a>class funtion IsLink: Boolean</b><b>;</b><br>
    Returns True of the graph object is a link.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="IsLocked"></a>funtion IsLocked: Boolean;</b><br>
    Returns True if the graph object is locked by the owner.</font></td>
            </tr>
            <tr>
              <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Delete"></a>function Delete: Boolean;<br>
              </b>Removes the graph object. Returns False on failure, otherwise returns True. Any reference to a deleted object is invalid and raises AV exception.</font></td>
            </tr>
            <tr>
              <td><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="BeginDrag"></a>function BeginDrag(const Pt: TPoint; HT: DWORD = $FFFFFFFF): Boolean;<br>
                </font></strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Initiates the graph object for dragging. The drag origion is specified by the Pt parameter, and the object's component that should be dragged is specified by the HT parameter (see <a HREF="#HitTest">HitTest</a> method). Consider that all or some of other selected objects may follow the drag operation. If HT parameter is $FFFFFFFF, the function finds the object's component by itself. </font></td>
            </tr>
            <tr>
              <td><p><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="DragBy" ID="DragBy"></a>function DragBy(dX, dY: Integer; SnapToGrid: Boolean): Boolean;<br>
              </font></strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Moves the object's component defined by <a HREF="#BeginDrag">BeginDrag</a> method by the amout specified by dX and dY parameters. The SnapToGrid parameter specifies whether the object's component should be snapped to grid or no. </font></p></td>
            </tr>
            <tr>
              <td><p><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="DragTo"></a>function DragTo(const Pt: TPoint; SnapToGrid: Boolean): Boolean;<br>
              </font></strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Moves the object's component defined by <a HREF="#BeginDrag">BeginDrag</a> method to the point specified by the Pt parameter. The SnapToGrid parameter specifies whether the object's component should be snapped to grid or no. </font></p>              </td>
            </tr>
            <tr>
              <td><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="EndDrag"></a>function EndDrag(Accept: Boolean): Boolean;<br>
                </font></strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Stops dragging operation. If the Accept parameter is True, the modifications caused by the drag operation will be accepted. Otherwise, the modifications will be ignored and the dragged object resets to its state before calling to <a HREF="#BeginDrag">BeginDrag</a>. </font></td>
            </tr>
          </table>
          <br>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TGraphLinkClass"></a>TGraphLinkClass 
            = class of TGraphLink<br>
            <a NAME="TGraphLink"></a>TGraphLink = class(<a HREF="#TGraphObject">TGraphObject</a>)<br>
            </b>TGraphlink is the base class for all link objects on a graph.</font></p>
          <p> 
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Properties</font></b></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="BeginStyle" ID="BeginStyle"></a><strong>BeginStyle: TLinkBeginEndStyle<br>
      TLinkBeginEndStyle = (lsNone, lsArrow, lsDot)</strong><br>
      Determines the style of the startpoint.</font></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">lsNone</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">No style. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">lsArrow</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">An arrow will be displayed . </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>lsArrowSimple</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">A simple arrow will be displayed. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">lsCircle</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> A circle will be dislayed.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>lsDiamond</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">A diamond will be displayed. </font></td>
                  </tr>
                </table>                <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="BeginSize"></a>BeginSize: Byte</strong><br>
    Determines the size of the startpoint's style.</font></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="EndStyle" ID="EndStyle"></a><strong>EndStyle: TLinkBeginEndStyle<br>
      TLinkBeginEndStyle = (lsNone, lsArrow, lsDot)</strong><br>
      Determines the style of the endpoint.</font></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">lsNone</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">No style. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">lsArrow</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">An arrow will be displayed . </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>lsArrowSimple</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">A simple arrow will be displayed. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><strong><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">lsCircle</font></strong></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> A circle will be dislayed.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>lsDiamond</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">A diamond will be displayed. </font></td>
                  </tr>
                </table>              
              <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="EndSize" ID="EndSize"></a>EndSize: Byte</strong><br>
    Determines the size of the endpoint's style.</font></td>
            </tr>
            <tr> 
              <td> 
                <p><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="Source" ID="Source"></a>Source: 
                  <a HREF="#TGraphObject">TGraphObject</a><br>
                  </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the source  of the connection if any. If Source is not nil, the startpoint of the link hooks to the source object. </font></p>
              </td>
            </tr>
            <tr> 
              <td> <b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="Target" ID="Target"></a>Target: 
                <a HREF="#TGraphObject">TGraphObject</a><br>
                </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Determines 
                the target of the connection if any. If Target is not nil, the endpoint of the link hooks to the target object. </font></td>
            </tr>
            <tr>
              <td><p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="LinkOptions" ID="LinkOptions"></a>LinkOptions: TGraphLinkOptions <br>
                TGraphLinkOptions = set of (gloFixedStartPoint, gloFixedEndPoint, gloFixedBreakPoints, gloFixedAnchorStartPoint, gloFixedAnchorEndPoint)
                </b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
  Specifies various display and behavioral properties of the link.</font> </p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>gloFixedStartPoint</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The startpoint of the link cannot be relocated. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>gloFixedEndPoint</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The endpoint of the link cannot be relocated. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>gloFixedBreakPoints</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The breakpoints of the link cannot be relocated. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>gloFixedAnchorStartPoint</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">If the startpoint of the link hooks to a node, the anchor point is fixed to the center of the node.<br/> 
If the startpoint of the link hooks to another link, for the links with odd breakpoints the anchor point is the innermost breakpoint and for the links with even breakpoints the anchor point is center of the innermost segment.</font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>gloFixedAnchorEndPoint</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">If the endpoint of the link hooks to a node, the anchor point is fixed to the center of the node.</br>
If the endpoint of the link hooks to another link, for the links with odd breakpoints the anchor point is the innermost breakpoint and for the links with even breakpoints the anchor point is center of the innermost segment.</font></td>
                  </tr>
                </table>
              <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="Points" ID="Points"></a><strong>Points[Index: Integer]: TPoint </strong><br>
                Contains zero base array of link's points (startpoint, breakpoints, and endpoints). </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="PointCount" ID="PointCount"></a><strong>PointCount: Integer</strong><b> </b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><strong> </strong><br>
Determines the number of points in the <a HREF="#Points">Points</a> array. </font></td>
            </tr>
            <tr>
              <td><p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="Polyline" ID="Polyline"></a><strong>Polyline: TPoints<br>
                TPoints = array of TPoint
              </strong></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
              The array of link's points.</font></p>              </td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="TextPosition" ID="TextPosition"></a><strong>TextPosition: Integer</strong><br>
                Indicates the index of the line, which the caption of the link aligns to it. If this property set to -1 (default), the longest line will be selected. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="TextSpacing" ID="TextSpacing"></a><strong>TextSpecing: Integer</strong><br>
                Determines the distance between text and line.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Methods</font></b></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="LinkCreateNew"></a>constructor CreateNew(AOwner: <a HREF="#TSimpleGraph">TSimpleGraph</a>; ASource: <a HREF="#TGraphObject">TGraphObject</a>;<br>
const Pts: array of TPoint; ATarget: <a HREF="#TGraphObject">TGraphObject</a>);</strong><br>
 Initiates a new instance of the class with the given parameters. ASource and ATarget parameters can be nil, and Pts parameter can be an empty array. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="AddPoint"></a>function AddPoint(const Pt: TPoint): Integer;<br>
              </b> Inserts a point at the end of point list.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="InsertPoint"></a>procedure InsertPoint(Index: Integer; const Pt: TPoint);<br>
              </b> Inserts a point in the point list at the specified index.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="RemovePoint"></a>procedure RemovePoint(Index: Integer);<br>
              </b> Deletes the point specified by its index in the point list.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="IndexOfPoint"></a>function IndexOfPoint(const Pt: TPoint; Neighborhood: Integer = 0): Integer;<br>
              </b> Returns index of the point in the point list, or -1 if the point is not found. The Neighborhood parameter determines the tolerance of comparison in pixels.</font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="AddBreakPoint"></a><strong>function AddBreakPoint(const Pt: TPoint): Integer;</strong><br>
                Inserts a breakpoint at the specified point on a line of the link. The function returns the index of the inserted point in the point list, or -1 if the point is not close to a line of the link. </font></td>
            </tr>
            <tr>
              <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a NAME="NormalizeBreakPoints"></a><strong>function NormalizeBreakPoints(Options: TLinkNormalizeOptions): Boolean;</strong><br>
                  <strong>TLinkNormalizeOptions = set of (lnoDeleteSamePoint, lnoDeleteSameAngle);</strong><br>
                Passes 


 through the list of points and delete useless ones. The function returns True if at least one point is deleted.<br>
 <br>
              </font>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>lnoDeleteSamePoint</strong></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If some breakpoints are very close to each other, only one of them will be kept and the rest will be deleted. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>lnoDeleteSameAngle</strong></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">For the edges, which  make almost a straight line, the intermediate breakpoints will be deleted. </font></td>
                  </tr>
                </table>              
              <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="IsFixedPoint"></a>function IsFixedPoint(Index: Integer; HookedPointsAsFixed: Boolean): Boolean;<br>
              </b> Returns True if the point specified by its index is a fixed point (see <a HREF="#LinkOptions">LinkOptions</a>). If the HookedPointsAsFixed parameter is True, the hooked points will also consider as fixed. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="IsHookedPoint"></a>function IsHookedPoint(Index: Integer): Boolean;<br>
              </b> Returns true if the point specified by its index is hooked to a graph object.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="HookedObjectOf"></a>function HookedObjectOf(Index: Integer): <a HREF="#TGraphObject">TGraphObject</a>;<br>
              </b> Returns the graph object, which the point specified by its index is hooked to. If the point is not hooked, the function returns False. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="HookedIndexOf"></a>function HookedIndexOf(GraphObject: <a HREF="#TGraphObject">TGraphObject</a>): Integer;<br>
              </b> Returns the index of the point, which is hooked to the specified graph object, or -1 if there is no hook. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="HookedPointCount"></a>function HookedPointCount: Integer;<br>
              </b> Returns the number of points that are hooked to a graph object.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="CanHook"></a>function CanHook(Index: Integer; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>): Boolean;<br>
              </b> Returns True if the point specified by its index can hook to the specified graph object.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="Hook"></a>function Hook(Index: Integer; GraphObject: <a HREF="#TGraphObject">TGraphObject</a>): Boolean;<br>
              </b> Hooks  the point specified by its index to the specified graph object. The function returns True on success, otherwise returns False. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="Unhook"></a>function Unhook(GraphObject: <a HREF="#TGraphObject">TGraphObject</a>): Integer;<br>
              </b> Unhooks  the point which is hooked to the specified graph object. The function returns the index of the point, which is unhooked, or -1 on failure.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>function Unhook(Index: Integer): Boolean;<br>
              </b> Unhooks  the point specified by its index. The function returns True on success, otherwise returns False.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="CanLink"></a>function CanLink(ASource, ATarget: <a HREF="#TGraphObject">TGraphObject</a>): Boolean;<br>
              </b> Returns True if the link can be used to connect two specified graph objects together.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="Link" ID="Link"></a>function Link(ASource, ATarget: <a HREF="#TGraphObject">TGraphObject</a>): Boolean;<br>
              </b> Uses the link to establish a connection between two specified graph objects. The function returns True on success, otherwise returns False. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="CanMove"></a>function CanMove: Boolean;<br>
              </b> Returns True if all points of the link can move freely.</font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="Rotate" ID="Rotate"></a>function Rotate(const Angle: Double; const Origin: TPoint): Boolean;<br>
              </b> Rotates the link around the point specified by the Origin parameter, and the angle specified by Angle parameter in radians. The function returns True on success or False on any failure. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="Scale" ID="Scale"></a>function Scale(const Factor: Double): Boolean;<br>
              </b> Scales the link by the specified factor. A factor  bigger than one scales up the link, and a positive factor less than one scales it down. The function returns True on success or False on any failure. </font></td>
            </tr>
            <tr>
              <td> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="Reverse"></a>procedure Reverse;<br>
              </b> Reverse the order of the points, and toggles values of <a HREF="#Source">Source</a> and <a HREF="#Target">Target</a> properties.</font></td>
            </tr>
          </table>
          <br>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TGraphNodeClass"></a>TGraphNodeClass 
            = class of TGraphNode<br>
            <a NAME="TGraphNode"></a>TGraphNode = class(<a HREF="#TGraphObject">TGraphObject</a>) 
            </b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Abstract)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>TGraphNode is the base class for all node objects on a graph.</font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Properties</font></b></td>
            </tr>
            <tr> 
              <td COLSPAN="2"><p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Alignment"></a>Alignment: 
                  TAlignment</b><br>
                  <strong>TAlignment = (taLeftJustify, taRightJustify, taCenter)</strong><br>
                  Controls the horizontal placement of the text within the node.</font></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>taLeftJustify</b></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Text is left-justified: Lines all begin at the left edge of the node.</font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>taCenter</b></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The text is centered centered in the node. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>taRightJustify</b></font></td>
                    <td WIDTH="20"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> Text is right-justified: Lines all end at the right edge of the node.</font></td>
                  </tr>
                </table>                
                <p>&nbsp;</p></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="Layout"></a>Layout: TTextLayout</strong> <br>
                  <strong>TTextLayout = (tlTop, tlCenter, tlBottom)</strong><br>
              Specifies the vertical placement of the text within the node.
                </font>                <p></p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tlTop</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The text appears at the top of the node.</font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tlCenter</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The text is vertically centered in the node. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>tlBottom</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The text appears along the bottom of the node.</font></td>
                  </tr>
                </table>
                <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
              </font></td>
            </tr>
            <tr> 
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="Margin"></a>Margin: 
                Integer</b><br>
                Determines the margin of the text from edges of the node.</font></td>
            </tr>
            <tr> 
              <td COLSPAN="2"> 
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Left: 
                  Integer<br>
                  </b>Specifies the X coordinate of the top left corner of the 
                  node in graph's unit. </font></p>
              </td>
            </tr>
            <tr> 
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>Top: 
                Integer </b><br>
                Specifies the Y coordinate of the top left corner of the node 
                in graph's unit. </font></td>
            </tr>
            <tr> 
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Width: 
                Integer</b><br>
                Specifies the horizontal size of the node in graph's unit. </font></td>
            </tr>
            <tr> 
              <td COLSPAN="2"> 
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Height: 
                  Integer</b><br>
                  Specifies the vertical size of the node in graph's unit. </font></p>
              </td>
            </tr>
            <tr> 
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Background"></a>Background: 
                TPicture</b><br>
                Determines the background image of the node.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="BackgroundMargins" ID="BackgroundMargins"></a>BackgroundMargins: TRect </b><br>
    Determines the relative margins of the background image as percent of the node's width and height.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="NodeOptions" ID="NodeOptions"></a>NodeOptions: TGraphNodeOptions <br>
  TGraphNodeOptions = set of (gnoMovable, gnoResizable, gnoShowBackground) </b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
  Specifies various display and behavioral properties of the node.</font> </p>
                <table WIDTH="90%" BORDER="0" CELLSPACING="5" CELLPADDING="0" ALIGN="CENTER">
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>gnoMovable</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The node can be moved. </font></td>
                  </tr>
                  <tr>
                    <td WIDTH="15%" VALIGN="TOP"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>gnoResizable</b></font></td>
                    <td WIDTH="20">&nbsp;</td>
                    <td><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The node can be resized. </font></td>
                  </tr>
                  <tr>
                    <td VALIGN="TOP"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>gnoShowBackground</strong></font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">&nbsp;</font></td>
                    <td><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The background image of the node is visible. </font></td>
                  </tr>
                </table>
              <p>&nbsp;</p></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr> 
              <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key 
                Methods</font></b></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2"><strong><a NAME="NodeCreateNew"></a><font FACE="Verdana, Arial, Helvetica, sans-serif">constructor CreateNew(AOwner: <a HREF="#TSimpleGraph">TSimpleGraph</a>; const Bounds: TRect); </font></strong><font FACE="Verdana, Arial, Helvetica, sans-serif"><br>
                Creates an instance of the class and intiates bounding rectangle of the node by rectangle specified by the Bounds parameter.</font></font> </td>
            </tr>
            <tr> 
              <td COLSPAN="2"> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b>procedure 
                SetBounds(aLeft, aTop, aWidth, aHeight: Integer);<br>
                </b>Sets the Left, Top, Width, and Height properties all at once.</font></td>
            </tr>
            <tr> 
              <td COLSPAN="2"> 
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="CanMoveResize" ID="CanMoveResize"></a>procedure CanMoveResize(var NewLeft, NewTop, NewWidth, NewHeight: Integer;
out CanMove, CanResize: Boolean);<br>
                  </b>Determines whether the node can be moved or resized. </font></p>
              </td>
            </tr>
          </table>
          <br>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TPolygonalNode"></a>TPolygonalNode 
            = class(<a HREF="#TGraphNode">TGraphNode</a>) </b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Abstract)</sup></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><br>
            </b>TPolygonalNode is the base class for all polygon shape nodes. 
            To define a new polygon shape node, subclass TPolygonalNode and override 
            the DefineVertices  method.</font></p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Properties</font></b></td>
            </tr>
            <tr>
              <td>
                <p><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a NAME="Vertices"></a>Vertices: TPoints </font></b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><b><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><br>
              </font></b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong>TPoints = array of TPoint</strong><br>
              Contains the list of polygon's vertices.</font></p></td>
            </tr>
          </table>
        <p>&nbsp;</p></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TRoundRectangularNode"></a>TRoundRectangularNode 
            = class(<a HREF="#TGraphNode">TGraphNode</a>)<br>
            </b>TRoundRectangularNode reperesents a round rectangle shape node.</font></p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TEllipticNode"></a>TEllipticNode 
            = class(<a HREF="#TGraphNode">TGraphNode</a>)<br>
            </b>TEllipticNode reperesents an ellipse shape node.</font></p>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TTriangularNode"></a>TTriangularNode 
            = class(<a HREF="#TPolygonalNode">TPolygonalNode</a>)<br>
            </b>TTriangularNode reperesents an triangle shape node.</font></p>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font></b>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TRectangularNode"></a>TRectangularNode = class(<a HREF="#TPolygonalNode">TPolygonalNode</a>)<br>
        </b>TRectangularNode reperesents a rectangle shape node.</font></p></td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TRhomboidalNode"></a>TRhomboidalNode 
            = class(<a HREF="#TPolygonalNode">TPolygonalNode</a>)<br>
            </b>TRhomboidalNode reperesents a rhomboid shape node.</font></p>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TPentagonalNode"></a>TPentagonalNode 
            = class(<a HREF="#TPolygonalNode">TPolygonalNode</a>)<br>
            </b>TPentagonalNode reperesents a pentagon shape node.</font></p>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="THexagonalNode" ID="THexagonalNode"></a>THexagonalNode = class(<a HREF="#TPolygonalNode">TPolygonalNode</a>)<br>
        </b>THexagonalNode reperesents a hexagon shape node.</font></p></td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TGraphScrollBar"></a>TGraphScrollBar 
            = class(TPersistent)<br>
            </b>TGraphScrollBar displays and manages a horizontal or vertical scroll bar on 
            the graph designer. Properties of TGraphScrollBar are similar to Delphi's 
            TControlScrollBar.</font></p>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TMemoryHandleStream"></a>TMemoryHandleStream 
            = class(TMemoryStream)<br>
            </b>TMemoryHandleStream is a stream that stores its data in dynamic 
            memory allocated in the Windows global heap.<b> </b>It has all of 
            properties and methods of its ancestor class, which is TMemoryStream. 
            In addition, interface of this stream provides global handle of the 
            allocated memory, which can be used in Windows API functions those 
            need a handle to this handle.</font></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Properties</font></b></td>
            </tr>
            <tr>
              <td COLSPAN="2">
                <p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Handle: Boolean</b> <font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif" COLOR="#990000"><sup>(Read-Only)</sup></font><br>
        Handle to the global memory. </font></p></td>
            </tr>
            <tr>
              <td COLSPAN="2"> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>ReleaseHandle: Boolean</b><br>
      Indicates whether the stream releases the memory handle when it is no longer needed. If this property is set to False, it is your responsibility to release the handle by calling GlobalFree (Windows API). As default the value of this property is False.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Methods</font></b></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>constructor Create(MemHandle: THandle);<br>
              </b>Instantiates a TMemoryHandleStream object. Create constructor initializes the stream using the MemHandle parameter. MemHandle parameter can be zero.</font></td>
            </tr>
          </table>
          <p><br>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TCanvasRecall" ID="TCanvasRecall"></a>TCanvasRecall = class(TObject)<br>
            </b>TCanvasRecall stores the properties of a canvas object so that they can be restored at a later time.</font></p>
          <p>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Properties</font></b></td>
            </tr>
            <tr>
              <td> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="Reference" ID="Reference"></a>Reference: TCanvas</b><br>
            Indicates the reference canvas that is managed by the TCanvasRecall instance. Assigning a canvas to this property causes the TCanvasRecall object retrieves the property settings of the old reference canvas, and stores the property settings of the new reference canvas.</font></td>
            </tr>
          </table>
          <br>
          <table WIDTH="94%" BORDER="1" CELLSPACING="0" CELLPADDING="5" BGCOLOR="#FFFFCC" ALIGN="CENTER">
            <tr>
              <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">Key Methods</font></b></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>constructor Create(AReference: TCanvas);<br>
              </b>Instantiates a TCanvasRecal object, and stores properties of the canvas specified by the AReference parameter for future retrieval. When TCanvasRecall instance destroys, it automatically retrieves the old properties of the reference canvas. AReference parameter can be nil.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="Store"></a>procedure Store; </strong><br>
                Saves the current property settings of the <a HREF="#Reference">Reference</a> canvas.</font></td>
            </tr>
            <tr>
              <td COLSPAN="2"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong><a NAME="Retrieve"></a>procedure Retrieve;</strong><br>
                Restores the old property settings of the <a HREF="#Reference">Reference</a> canvas.</font></td>
            </tr>
          </table>
          <p><br>
        </td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE">
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TCompatibleCanvas" ID="TCompatibleCanvas"></a>TCompatibleCanvas = class(TCanvas) <br>
            </b>TCompatibleCanvas reperesents a canvas compatible to the screen device context.</font></p></td>
      </tr>
    </table>
    <b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"></font></b><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font></b> <br>
  </li>
  <li><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="3">Global Procedures</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    <br>
    </font></b> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="WrapText"></a>WrapText(Canvas: TCanvas; const Text: String; MaxWidth: Integer): String;<br>
          </b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Breaks text between words if a word would extend the specified width.
        Canvas is the drawing surface on which the resulting text is to be rendered. It is used to determine font metrics.</font></p>        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="MinimizeText"></a>function MinimizeText(Canvas: TCanvas; const Text: String; const Rect: TRect): String;<br>
        </b>Breaks words  and replaces part of the given text with ellipses, if necessary, so that the result fits in the specified rectangle.
        Canvas is the drawing surface on which the resulting text is to be rendered. It is used to determine font metrics.</font></p>        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="IsBetween"></a>function 
            IsBetween(Value: Integer; Bound1, Bound2: Integer): Boolean;<br>
            </b>If the value specified by the Value parameter is between two values 
            specified by Bound1 and Bound2, the function returnes True, otherwise 
            it returns False.</font></p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"> 
          <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="TransformRgn"></a>function 
            TransformRgn(Rgn: HRGN; const XForm: TXForm): HRGN;<br>
            </b>Returns a copy of region specified by the Rgn parameter, which 
            is transformed by the transform matrix specified by the XForm parameter.</font></p>
        </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="NormalizeAngle" ID="NormalizeAngle"></a>function NormalizeAngle(const Angle: Double): Double;<br>
        </b>Converts the angle specified by the Angle parameter, so that it falls in the range from -Pi to Pi radians.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="EqualPoint"></a>function EqualPoint(const Pt1, Pt2: TPoint): Boolean;<br>
          </b>Returns True if both points passed as parameter are equal. </font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="TransformPoints"></a>procedure 
          TransformPoints(var Points: array of TPoint; const XForm: TXForm);<br>
          </b>Transforms points specified by the Points parameter with the transform 
          marix specifies by the XForm parameter.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="RotatePoints"></a>procedure 
          RotatePoints(var Points: array of TPoint; const Angle: Double; const 
          OrgPt: TPoint);<br>
          </b>Rotates points specified by the Points parameter around the point 
          specified by the OrgPt parameter. The amount of rotation specifies by 
          the Angle parameter, and is in radians.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ScalePoints"></a>procedure ScalePoints(var Points: array of TPoint; const Factor: Double; const RefPt: TPoint);<br>
          </b>Scales distance of  points specified by the Points parameter from the point specified by the RefPt parameter. The amount of scale specifies by the Factor parameter.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="ShiftPoints"></a>procedure ShiftPoints(var Points: array of TPoint; dX, dY: Integer; const RefPt: TPoint);<br>
        </b>Moves points specified by the Points parameter according to their placement relative to the point specified by the RefPt parameter. The amount of movement specifies by dX and dY parameters. Positive values of dX and dY parameters cause the points go far from the reference point, and negative values cause the point go toward the refrence point. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OffsetPoints"></a>procedure 
          OffsetPoints(var Points: array of TPoint; dX, dY: Integer);<br>
          </b>Moves the specified points by the specified offsets.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> <br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="CenterOfPoints"></a>function 
          CenterOfPoints(var Points: array of TPoint): TPoint;<br>
          </b>Returns the center point of the specified points.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="BoundsRectOfPoints"></a>function 
          BoundsRectOfPoints(var Points: array of TPoint): TRect;<br>
          </b>Returns the bounding rectangle of the specified points.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="NearestPoint"></a>function NearestPoint(const Points: array of TPoint; const RefPt: TPoint;
out NearestPt: TPoint): Integer;<br>
          </b>Returns the index of the point in the array, which is the nearest to the reference point. Also, the nearest point will be copied in to the NearestPt parameter. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="MakeSquare"></a>function MakeSquare(const Center: TPoint; Radius: Integer): TRect;<br>
        </b>Returns a square (rectangle) that is reperesented by its center point and radius.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="MakeRect"></a>function 
          MakeRect(const Corner1, Corner2: TPoint): TRect;<br>
          </b>Returns a rectangle that is reperesented by its two corner points.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="CenterOfRect"></a>function 
          CenterOfRect(const Rect: TRect): TPoint;<br>
          </b>Returns the center point of the rectangle specified by Rect parameter.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="UnionRect" ID="UnionRect"></a>procedure UnionRect(var Rect1: TRect; const Rect2: TRect);<br>
        </b>Calculates the union of two rectangles specified by Rect1 and Rect2 parameters, and sets the result in Rect1. This procedure suppose none of two rectangles are empty. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="IntersectRect" ID="IntersectRect"></a>procedure IntersectRect(var Rect1: TRect; const Rect2: TRect);<br>
        </b>Calculates the intersection of two rectangles specified by Rect1 and Rect2 parameters, and sets the result in Rect1. This procedure suppose none of two rectangles are empty. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="OverlappedRect" ID="OverlappedRect"></a>function OverlappedRect(const Rect1, Rect2: TRect);<br>
        </b>Returns True if two rectangles has common area, otherwise returns False. </font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="LineLength"></a>function LineLength(const LinePt1, LinePt2: TPoint): Double;<br>
          </b>Returns lenght of the line represented by its two endpoints as LinePt1 and LinePt2 parameters.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="LineSlopeAngle"></a>function 
          LineSlopeAngle(const LinePt1, LinePt2: TPoint): Double;<br>
          </b>Returns the slope angle in radians of the line that passes through the points 
          represented by LinePt1 and LinePt2 parameters.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="DistanceToLine"></a>function DistanceToLine(const LinePt1, LinePt2: TPoint; const QueryPt: TPoint): Double;<br>
          </b>Returns the distance of a point specified by the QuaryPt parameter from 
          the line represented by its two endpoints as  LinePt1 and LinePt2 
          parameters.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
</font>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="NearestPointOnLine" ID="NearestPointOnLine"></a>function NearestPointOnLine(const LinePt1, LinePt2: TPoint; const RefPt: TPoint): TPoint;<br>
        </b>Returns the point on the line represented by its two endpoints as LinePt1 and LinePt2 parameters, which is the nearest to the point specified by the RefPt parameter.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong><a NAME="NextPointOfLine"></a>function NextPointOfLine(const LineAngle: Double; const ThisPt: TPoint;
  const DistanceFromThisPt: Double): TPoint;</strong><br>
        Returns the point on the line reperesented 
              by its slope angle as LineAngle parameter and a passing point as ThisPoint parameter, which its distance from the point specified by the ThisPt parameter is equal to DistanceFromThisPoint parameter. The LineAngle parameter is in radians. </font></p>          </td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="IntersectLines"></a>function 
          IntersectLines(const Line1Pt: TPoint; const Line1Angle: Double; const 
          Line2Pt: TPoint; const Line2Angle: Double; out Intersect: TPoint): 
          Boolean ;<br>
          </b>If the two specified lines intersect each other, the function returns 
          True and sets the Intersect parameter to the intersection point. Otherwise, 
          the function returns False. The Line1Angle and Line2Angle parameters shold be in range from -Pi to Pi radians.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="IntersectLineRect"></a>function IntersectLineRect(const LinePt: TPoint; const LineAngle: Double;<br>
const Rect: TRect): TPoints;<br>
          </b>Retruns a dynamic array of points containing the intersection coordinates of the rectangle specified by the 
          Bounds parameter and the line specified by LinePt and LineAngle parameters. The LineAngle parameter shold be in range from -Pi to Pi radians.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="IntersectLineRoundRect"></a>function IntersectLineRoundRect(const LinePt: TPoint; const LineAngle: Double;<br>
const Bounds: TRect; CW, CH: Integer): TPoints;<br>
          </b>Retruns a dynamic array of points containing the intersection coordinates of the round rectangle specified by the Bounds, CW, and CH parameters and the line specified by LinePt and LineAngle parameters. The LineAngle parameter shold be in range from -Pi to Pi radians.</font></td>
      </tr>
    </table>
    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
    </font> 
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><a NAME="IntersectLineEllipse"></a>function 
          IntersectLineEllipse(const LinePt: TPoint; const LineAngle: Double;<br>
const Bounds: TRect): TPoints;<br>
          </b>Retruns a dynamic array of points containing the intersection coordinates of the ellipse specified by the Bounds parameter and the line specified by LinePt and LineAngle parameters. The LineAngle parameter  shold be in range from -Pi to Pi radians.</font></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr>
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong><a NAME="IntersectLinePolygon"></a>function IntersectLinePolygon(const LinePt: TPoint; const LineAngle: Double;<br>
        const Vertices: array of TPoint): TPoints;</strong><br>
        Retruns a dynamic array of points containing the intersection coordinates of the polyline specified by its vertices as Vertices parameter and the line specified by LinePt and LineAngle parameters. The LineAngle parameter shold be in range from -Pi to Pi radians.</font></p></td>
      </tr>
    </table>
    <br>
    <table WIDTH="90%" BORDER="0" CELLSPACING="0" CELLPADDING="5">
      <tr> 
        <td WIDTH="15">&nbsp;</td>
        <td BGCOLOR="#EEEEEE"><p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><strong><a NAME="IntersectLinePolyline" ID="IntersectLinePolyline"></a>function IntersectLinePolyline(const LinePt: TPoint; const LineAngle: Double;<br>
  const Vertices: array of TPoint): TPoints;</strong><br>
        Retruns a dynamic array of points containing the intersection coordinates of the polygon specified by its vertices as Vertices parameter and the line specified by LinePt and LineAngle parameters. The LineAngle parameter shold be in range from -Pi to Pi radians.</font></p>          </td>
      </tr>
    </table>
  </li>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="KEY_MAPPING"></a><br>
  <font SIZE="4">KEYBOARD SHORTCUTS</font></b></font></p>
<ul>
  <table WIDTH="90%" BORDER="0" CELLSPACING="1" CELLPADDING="5">
    <tr> 
      <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">GENERAL</font></b></td>
    </tr>
    <tr> 
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">CTRL<br>      
      </font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">In conjunction with some actions, toggles snap to gird mode on/off.</font></td>
    </tr>
    <tr> 
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">TAB</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Selects the next selectable object.</font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">SHIFT+TAB</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">    Selectes the previous selectable object.</font></td>
    </tr>
    <tr> 
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">LEFT<br>
      </font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Moves left selected and movable objects.</font></td>
    </tr>
    <tr> 
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">RIGHT</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> Moves right selected and movable objects.</font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">UP</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Moves up selected and movable objects.</font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">DOWN</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Moves down selected and movable objects.</font></td>
    </tr>
  </table>
  <br>
  <table WIDTH="90%" BORDER="0" CELLSPACING="1" CELLPADDING="5">
    <tr>
      <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">NODES</font></b></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">SHIFT+LEFT<br>
      </font></strong></td>
      <td WIDTH="477" BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Decreases width of selected and resizable nodes.</font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">SHIFT+RIGHT</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> Increases width of selected and resizable nodes.</font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">SHIFT+UP</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Decreases height of selected and resizable nodes.</font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">SHIFT+DOWN</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Increases height of selected and resizable nodes.</font></td>
    </tr>
  </table>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="MOUSE_MAPPING" ID="MOUSE_MAPPING"></a><br>
      <font SIZE="4">MOUSE ACTIONS </font></b></font></p>
<ul>
  <table WIDTH="90%" BORDER="0" CELLSPACING="1" CELLPADDING="5">
    <tr>
      <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">GENERAL</font></b></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">CLICK<br>
      </font></strong></td>
      <td WIDTH="487" BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Selects the clicked object if it is selectable,
and clears previous selection.</font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">SHIFT+CLICK</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> Toggles selection of the clicked object, and 
keeps the old selection. If the object is not 
selectable, it would not be selected.</font></td>
    </tr>
  </table>
  <br>
  <table WIDTH="90%" BORDER="0" CELLSPACING="1" CELLPADDING="5">
    <tr>
      <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">DESIGNER</font></b></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">DRAG<br>
      </font></strong></td>
      <td WIDTH="487" BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Selects selectable objects in the marked
area, and clears previous selection. Holding <strong>CTRL</strong> key down causes only node object be selected. </font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>SHIFT+DRAG</strong></font></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> Toggles selection of the objects in the marked 
area, and keeps the old selection unchanged. If any object 
is not selectable, it would not be selected. Holding <strong>CTRL</strong> key down causes only selection of node objects toggles. </font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>ALT+DRAG</strong></font></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> Zooms the marked area in.</font></td>
    </tr>
  </table>
  <br>
  <table WIDTH="90%" BORDER="0" CELLSPACING="1" CELLPADDING="5">
    <tr>
      <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">NODES</font></b></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">DRAG CLINET<br>
      </font></strong></td>
      <td WIDTH="487" BGCOLOR="#EEEEEE">If the node is movable, moves the node.</td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">DRAG MARKER </font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> 	   If the node is resizable, resize the node according
to the dragging marker.</font></td>
    </tr>
  </table>
  <br>
  <table WIDTH="90%" BORDER="0" CELLSPACING="1" CELLPADDING="5">
    <tr>
      <td COLSPAN="2" BGCOLOR="#660000"><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2" COLOR="#FFFFFF">LINKS</font></b></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">DRAG LINE/CAPTION <br>
      </font></strong></td>
      <td WIDTH="487" BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> If the link can be moved, moves 
the link.<br>
      </font></td>
    </tr>
    <tr>
      <td WIDTH="25%" BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">DRAG POINT </font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> If the point is not fixed, moves the point. If 
the point is an endpoint, and <strong>ALT</strong> key is not 
down, dropping the point on an object establishes 
a link. </font></td>
    </tr>
    <tr>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>ALT+CLICK POINT</strong></font></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">If the point is not fixed, removes the point.</font></td>
    </tr>
    <tr>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>ALT+CLICK LINE</strong></font></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">If the link is not marked as fixed, inserts a new 
breakpoint at the clicked coordinates.</font></td>
    </tr>
    <tr>
      <td BGCOLOR="#EEEEEE"><strong><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">RIGHT+CLICK</font></strong></td>
      <td BGCOLOR="#EEEEEE"><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">If a point is dragging, inserts a new breakpoint.
The source point of the drag action, keeps its 
dragging state.</font></td>
    </tr>
  </table>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="HISTORY"></a><br>
  <font SIZE="4">HISTORY</font></b></font><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> </font></p>
	<ul>
		<li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.90 (April 27, 2013)</strong></font>
			<ul>
				<li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed the bug that causing some random characters appear on caption of links.</font></li>
				<li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Improved positioning of caption of links.</font></li>
			</ul>
		</li>
	</ul>
	<ul>
		<li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.81 (January 6, 2013)</strong></font>
			<ul>
				<li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed the compatibility issues with Delphi XE2 and XE3.</font></li>
			</ul>
		</li>
	</ul>
	<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.80 (June 2, 2011)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added two new options gloFixedAnchorStartPoint and gloFixedAnchorEndPoint to the LinkOptions property of <a href="#TGraphLink">TGraphLink</a>. These options control whether the hooked links should be anchored to a fixed point on the target object or not.</font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.72 (February 2, 2009)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">The malfunction in changing Left, Top, Width, and Height properties of <a href="#TGraphNode">TGraphNode</a> inside a BeginUpdate/EndUpdate block is fixed.</font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.71 (January 16, 2009)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Re-entrance problem in repositioning of hooked objects is fixed (Thanks to <a href="http://forum.delphiarea.com/memberlist.php?mode=viewprofile&amp;u=1634">cml0816</a>).</font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Problem in selecting horizontal and vertical links with one pixel width is fixed (Thanks to <a href="http://forum.delphiarea.com/memberlist.php?mode=viewprofile&amp;u=1634">cml0816</a>).</font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a href="#TGraphObjectList.Push">Push</a> and <a href="#TGraphObjectList.Pop">Pop</a> methods to <a href="#TGraphObjectList">TGraphObjectList</a> class.</font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.70 (November 14, 2008)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Support for Delphi 2009 added.</font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed bug in <a href="#NormalizeBreakPoints">NormalizeBreakPoints</a> method of <a href="#TGraphLink">TGraphLink</a> class (Thanks to <a href="http://forum.delphiarea.com/memberlist.php?mode=viewprofile&amp;u=1443">liu8670</a>).</font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed bug in <a href="#ZoomRect">ZoomRect</a> method (Thanks to <a href="http://whitekid.tistory.com/">Choe, Cheng-Dae</a>).</font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.62 (May 15, 2007)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed the compatibility issue with Delphi 5.</font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.61 (March 30, 2006)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in managing mouse while <a HREF="#CommandMode">CommandMode</a> is cmViewOnly.</font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.60 (March 29, 2006)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#OnObjectMouseEnter">OnObjectMouseEnter</a> and <a HREF="#OnObjectMouseLeave">OnObjectMouseLeave</a> events to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#DragSource">DragSource</a> and <a HREF="#ObjectAtCursor">ObjectAtCursor</a> properties to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ResizeSelection">ResizeSelection</a> method to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.50 (March 26, 2006)</strong></font>
    <ul>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#OverlappedRect">OverlappedRect</a> as global procedure. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#Transparent">Transparent</a> property to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ChangeZoom">ChangeZoom</a> and <a HREF="#ChangeZoomBy">ChangeZoomBy</a> methods to  <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#AlignSelection">AlignSelection</a> method to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in drawing child controls.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in calculating range of scroll bars when the control had aligned child controls. </font></li>
    </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.40 (March 22, 2006)</strong></font>
      <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in scrolling the graph by keyboard.</font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in <a HREF="#TGraphObjectList">TGraphObjectList</a>.Assign method. </font></li>
      </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.30 (March 21, 2006)</strong></font>
    <ul>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#TCompatibleCanvas">TCompatibleCanvas</a> class. </font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added cmPan to possible values of <a HREF="#CommandMode">CommadMode</a> properties. </font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#OnMoveResizeNode">OnMoveResizeNode</a> event. </font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in <a HREF="#FindObjectAt">FindObjectAt</a> method. </font></li>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in triggering some events while loading or clearing the graph. </font></li>
    </ul>
  </li>
</ul>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Version 2.20 (March 19, 2006)
      </strong> </font>
    <ul>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#SourceRect">SourceRect</a>  property to <a HREF="#TGraphConstraints">TGraphConstraints</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in merging graphs. </font></li>
    </ul>
  </li>
</ul>
<ul>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 2.10 (March 18, 2006)</b></font>
    <ul>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#TCanvasRecall">TCanvasRecall</a> class. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#UnionRect">UnionRect</a> and <a HREF="#IntersectRect">IntersectRect</a> as global procedures. </font>        </li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ClipboardFormats">ClipboardFormats</a> property to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#DraggingObjects">DraggingObjects</a> and <a HREF="#DraggingBounds">DraggingBounds</a>  property to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ScrollCenter">ScrollCenter</a> method  to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ScreenToGraph">ScreenToGraph</a> and <a HREF="#GraphToScreen">GraphToScreen</a>, <a HREF="#SnapPoint">SnapPoint</a>, and <a HREF="#SnapOffset">SnapOffset</a> methods to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#FindObjectByID">FindObjectByID</a>, and <a HREF="#ForEachObject">ForEachObject</a> methods to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#SaveAsBitmap">SaveAsBitmap</a>, <a HREF="#CopyToGraphic">CopyToGraphic</a> methods to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#MergeFromStream">MergeFromStream</a> and <a HREF="#MergeFromFile">MergeFromFile</a>  methods to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#InvalidateRect">InvalidateRect</a>  method to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#OnObjectInitInstance">OnObjectInitInstance</a>, <a HREF="#OnObjectChange">OnObjectChange</a>, and <a HREF="#OnCanRemoveObject">OnCanRemoveObject</a> events to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#OnObjectRead">OnObjectRead</a> and <a HREF="#OnObjectWrite">OnObjectWrite</a> events to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#HasCustomData">HasCustomData</a> property to <a HREF="#TGraphObject">TGraphObject</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#CanDelete">CanDelete</a> method to <a HREF="#TGraphObject">TGraphObject</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ObjectInvalidate">Invalidate</a>  method to <a HREF="#TGraphObject">TGraphObject</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#IsNode">IsNode</a> class method to <a HREF="#TGraphObject">TGraphObject</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#States">States</a>, <a HREF="#UniqueID">ID</a>, and <a HREF="#Data">Data</a> properties to <a HREF="#TGraphObject">TGraphObject</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added missing <a HREF="#AssignTo">AssignTo</a>  method to <a HREF="#TGraphObject">TGraphObject</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#Dependents">Dependents</a> and <a HREF="#DependentCount">DependentCount</a> properties to <a HREF="#TGraphObject">TGraphObject</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#LinkInputs">LinkInputs</a>, <a HREF="#LinkInputCount">LinkInputCount</a>, <a HREF="#LinkOutputs">LinkOutputs</a>, and <a HREF="#LinkOutputCount">LinkOutputCount</a> to <a HREF="#TGraphObject">TGraphObject</a>. Refer to the graph theory, for a node (vertex), these properties are  equivalent to input edges, indegree (deg<sup>-</sup>), output edges, and outdegree (deg<sup>+</sup>) of the node.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#VisualRect">VisualRect</a> and <a HREF="#SelectedVisualRect">SelectedVisualRect</a> properties to <a HREF="#TGraphObject">TGraphObject</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added  <a HREF="#ObjectCreate">Create</a> constructor   to <a HREF="#TGraphObject">TGraphObject</a>. Therefore, since now an object can be inserted in a graph directly. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#LinkCreateNew">CreateNew</a> constructor to <a HREF="#TGraphLink">TGraphLink</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#NodeCreateNew">CreateNew</a> constructor to <a HREF="#TGraphNode">TGraphNode</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#DragBy">DragBy</a> method to <a HREF="#TGraphObject">TGraphObject</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered prototype of <a HREF="#BeginDrag">BeginDrag</a> and <a HREF="#DragTo">DragTo</a> methods of <a HREF="#TGraphObject">TGraphObject</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered the return value of <a HREF="#ConvertTo">ConvertTo</a> method of <a HREF="#TGraphObject">TGraphObject</a>. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered <a HREF="#TGraphObjectList">TGraphObjectList</a> class. The new implementation provides a mechanism to safely enumerate graph objects without beging worry about the items which could be deleted during the enumeration. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered <a HREF="#OnObjectBeginDrag">OnObjectBeginDrag</a> and <a HREF="#OnObjectEndDrag">OnObjectEndDrag</a> events in the way that provide mode information about the dragging object. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered zooming properties. The current zoom range is from 5% to 36863%. In the other hand, because of adding OnMouseWheelDown and OnMouseWheelUp events to <a HREF="#TSimpleGraph">TSimpleGraph</a>, the control does not change the zoom factor internally. Because of these changes, ZoomMin, ZoomMax, and ZoomStep properties were obsolete and removed. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered prototype of <a HREF="#FindObjectAt">FindObjectAt</a> method of <a HREF="#TSimpleGraph">TSimpleGraph</a>. I replaced two previous ovrloaded FindObjectAt methods, with a new one that is more useful and flexible.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Improved painting mechanism to increase speed and reduce cpu usage. </font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in moving a group of selected link objects.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in inserting links that happening in Delphi 4 and 5.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed the bug about not triggering <a HREF="#OnObjectUnhook">OnObjectUnhook</a> event when unhooking was consequence of an object deletion.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in saving <a HREF="#BackgroundMargins">BackgroundMargins</a>.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug in  <a HREF="#MinimizeText">MinimizeText</a> routine. In addition, this routine improved to instead of three periods as ellipsis (...), when selected font supports, uses single character ellipses (&hellip;).</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed a bug regarding positioning of the links.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Fixed some minor bugs.</font></li>
      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">And, many other improvements in the code. </font></li>
    </ul>
  </li>
</ul>
<ul>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 2.00 (February 23, 2006)<br>
    </b></font><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>To improve performance and functionality of the control, most part of the code is written again. Because of that, if you are using your own modified version of the control, or if you have derived your own graph object, you may need to rewrite your code. Otherwise, you may need to do some small changes. </strong></font><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>The old saved graph files are backward compatible with the new version.</strong></font>
    <p><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><strong>Here are list of changes. General compatibility issues are markded as red.</strong></font></p>
  </li>
  <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Changes in <a HREF="#TSimpleGraph">TSimpleGraph</a>  class are:</font>        
              <ul>
                    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added <a HREF="#LockLinks">LockLinks</a> property.</font></li>
                          <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added <a HREF="#OnObjectEndDrag">OnObjectBeginDrag</a> and <a HREF="#OnObjectEndDrag">OnObjectEndDrag</a> events.</font></li>
                          <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added <a HREF="#OnObjectHook">OnObjectHook</a> and <a HREF="#OnObjectUnhook">OnObjectUnhook</a> events.</font></li>
                          <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added <a HREF="#OnCanHookLink">OnCanHookLink</a> event.</font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Replaced OnCanLinkNodes event with <a HREF="#OnCanLinkObjects">OnCanLinkObjects</a> event.</font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Replaced ToggleNodesAt method with <a HREF="#ToggleSelection">ToggleSelection</a> method, which is more felexible. In addition, the new method precisely detects objects that are inside the selection rectangle or intersects it. </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added an overload for <a HREF="#FindObjectAt">FindObjectAt</a> method.</font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered Bounds parameter of <a HREF="#InsertNode">InsertNode</a> method from PRect to TRect. </font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Replaced LinkNodes method with <a HREF="#InsertLink">InsertLink</a> method, which has  three other overloads.</font><font COLOR="#FF0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ClearSelection">ClearSelection</a> method. </font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Renamed cmLinkNodes to cmInsertLink (See <a HREF="#CommandMode">CommandMode</a> property). </font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Removed IsValidLink method. Use <a HREF="#CanLink">CanLink</a> method of <a HREF="#TGraphLink">TGraphLink</a> as replacement. </font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered some <a HREF="#KEY_MAPPING">keyboard</a> and <a HREF="#MOUSE_MAPPING">mouse</a> actions. Besides that, each object has its own keyboard and mouse events.</font></li>
                          <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added missing code for checking graph contraints while moving/resizing objects using keyboard.</font></li>
          </ul>
    </li>
          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Changes in <a HREF="#TGraphObject">TGraphObject</a> class are:</font>
                <ul>
                      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#Options">Options</a> property.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#Dragging">Dragging</a> property as read-only.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#BeginDrag">BeginDrag</a>, <a HREF="#DragTo">DragTo</a>, and <a HREF="#EndDrag">EndDrag</a> methods. </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#HitTest">HitTest</a> method.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ContainsRect">ContainsRect</a> method. </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#Delete">Delete</a> method. </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#IsLocked">IsLocked</a> method. </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered <a HREF="#IsLink">IsLink</a> property to class method. </font></li>
            </ul>
          </li>
          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Changes in <a HREF="#TGraphLink">TGraphLink</a> are:</font>
                <ul>
                      <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Improved functionality. The new links can have breakpoints, each endpoint optionally can be hooked to a graph object (node and link objects), and style of each endpoint is customizable.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#Points">Points</a>, <a HREF="#PointCount">PointCount</a> and <a HREF="#Polyline">Polyline</a> properties.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#TextPosition">TextPosition</a> and <a HREF="#TextSpacing">TextSpacing</a> properties. </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#LinkOptions">LinkOptions</a> property.</font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Replaced Kind property with <a HREF="#BeginStyle">BeginStyle</a> and <a HREF="#EndStyle">EndStyle</a> properties.</font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Replaced ArrowSize property with <a HREF="#BeginSize">BeginSize</a> and <a HREF="#EndSize">EndSize</a> properties. </font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Replace FromNode and ToNode properties with <a HREF="#Source">Source</a> and <a HREF="#Target">Target</a> properties.</font> </li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added CanMove method.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#AddPoint">AddPoint</a>, <a HREF="#InsertPoint">InsertPoint</a>, <a HREF="#RemovePoint">RemovePoint</a>, <a HREF="#IndexOfPoint">IndexOfPoint</a>, <a HREF="#AddBreakPoint">AddBreakPoint</a>, and <a HREF="#NormalizeBreakpoints">NormalizeBreakpoints</a> methods to manage link's polyline.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#IsFixedPoint">IsFixedPoint</a>, <a HREF="#IsHookedPoint">IsHookedPoint</a>, <a HREF="#HookedObjectOf">HookedObjectOf</a>, <a HREF="#HookedIndexOf">HookedIndexOf</a>, and <a HREF="#HookedPointCount">HookedPointCount</a> to query about points.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#CanHook">CanHook</a>, <a HREF="#Hook">Hook</a>, <a HREF="#Unhook">Unhook</a>, <a HREF="#CanLink">CanLink</a>, and <a HREF="#Link">Link</a> methods to manage hooking and linking actions.</font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added Rotate and Scale methods. </font></li>
            </ul>
          </li>
  </ul>
  <ul>
        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Changes in <a HREF="#TGraphNode">TGraphNode</a> class are:</font>
              <ul>
                    <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#NodeOptions">NodeOptions</a> property.
                          </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#BackgroundMargins">BackgroundMargins</a> property. </font></li>
                          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#CanMoveResize">CanMoveResize</a> method. </font></li>
                          <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Removed QueryLinkTo method. </font>
                </li>
          </ul>
    </li>
          <ul>
                  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Fixed clipped text problem that was occurring when graph was zoomed in.</font></li>
          </ul>
          <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added <a HREF="#Vertices">Vertices</a> property to <a HREF="#TPolygonalNode">TPolygonalNode</a> class as read-only. </font></li>
          <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Altered base class of <a HREF="#TRectangularNode">TRectangularNode</a> from <a HREF="#TGraphNode">TGraphNode</a> to <a HREF="#TPolygonalNode">TPolygonalNode</a>.</font></li>
          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#THexagonalNode">THexagonalNode</a> class. </font></li>
          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Changes in <a HREF="#TGraphConstraints">TGraphConstraints</a> class are: </font>
                  <ul>
                        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#WithinBounds">WithinBounds</a> method.</font></li>
                            <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#ConfineOffset">ConfineOffset</a> method.</font></li>
                            <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered prototype of <a HREF="#ConfinePt">ConfinePt</a> and <a HREF="#ConfineRect">ConfineRect</a> methods. </font></li>
                            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Fixed malfunction of <a HREF="#ConfineRect">ConfineRect</a> method.</font></li>
            </ul>
          </li>
          <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Changes in Global Procedures are:</font>
                  <ul>
                        <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Added <a HREF="#NormalizeAngle">NormalizeAngle</a>, <a HREF="#EqualPoint">EqualPoint</a>, <a HREF="#ScalePoints">ScalePoints</a>, <a HREF="#ShiftPoints">ShiftPoints</a>, <a HREF="#MakeSquare">MakeSquare</a>, <a HREF="#LineLength">LineLength</a>, <a HREF="#NearestPointOnLine">NearestPointOnLine</a>, and <a HREF="#IntersectLinePolyline">IntersectLinePolyline</a> functions.</font></li>
                            <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered prototype of <a HREF="#IntersectLineRect">IntersectLineRect</a>, <a HREF="#IntersectLineEllipse">IntersectLineEllipse</a>, <a HREF="#IntersectLineRoundRect">IntersectLineRoundRect</a>, and <a HREF="#IntersectLinePolygon">IntersectLinePolygon</a> functions, so that they can calculate the intersection points of a general line. Before they could only calculate the intersection points of lines where passing thru the center of shape. </font></li>
                            <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered return type of <a HREF="#DistanceToLine">DistanceToLine</a> function from integer to double. </font></li>
                            <li><font COLOR="#CC0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif">Altered type of DistanceFromThisPt parameter of <a HREF="#NextPointOfLine">NextPointOfLine</a> function from integer to double.</font><font COLOR="#FF0000" SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"> </font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><br>
                                    <br>
                                </font></li>
            </ul>
          </li>
  </ul>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">      <b>Version 1.67 (November 14, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added <a HREF="#OnZoomChange">OnZoomChange</a> event.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Bug on calling OnResize and OnCanResize events fixed. <br>
        <br>
      </font></li>
    </ul>
  </li>
  <li> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.66 (November 11, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added property <a HREF="#FixedScrollBars">FixedScrollBars</a>. </font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Applied <a HREF="#GraphConstratints">GraphConstraints</a> verification during insertion of a new node using mouse.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added <a HREF="#ConfinePt">ConfinePt</a> and <a HREF="#ConfineRect">ConfineRect</a> methods to <a HREF="#TGraphConstratints">TGraphConstraints</a>. <br>
        <br>
      </font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">    <b>Version 1.65 (November 10, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added missing events OnClick  and <a HREF="#OnObjectClick">OnObjectClick</a>. </font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Removed FreezeTopLeft property, and instead of that, to have more control on bounding rectangle of the graph, the new property <a HREF="#GraphConstraints">GraphConstraints</a> added.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The control's paint handler improved. So that, there is no memory limit on graph's bounds. In addition, the paint handler draws objects much faster than before.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The control accepts child controls.
        <br>
        <b><br>
        </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.61 (November 1, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added event <a HREF="#OnInfoTip">OnInfoTip</a> to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added global procedure <a HREF="#NearestPoint">NearestPoint</a>.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Changed all <em>Extended</em> data types to <em>Double</em> to prevent exception (Invalid Floating Point Operation).
      </font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Fixed the bug regarding to calculating the end points of the links (all the related routins are changed).</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The limit on defining vertices for the polygon in <a HREF="#TPolygonalNode">TPolygonalNode</a>  class was removed. <br>
        <b><br>
        </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>        </b></font>    <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.60 (October 29, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added property <a HREF="#Layout">Layout</a> to <a HREF="#TGraphNode">TGraphNode</a>.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added property <a HREF="#DrawOrder">DrawOrder</a> to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added events <a HREF="#OnBeforeDraw">OnBeforeDraw</a>, <a HREF="#OnAfterDraw">OnAfterDraw</a>, <a HREF="#OnObjectBeforeDraw">OnObjectBeforeDraw</a>, and <a HREF="#OnObjectAfterDraw">OnObjectAfterDraw</a> to <a HREF="#TSimpleGraph">TSimpleGraph</a>. </font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Added global procedures <a HREF="#WrapText">WrapText</a> and 
        <a HREF="#MinimizeText">MinimizeText</a>.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">If text of the object doesn't fit on the screen, the complete text can appear as tool tip (ShowHint</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">property should be True).<b> </b></font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The malfunction in drawing text 
                              of the nodes with the zoom factor other than 100% is fixed.<br>
          Some minor tweaks. <b><br>
          </b></font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
                    </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.58 (September 29, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The <a HREF="#Hint">Hint</a> property added to <a HREF="#TGraphObject">TGraphObject</a>. <b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.57 (May 13, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Workaround to a Windows bug added (see <a HREF="http://www.delphiarea.com/forum/viewtopic.php?t=408">here</a> for details). <b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.56 (May 9, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Copy/Paste bug fixed.<b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.55 (April 21, 2005)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Memory leak bug fixed.<b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.54.2 
        (August 24, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The black border that was appearing during scroll is fixed.<b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.54.1 
        (August 20, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The bug in calculating the scroll bars' range fixed.<b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.54 
        (August 6, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new property <a HREF="#MinNodeSize">MinNodeSize</a> added to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new property <a HREF="#ArrowSize">ArrowSize</a> added to <a HREF="#TGraphLink">TGraphLink</a>.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Some minor tweaks.<b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.53.1 
        (August 4, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The bug regarding to <a HREF="#FreezeTopLeft">FreezeTopLeft</a> property 
              fixed.<br>
        </font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.53 
        (August 4, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The bug in moving/resizing overlapped objects fixed.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new property <a HREF="#FreezeTopLeft">FreezeTopLeft</a> added to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.52 
        (July 18, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The scrolling malfunction when the zoom was greater than 100% is fixed.<b><br>
        <br>
      </b></font> </li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.51 
        (June 28, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">A minor bug fixed.<b><br>
        <br>
      </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.50 
      (June 22, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#VisibleBounds">VisibleBounds</a> property added to <a HREF="#TSimpleGraph">TSimpleGraph</a>. 
      </font></li>
    </ul>
  </li>
  <ul>
    <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new abstract class <a HREF="#TPolygonalNode">TPolygonalNode</a> introduced.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><a HREF="#TTriangularNode">Triangular</a>, <a HREF="#TRhomboidalNode">Rhomboidal</a>, 
              and <a HREF="#TPentagonalNode">pentagonal</a> nodes defined.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Some new global functions added.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Some speed improvements.<b><br>
            <br>
      </b></font></li>
  </ul>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.21.1 (June 18, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The compiler error on Delphi 4 fixed. <b><br>
            <br>
      </b>      </font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.21 (June 13, 2004)</b></font> 
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new property <a HREF="#SelectionBounds">SelectionBounds</a> added. </font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new methods <a HREF="#ZoomRect">ZoomRect</a>, <a HREF="#ZoomObject">ZoomObject</a>, 
                                    <a HREF="#ZoomSelection">ZoomSelection</a>, and <a HREF="#ZoomGraph">ZoomGraph</a> 
                added.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The missing method <a HREF="#GraphToClient">GraphToClient</a> added.</font></li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Some minor tweaks.<b><br>
                <br>
              </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.20 
                          (June 12, 2004)</b></font>
    <ul>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Zooming ability, and consequently <a HREF="#Zoom">Zoom</a>, <a HREF="#ZoomMin">ZoomMin</a>, 
                          <a HREF="#ZoomMax">ZoomMax</a> and <a HREF="#ZoomStep">ZoomStep</a> properties 
                                            added to the control. </font>
      </li>
      <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new <a HREF="#ClientToGraph">ClientToGraph</a> method added.<b><br>
        <br>
        </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.10 
                            (May 16, 2004)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new property <a HREF="#Kind">Kind</a> added to <a HREF="#TGraphLink">TGraphLink</a>.</font></li>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">LinkTypeTo method of <a HREF="#TGraphNode">TGraphNode</a> renamed to <a HREF="#QuaryLinkTo">QueryLinkTo</a>, and also the functionality improved.<b><br>
            <br>
            </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.09 
                            (May 9, 2004)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Some bugs were fixed.<b><br>
            <br>
            </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.08 
                            (May 10, 2003)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The division by zero exception raised in calculating the distance of 
                                                    a point from a line was fixed.<b><br>
                                                    <br>
                                            </b></font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b> Version 
                            1.07 (April 27, 2003)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The new property <a HREF="#Background">Background</a> added to <a HREF="#TGraphNode">TGraphNode</a>.<br>
            <br>
            </font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.06 
                            (April 23, 2003)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The 
                                                    PaintTo method removed and instead of that two methods <a HREF="#Print">Print</a> 
            and <a HREF="#SaveAsMetafile">SaveAsMetafile</a> added to <a HREF="#TSimpleGraph">TSimpleGraph</a>.</font></li>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The new property <a HREF="#HideSelection">HideSelection</a> added to <a HREF="#TSimpleGraph">TSimpleGraph</a>.<br>
            <br>
            </font></li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 
                              1.05 (April 21, 2003)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The 
                                                    new properties <a HREF="#Alignment">Alignment</a> and <a HREF="#Margin">Margin</a> 
            were added to <a HREF="#TGraphNode">TGraphNode</a>.<br>
            <br>
            </font> </li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.04 
                            (April 21, 2003)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Modified 
                                                    to publish on public domain.<br>
            <br>
            </font> </li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.03 
                            (August 27, 2000)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The problem of finding the intersection of line and round rectangle 
                                                    was fixed.<br>
            <br>
            </font> </li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.02 
                            (August 22, 2000)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">The bug in movement of links was fixed.<b><br>
            <br>
            </b></font> </li>
    </ul>
  </li>
  <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"><b>Version 1.01 
                            (July 01, 2000)</b></font>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> The wrong behavior of the control when nodes are locked was fixed.<b><br>
            <br>
            </b></font> </li>
    </ul>
  </li>
  <li><b><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Version 1.00 
                                  (June 11, 2000)</font></b>
    <ul>
            <li><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> Initial release.</font> </li>
    </ul>
  </li>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="ACKNOWLEDGMENT"></a><br>
  <font SIZE="4">ACKNOWLEDGMENT</font></b></font></p>
<p> 
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">Special thanks 
  to:</font></p>
<ul>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:w2m@netheaven.com">Bill Miller</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:StefanMelis@yahoo.com">Stefan Melis</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:pavel.vrecion@tiscali.cz">Pavel Vrecion</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:eliaslamela@hotmail.com">Elias Lamela</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:kokkoras@csd.auth.gr">Fotis Kokkoras</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:sergisan@terra.es">Sergisan</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:R_Lepsius@gmx.de">P_G</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:listmember@letterboxes.org">Adem</a></font></li>
  <li><font SIZE="2" FACE="Verdana, Arial, Helvetica, sans-serif"><a HREF="mailto:hpwickern@hpwsoft.de">Hans-Peter Wickern</a></font><br> 
  </li>
</ul>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="LICENSE"></a><br>
  <font SIZE="4">LICENSE</font></b></font></p>
<p> 
<p><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">TSimpleGraph component 
  is freeware. You may copy component's files AS LONG AS YOU COPY ALL OF THEM. 
  If you want to change the source code in order to improve the component's features, 
  performance, etc. please send me the new source code so that I can have a look 
  at it. The changed source code should contain descriptions what you have changed, 
  and of course your name. The only thing you MAY NOT CHANGE is the ORIGINAL COPYRIGHT 
  INFORMATION. </font></p>
<p></p>
<p><font FACE="Verdana, Arial, Helvetica, sans-serif"><b><a NAME="DISCLAIMER"></a><br>
  </b> <b> <font SIZE="4">DISCLAIMER</font></b></font></p>
<p> <font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2">TSimpleGraph</font><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="2"> 
  component is provided &quot;AS IS&quot; without any warranty of any kind, either 
  express or implied. The entire risk as to the quality and performance of the 
  software is with you. The author is NOT liable for any DAMAGES resulting from 
  the use and misuse of the component, especially he is NOT liable for DAMAGES 
  that were caused BY ANY VERSION WHICH HAS NOT BEEN PROGRAMMED BY THE AUTHOR 
  HIMSELF.</font></p>
<br>
<table WIDTH="100%" BORDER="0" CELLSPACING="0" CELLPADDING="0">
  <tr> 
    <td WIDTH="100%"> 
      <hr NOSHADE>
    </td>
    <td NOWRAP><font FACE="Verdana, Arial, Helvetica, sans-serif" SIZE="1"><sup>&nbsp;END 
      OF DOCUMENT</sup></font></td>
  </tr>
</table>
</body>
</html>
