unit eeEditorExport;
{* Компонент для экспорта интерфейса _IeeEditor. }

{ Библиотека "Эверест"    }
{ Автор: Люлин А.В. ©     }
{ Модуль: eeEditorExport - }
{ Начат: 26.09.2002 19:07 }
{ $Id: eeEditorExport.pas,v 1.40 2013/05/14 13:36:31 lulin Exp $ }

// $Log: eeEditorExport.pas,v $
// Revision 1.40  2013/05/14 13:36:31  lulin
// {RequestLink:453166247}.
//
// Revision 1.39  2013/04/05 12:02:29  lulin
// - портируем.
//
// Revision 1.38  2012/10/08 18:01:10  lulin
// {RequestLink:397302106}
//
// Revision 1.37  2012/10/02 11:18:40  lulin
// {RequestLink:398262638}.
//
// Revision 1.36  2012/09/29 15:24:38  lulin
// {RequestLink:397301416}
//
// Revision 1.35  2012/09/26 14:28:14  dinishev
// {Requestlink:397289578}
//
// Revision 1.34  2012/08/16 14:17:04  dinishev
// {Requestlink:385028685}
//
// Revision 1.33  2012/08/08 10:20:18  kostitsin
// [$381879735]
//
// Revision 1.32  2012/08/06 11:57:00  kostitsin
// [$381879723]
//
// Revision 1.31  2012/08/06 09:12:29  kostitsin
// [$380622163]
//
// Revision 1.30  2012/08/03 11:55:49  kostitsin
// [$380620907]
//
// Revision 1.29  2012/07/30 09:12:23  kostitsin
// [$379244068]
//
// Revision 1.28  2012/07/18 13:18:02  lulin
// {RequestLink:378550793}
//
// Revision 1.27  2012/04/25 15:41:46  lulin
// {RequestLink:357338233}
//
// Revision 1.26  2012/03/19 13:37:39  lulin
// {RequestLink:342860007}
//
// Revision 1.25  2012/02/03 17:09:17  lulin
// {RequestLink:333548940}
// - рисуем изменения Жени на модели.
//
// Revision 1.24  2011/10/26 16:56:06  lulin
// {RequestLink:278135821}.
//
// Revision 1.23  2011/10/21 13:12:31  lulin
// {RequestLink:294589436}.
//
// Revision 1.22  2011/10/21 12:34:54  lulin
// {RequestLink:294589436}.
//
// Revision 1.21  2011/09/08 13:36:34  lulin
// {RequestLink:278837795}.
//
// Revision 1.20  2011/08/26 16:33:58  lulin
// {RequestLink:278833302}.
//
// Revision 1.19  2011/08/25 20:16:12  lulin
// {RequestLink:279774244}.
//
// Revision 1.18  2011/07/15 17:30:44  lulin
// {RequestLink:269058433}.
//
// Revision 1.17  2011/04/14 16:19:25  lulin
// {RequestLink:257822128}.
//
// Revision 1.16  2011/03/25 17:28:50  lulin
// {RequestLink:259168102}.
//
// Revision 1.15  2011/03/24 15:53:28  lulin
// {RequestLink:255972328}.
//
// Revision 1.14  2011/01/19 11:25:56  lulin
// {RequestLink:250096300}.
//
// Revision 1.13  2011/01/14 15:53:24  lulin
// {RequestLink:248195582}.
// - вычищаем устаревшие интерфейсы.
//
// Revision 1.12  2010/12/20 12:10:38  lulin
// {RequestLink:248187141}.
//
// Revision 1.11  2010/12/01 14:56:51  lulin
// {RequestLink:244195072}.
//
// Revision 1.10  2010/09/22 14:55:56  lulin
// {RequestLink:235055410}. №4.
//
// Revision 1.9  2010/07/01 11:31:45  lulin
// {RequestLink:221251387}.
//
// Revision 1.8  2010/06/21 08:09:34  lulin
// {RequestLink:219121117}.
// - bug fix: лечим зацикливание на комментарии пользователя.
//
// Revision 1.7  2010/06/21 08:04:49  lulin
// {RequestLink:219121117}.
// - bug fix: лечим зацикливание на комментарии пользователя.
//
// Revision 1.6  2010/06/21 07:30:18  lulin
// {RequestLink:219121117}.
// - оптимизируем для плоских блоков.
//
// Revision 1.5  2010/06/21 07:17:21  lulin
// {RequestLink:219121117}.
// - пропускаем все листьевые параграфы не прибегая к помощи курсора.
//
// Revision 1.4  2010/06/16 15:16:22  lulin
// {RequestLink:217690373}.
//
// Revision 1.3  2010/05/26 12:32:07  lulin
// {RequestLink:216072862}.
// - оптимизируем поиск блока учитывая тот факт, что таблицы содержать блоков не могут.
//
// Revision 1.2  2010/04/30 10:47:00  lulin
// {RequestLink:208208356}.
//
// Revision 1.1  2010/04/21 16:52:40  lulin
// {RequestLink:144575972}.
// - переходим к абсолютным путям для включаемых файлов.
//
// Revision 1.10  2010/04/15 13:06:26  lulin
// {RequestLink:201491355}.
//
// Revision 1.9  2010/04/15 10:22:26  lulin
// {RequestLink:173509795}.
// - неправильно определяли ближайший к курсору блок.
//
// Revision 1.8  2010/02/26 08:51:08  lulin
// {RequestLink:193134950}.
// - отключаем возможность ввода SBS.
//
// Revision 1.7  2010/02/11 13:45:33  lulin
// - выкидываем неудавшийся фасад.
//
// Revision 1.6  2009/11/30 17:19:03  lulin
// - перегенерация.
//
// Revision 1.5  2009/11/20 13:56:38  lulin
// - при хождении по истории сбрасываем флажок.
//
// Revision 1.4  2009/11/20 13:47:43  lulin
// - вычитываем закладки из дерева оглавления.
//
// Revision 1.3  2009/11/19 14:48:34  lulin
// {RequestLink:159361982}.
//
// Revision 1.2  2009/10/19 17:56:30  lulin
// {RequestLink:164599478}.
//
// Revision 1.1  2009/09/14 11:28:08  lulin
// - выводим пути и для незавершённых модулей.
//
// Revision 1.337  2009/08/19 18:07:11  lulin
// {RequestLink:158795592}. Вставленный фрагмент из документа гаранта (вложенный k2_idDocument) сделать read-only, чтобы его можно было удалить только целиком.
//
// Revision 1.336  2009/08/06 12:16:45  lulin
// {RequestLink:129240934}. №25.
//
// Revision 1.335  2009/08/06 10:36:53  lulin
// {RequestLink:129240934}. №24.
//
// Revision 1.334  2009/08/06 10:16:25  lulin
// {RequestLink:129240934}. №22b.
//
// Revision 1.333  2009/08/05 17:22:39  lulin
// {RequestLink:129240934}. №22a.
//
// Revision 1.332  2009/08/05 15:13:09  lulin
// {RequestLink:159352361}.
// {RequestLink:129240934}. №22.
//
// Revision 1.331  2009/07/23 16:45:59  lulin
// - чистим код.
//
// Revision 1.330  2009/07/23 13:42:13  lulin
// - переносим процессор операций туда куда надо.
//
// Revision 1.329  2009/07/21 09:55:43  lulin
// - генерируем классы реализации тегов с модели.
//
// Revision 1.328  2009/07/15 15:12:23  lulin
// - удалено ненужное свойство списков параграфов.
//
// Revision 1.327  2009/07/14 14:56:32  lulin
// {RequestLink:141264340}. №25.
//
// Revision 1.326  2009/07/13 12:31:39  lulin
// {RequestLink:141264340}. №23ac.
//
// Revision 1.325  2009/07/11 15:55:11  lulin
// {RequestLink:141264340}. №22.
//
// Revision 1.324  2009/07/11 09:24:44  lulin
// - избавляемся от лишнего дёрганья счётчиков ссылок.
//
// Revision 1.323  2009/07/10 14:13:26  lulin
// - bug fix: не собирался Немезис.
//
// Revision 1.322  2009/07/10 13:03:29  lulin
// - чистка кода.
//
// Revision 1.321  2009/07/10 12:49:08  lulin
// - чистка контекста.
//
// Revision 1.320  2009/07/09 19:11:17  lulin
// {RequestLink:141264340}. №10.
//
// Revision 1.319  2009/07/07 14:07:45  lulin
// {RequestLink:155030165}.
//
// Revision 1.318  2009/07/07 13:05:12  lulin
// - bug fix: не собирался Немезис.
//
// Revision 1.317  2009/06/25 12:57:33  lulin
// - вычищаем ненужный контекст.
//
// Revision 1.316  2009/06/10 12:26:48  lulin
// - цепляем фильтр имён блоков к экспорту.
// - восстанавливаем код пропавший (точнее пролюбленный) при переносе на модель.
// - фильтруем полностью выделенные блоки.
//
// Revision 1.315  2009/06/02 13:48:04  lulin
// [$148574526].
//
// Revision 1.314  2009/05/29 17:18:32  lulin
// [$142610853].
//
// Revision 1.313  2009/04/09 14:12:39  lulin
// [$140837386]. №15.
//
// Revision 1.312  2009/04/07 16:09:44  lulin
// [$140837386]. №13.
//
// Revision 1.311  2009/04/06 17:51:28  lulin
// [$140837386]. №11.
//
// Revision 1.310  2009/03/04 13:32:52  lulin
// - <K>: 137470629. Генерируем идентификаторы типов с модели и убираем их из общей помойки.
//
// Revision 1.309  2009/03/03 17:42:02  lulin
// - <K>: 137470629. Убран ненужный промежуточный модуль.
//
// Revision 1.308  2009/02/26 10:21:22  lulin
// - <K>: 137465982. №1
//
// Revision 1.307  2009/02/25 17:43:45  lulin
// - <K>: 90441983. Переносим на модель.
//
// Revision 1.306  2008/12/12 19:19:16  lulin
// - <K>: 129762414.
//
// Revision 1.305  2008/10/09 13:37:37  lulin
// - <K>: 121145547.
//
// Revision 1.304  2008/10/01 10:49:52  lulin
// - <K>: 120718563.
//
// Revision 1.303  2008/09/09 10:26:34  oman
// - fix: Отъехал TAB (К-114459357)
//
// Revision 1.302  2008/09/04 11:56:45  lulin
// - <K>: 88080895.
//
// Revision 1.301  2008/09/04 11:16:15  lulin
// - <K>: 88080895.
//
// Revision 1.300  2008/09/04 07:28:31  lulin
// - <K>: 113508406.
//
// Revision 1.299  2008/09/03 15:32:43  lulin
// - избавляемся от промежуточных обёрток.
//
// Revision 1.298  2008/09/03 15:20:28  lulin
// - вычищен ненужниый код.
//
// Revision 1.297  2008/09/03 14:39:46  lulin
// - удалён ненужный параметр.
//
// Revision 1.296  2008/09/03 14:02:03  lulin
// - удалёны ненужные параметры.
//
// Revision 1.295  2008/09/03 12:56:25  lulin
// - убран ненужный параметр.
//
// Revision 1.294  2008/08/15 13:45:42  lulin
// - <K>: 109085374.
//
// Revision 1.293  2008/08/15 13:13:55  lulin
// - <K>: 108626698.
//
// Revision 1.292  2008/07/01 10:33:56  lulin
// - <K>: 97353852.
//
// Revision 1.291  2008/07/01 08:25:41  lulin
// - <K>: 97354478.
//
// Revision 1.290  2008/06/20 14:48:54  lulin
// - используем префиксы элементов.
//
// Revision 1.289  2008/05/16 15:20:38  lulin
// - переносим на модель.
//
// Revision 1.288  2008/04/23 09:52:53  lulin
// - <K>: 89105866.
//
// Revision 1.287  2008/04/15 08:23:49  lulin
// - передаём вью в качестве параметра.
//
// Revision 1.286  2008/04/14 07:03:24  lulin
// - передаём вью в рамках <K>: 89096854.
//
// Revision 1.285  2008/04/11 13:58:02  lulin
// - cleanup.
//
// Revision 1.284  2008/04/09 17:57:10  lulin
// - передаём вью в рамках <K>: 89096854.
//
// Revision 1.283  2008/04/09 11:20:24  lulin
// - передаём вью в рамках <K>: 89096854.
//
// Revision 1.282  2008/04/07 06:18:39  lulin
// - cleanup.
//
// Revision 1.281  2008/04/02 14:22:03  lulin
// - cleanup.
//
// Revision 1.280  2008/03/26 17:17:49  lulin
// - cleanup.
//
// Revision 1.279  2008/03/20 09:48:12  lulin
// - cleanup.
//
// Revision 1.278  2008/03/04 08:27:57  lulin
// - <K>: 85721148.
//
// Revision 1.277  2008/02/26 11:46:35  lulin
// - <CQ>: 20626.
//
// Revision 1.276  2008/02/08 17:06:18  lulin
// - класс _Tk2TagObject переехал на модель.
//
// Revision 1.275  2007/12/05 18:15:08  lulin
// - удален ненужный код.
//
// Revision 1.274  2007/12/04 12:47:33  lulin
// - перекладываем ветку в HEAD.
//
// Revision 1.266.2.126  2007/12/03 15:51:42  lulin
// - cleanup.
//
// Revision 1.266.2.125  2007/09/28 18:07:02  lulin
// - прикрутил использование места, где должна показываться метка.
//
// Revision 1.266.2.124  2007/09/19 12:34:41  lulin
// - bug fix: срабатывало событие о смене блока, когда блок на самом деле не поменялся, в результате висли на БИК (CQ OIT5-26753).
//
// Revision 1.266.2.123  2007/09/19 11:55:47  lulin
// - cleanup.
//
// Revision 1.266.2.122  2007/09/14 13:26:09  lulin
// - объединил с веткой B_Tag_Clean.
//
// Revision 1.266.2.121.2.1  2007/09/12 19:56:49  lulin
// - bug fix: не собиралась библиотека.
//
// Revision 1.266.2.121  2007/09/07 12:27:36  lulin
// - cleanup.
//
// Revision 1.266.2.120  2007/09/04 17:06:02  lulin
// - cleanup.
//
// Revision 1.266.2.119  2007/09/03 14:14:56  lulin
// - не отдавался корень оглавления, в результате не было синхронизации с текстом (CQ OIT5-26595).
//
// Revision 1.266.2.118  2007/08/28 17:07:08  lulin
// - оптимизируем загрузку строк.
//
// Revision 1.266.2.117  2007/08/09 11:19:15  lulin
// - cleanup.
//
// Revision 1.266.2.116  2007/08/02 19:41:39  lulin
// - cleanup.
//
// Revision 1.266.2.115  2007/08/02 19:15:33  lulin
// - cleanup.
//
// Revision 1.266.2.114  2007/07/30 11:41:26  oman
// - fix: Разворачиваем поиск вниз и при вставке из клипборда (cq25669)
//
// Revision 1.266.2.113  2007/07/19 08:37:31  oman
// - fix: При попытка вставить разрыв параграфа, сначала ищем
//  вверх, а если не получилось, то ищем вниз (cq25669)
//
// Revision 1.266.2.112  2007/07/19 06:18:07  oman
// - fix: выпрямляем зависимости. Схема документа, теперь не зависит от Эвереста.
// (Не собиралась библиотека)
//
// Revision 1.266.2.111  2007/06/26 10:42:45  lulin
// - cleanup.
//
// Revision 1.266.2.110  2007/06/22 19:24:53  lulin
// - cleanup.
//
// Revision 1.266.2.109  2007/06/22 18:59:56  lulin
// - cleanup.
//
// Revision 1.266.2.108  2007/02/09 14:51:14  lulin
// - переводим на строки с кодировкой.
//
// Revision 1.266.2.107  2007/01/05 14:37:21  lulin
// - cleanup.
//
// Revision 1.266.2.106  2006/12/27 14:39:17  lulin
// - упрощена работа со списками форматов.
//
// Revision 1.266.2.105  2006/12/25 13:25:12  lulin
// - bug fix: избавляемся от потенциального AV.
//
// Revision 1.266.2.104  2006/12/21 11:47:09  lulin
// - cleanup.
//
// Revision 1.266.2.103  2006/12/21 10:25:52  oman
// - fix: При выделении точки (nevSelection._SelectPoint) сбрасываем
//  выделение, если оно не постоянно и выбираемая точка в него не
//  попадает (cq23931)
//
// Revision 1.266.2.102  2006/12/19 12:24:23  lulin
// - избавляемся от запоминания объкта данных на контроле.
//
// Revision 1.266.2.101  2006/12/14 13:08:19  lulin
// - по-честному получаем ноду из объекта данных.
//
// Revision 1.266.2.100  2006/12/13 17:34:29  lulin
// - теперь базовый контрол поддерживает иконку от перетаскиваемого в него объекта.
//
// Revision 1.266.2.99  2006/12/13 15:41:40  lulin
// - метод вставки данных из буфера обмена переехал на базовый контрол.
//
// Revision 1.266.2.98  2006/12/12 09:54:15  oman
// - fix: Перенос HiddenStyles c DocumentContainer на редактор.
//   Поддержка экспорта/клипборда/d'n'd (cq12564)
//
// Revision 1.266.2.97  2006/12/11 09:55:23  oman
// - new: HiddenStyles перенесены с DocumentContainer на редактор (cq12564)
// - new: Изменена схема кэширования превью на DocumentContainer
//
// Revision 1.266.2.96  2006/11/03 12:21:10  lulin
// - удалены ненужные методы.
//
// Revision 1.266.2.95  2006/11/03 11:00:11  lulin
// - объединил с веткой 6.4.
//
// Revision 1.266.2.94.2.5  2006/10/25 09:45:02  lulin
// - операция клонирования спущена на базовую точку.
//
// Revision 1.266.2.94.2.4  2006/10/23 05:50:57  lulin
// - переход по ссылке переделан с обработки мыши на специально для этого выделенное событие.
//
// Revision 1.266.2.94.2.3  2006/10/20 10:54:04  lulin
// - более правильно делаем курсор для картинки.
//
// Revision 1.266.2.94.2.2  2006/10/19 13:33:21  lulin
// - переводим курсоры и подсказки на новые рельсы.
//
// Revision 1.266.2.94.2.1  2006/10/16 13:05:04  lulin
// - пытаемся оптимизировать скроллирование по-горизонтали.
//
// Revision 1.266.2.94  2006/10/10 12:06:17  lulin
// - cleanup.
//
// Revision 1.266.2.93  2006/09/29 13:59:34  oman
// - fix: Не всегда обновлялась позиция каретки (cq22441)
//
// Revision 1.266.2.92  2006/08/02 09:16:05  mmorozov
// - bugfix: процессору, после создания, не устанавливали флаг ReadOnly (CQ: OIT500022099);
//
// Revision 1.266.2.91  2006/07/20 18:28:08  lulin
// - убран лишний параметр.
//
// Revision 1.266.2.90  2006/07/20 18:19:25  lulin
// - убран лишний параметр.
//
// Revision 1.266.2.89  2006/07/20 18:10:46  lulin
// - избавляемся от получения горячей точки, через запрос интерфейса.
//
// Revision 1.266.2.88  2006/07/20 17:35:59  lulin
// - убраны параметры по умолчанию.
// - имя метода убрано из комментариев.
// - bug fix: в КЗ - рисовался "палец", теперь он правда рисуется в другом месте.
//
// Revision 1.266.2.87  2006/06/22 13:01:09  lulin
// - cleanup.
//
// Revision 1.266.2.86  2006/06/21 14:52:36  lulin
// - операция "вырезать" доступна только если выделение содержит в себе комментарий пользователя, или его часть (CQ OIT5-20327).
//
// Revision 1.266.2.85  2006/06/21 14:32:01  lulin
// - отключена вставка разрыва раздела/страницы в специфическом редакторе для Немезиса (CQ OIT5-19047).
//
// Revision 1.266.2.84  2006/06/13 13:11:01  lulin
// - bug fix: не всегда при наличии выделения вставлялись комментарии (CQ OIT5-19025).
//
// Revision 1.266.2.83  2006/06/08 13:37:54  lulin
// - подготавливаем контролы к обработке числа повторений нажатия клавиши.
//
// Revision 1.266.2.82  2006/04/18 14:20:02  lulin
// - bug fix: не спрашиваем о включении комментариев пользователя, если текст все равно нельзя редактировать.
//
// Revision 1.266.2.81  2006/03/30 11:49:24  lulin
// - cleanup: вытираем код для редактирования комментариев не в виде дерева.
//
// Revision 1.266.2.80  2006/03/29 15:29:33  lulin
// - вычищен страый механизм сохранения/удаления комментариев.
//
// Revision 1.266.2.79  2006/03/20 07:12:08  lulin
// - bug fix: было зацикливание при вставке комментария в выделение (CQ OIT5-19868).
//
// Revision 1.266.2.78  2006/03/06 14:28:28  lulin
// - убрана заплаточная проверка на то, что есть оглавление.
//
// Revision 1.266.2.77  2006/03/06 12:16:04  lulin
// - cleanup.
//
// Revision 1.266.2.76  2006/03/02 09:06:01  lulin
// - избавляемся от прямой ссылки на реализацию выделения.
//
// Revision 1.266.2.75  2006/03/02 08:12:21  lulin
// - модуль с выделением переехал в общий каталог.
//
// Revision 1.266.2.74  2006/02/20 17:29:29  dinishev
// Корретная работа Tab (c выходом за пределы редактора)
//
// Revision 1.266.2.73  2006/02/07 10:50:49  lulin
// - bug fix: не всегда текст синхронизировался с оглавлением (CQ OIT5-19497).
//
// Revision 1.266.2.72  2006/01/07 12:47:57  lulin
// - bug fix: падало при удалении части комментариев при вставке нового комментария (CQ OIT5-18935).
//
// Revision 1.266.2.71  2006/01/05 13:10:16  lulin
// - bug fix: в Undo-буфер попадала лишняя запись.
//
// Revision 1.266.2.70  2005/12/19 14:57:29  lulin
// - bug fix: при выделенном тексте всплывала ошибка о невозможности удалять не комментарии (CQ OIT5-18753).
//
// Revision 1.266.2.69  2005/12/16 12:12:25  lulin
// - bug fix: пытались вставить текст из буфера в каждый параграф Read-only документа (CQ OIT5-18692).
//
// Revision 1.266.2.68  2005/12/15 10:48:39  lulin
// - bug fix: при определении того сменился блок или нет для Немезиса не учитываем Sub'ы и пользовательские комментарии (CQ OIT5-18690).
//
// Revision 1.266.2.67  2005/12/14 14:48:27  lulin
// - bug fix: после невозможности удалить выделение вставляли данные не в том формате (CQ OIT5-18672).
//
// Revision 1.266.2.66  2005/12/14 11:08:04  lulin
// - cleanup.
//
// Revision 1.266.2.65  2005/12/09 15:44:11  lulin
// - bug fix: слишком поздно корректировали стиль параграфов в комментарии (CQ OIT5-18487).
//
// Revision 1.266.2.64  2005/12/02 18:23:30  lulin
// - обрабока нотфификации об удалении/добавлении параграфа практически полностью перенесена на процессор.
//
// Revision 1.266.2.63  2005/12/01 05:59:21  lulin
// - cleanup: избавляемся от транслции свойства HiddenStyles от редактора к котнтейнеру и обратно.
//
// Revision 1.266.2.62  2005/11/30 19:59:39  lulin
// - удаление комментариев теперь синхронизируется между разными _View. Синхронизация через кеш - отключена, т.к. бессмысленна и приводила к AV.
//
// Revision 1.266.2.61  2005/11/25 09:58:24  lulin
// - bug fix: повисали при попытке сохранить комментарий, когда текста уже не было.
//
// Revision 1.266.2.60  2005/11/21 13:41:40  lulin
// - убрана ненужная директива.
//
// Revision 1.266.2.59  2005/11/21 11:51:19  lulin
// - сделан задел на синхронизацию вставки комментариев с другими кописями контейнера.
//
// Revision 1.266.2.58  2005/11/15 13:50:05  lulin
// - cleanup: используем только Reader тегов - не подкладывая под него Pool. Связывание теперь осуществляется раньше.
//
// Revision 1.266.2.57  2005/11/15 11:32:38  lulin
// - типизируем интерфейс потока.
//
// Revision 1.266.2.56  2005/11/15 10:00:25  lulin
// - убран избыточный интерфейс.
//
// Revision 1.266.2.55  2005/11/14 18:37:00  lulin
// - теперь при заборе в буфер обмена в него кладется контейнер документа, а не TextSource - должно починить ошибку CQ OIT5-17870.
//
// Revision 1.266.2.54  2005/11/14 13:53:08  lulin
// - bug fix: при выделении не вставлялись комментарии (CQ OIT5-18019).
//
// Revision 1.266.2.53  2005/11/09 17:28:38  lulin
// - bug fix: оглавление не синхронизировалось с документом (сломал М. Морозов).
//
// Revision 1.266.2.52  2005/11/09 15:28:27  lulin
// - базовые интерфейсы перенесены в правильный модуль.
//
// Revision 1.266.2.51  2005/11/05 09:03:17  lulin
// - выделяем у якоря и у курсора общую функциональность.
//
// Revision 1.266.2.50  2005/11/02 07:54:24  lulin
// - bug fix: все зависало при попытке вставить комментарий в нередактиремый текст (CQ OIT5-17428).
//
// Revision 1.266.2.49  2005/10/27 16:37:42  lulin
// - bug fix: система повисала при переходе по ссылке в БИК'е.
//
// Revision 1.266.2.48  2005/10/25 11:05:48  lulin
// - не получаем напрямую информационную канву экрана, а получаем ее через фасад.
//
// Revision 1.266.2.47  2005/10/21 10:14:49  lulin
// - bug fix: не синхронизировался текст с оглавлением. Сейчас тоже не синхронизируется, но это уже проблема реализации итератора по дереву.
//
// Revision 1.266.2.46  2005/10/20 10:16:00  lulin
// - тегам добавлены скобки Changing/_Changed.
//
// Revision 1.266.2.45  2005/10/17 11:56:36  lulin
// - new behavior: не сохраняем и не удаляем комментарии через "заднее крыльцо" для документов в виде дерева.
//
// Revision 1.266.2.44  2005/10/12 09:08:28  lulin
// - bug fix: комментарий вставлялся перед выделенным фрагментом, а не после (CQ OIT5-16526).
//
// Revision 1.266.2.43  2005/10/12 06:10:36  lulin
// - bug fix: при обработке правой клавиши мыши не перемещался курсор.
//
// Revision 1.266.2.42  2005/10/06 11:37:35  lulin
// - bug fix: убран assert при вставке SBS-параграфа с клавиатуры.
//
// Revision 1.266.2.41  2005/10/05 11:35:22  lulin
// - потихоньку откручиваем представление от TextSource.
//
// Revision 1.266.2.40  2005/10/05 08:28:52  lulin
// - bug fix: из оглавления от документа в виде дерева, не переходили на встроенные объекты.
//
// Revision 1.266.2.39  2005/09/19 05:24:08  lulin
// - bug fix: был AV при выходе из оболочки при забранном в буфер обмена тексте.
//
// Revision 1.266.2.38  2005/09/19 04:20:13  lulin
// - bug fix: неправильно работал итератор по параграфам выделения.
//
// Revision 1.266.2.37  2005/09/16 07:10:13  lulin
// - bug fix: сообщение о том, что нельзя вставить комментарий выдавалось пользователю.
//
// Revision 1.266.2.36  2005/07/27 12:31:19  lulin
// - кеш документов теперь пользуется общими интерфейсами, а не окольными путями.
//
// Revision 1.266.2.35  2005/07/27 09:31:04  lulin
// - поддержка истории спущена на базовый редактор.
//
// Revision 1.266.2.34  2005/07/25 18:09:18  lulin
// - теперь TextSource не знает про реализацию контейнера документа, а только про его интерфейс.
//
// Revision 1.266.2.33  2005/07/21 13:00:37  lulin
// - писатель формата EVD переехал в папку EVD.
//
// Revision 1.266.2.32  2005/07/21 07:54:34  lulin
// - убран промежуточный интерфейс и упрощено использование функции поиска/замены.
//
// Revision 1.266.2.31  2005/07/21 05:32:14  lulin
// - cleanup.
//
// Revision 1.266.2.30  2005/07/20 18:49:28  lulin
// - редактор теперь умеет работать с базовым TextSource, а не со специализированным.
//
// Revision 1.266.2.29  2005/07/20 18:21:17  lulin
// - убран переходный интерфейс.
//
// Revision 1.266.2.28  2005/07/20 17:36:47  lulin
// - bug fix: были забыты операторные скобки.
//
// Revision 1.266.2.27  2005/07/20 17:31:45  lulin
// - спрятаны методы, которые не стоит использовать напрямую.
//
// Revision 1.266.2.26  2005/07/18 17:37:45  lulin
// - упорядочена интерфейсная модель редактора - для удобства чтения и эффективности использования, а также для избавления от посылки сообщений.
//
// Revision 1.266.2.25  2005/07/15 11:29:37  lulin
// - избавляемся от использования самостийной функции преобразования интерфейсов.
//
// Revision 1.266.2.24  2005/07/14 10:24:27  lulin
// - реализация интерфейса IevSubList спущена с TextSource, на DocumentContainer.
//
// Revision 1.266.2.23  2005/07/13 15:48:30  lulin
// - new unit: evEditorWindowTextSource.
//
// Revision 1.266.2.22  2005/07/12 15:43:33  lulin
// - bug fix: упорядочен порядок модулей и порядок вызова секций инициализации.
//
// Revision 1.266.2.21  2005/07/11 14:23:31  mmorozov
// new: использование директивы компиляции "_evMakeTableOfContents";
//
// Revision 1.266.2.20  2005/07/11 06:07:09  lulin
// - упорядочены названия интерфейсов.
//
// Revision 1.266.2.19  2005/07/07 16:22:07  lulin
// - bug fix: не компилировалась библиотека.
//
// Revision 1.266.2.18  2005/06/29 10:30:19  lulin
// - введен собственный тип для множества скроллбар'ов - чтобы не такскать везде это виндовое уродство.
//
// Revision 1.266.2.17  2005/06/15 17:23:55  lulin
// - remove proc: _evMoveCursor.
//
// Revision 1.266.2.16  2005/06/14 14:51:53  lulin
// - new interface: _InevSelection.
// - remove interface: IevSelection.
//
// Revision 1.266.2.15  2005/06/10 15:04:57  lulin
// - временно отключены события о скроллировании и смене параграфа.
//
// Revision 1.266.2.14  2005/06/10 12:54:34  lulin
// - cleanup: у редактора убрано знание про верхнюю позицию скроллирования.
//
// Revision 1.266.2.13  2005/06/09 17:10:43  lulin
// - временно закомментирована синхронизация с оглавлением.
//
// Revision 1.266.2.12  2005/06/07 13:43:50  lulin
// - удален ненужный модуль.
//
// Revision 1.266.2.11  2005/06/07 12:46:33  lulin
// - заключительный аккорд перехода с объектов на интерфейсы (при работе с курсорами).
//
// Revision 1.266.2.10  2005/06/03 14:23:34  lulin
// - еще один шаг от объектов к интерфейсам.
//
// Revision 1.266.2.9  2005/06/02 15:48:34  lulin
// - cleanup.
//
// Revision 1.266.2.8  2005/06/01 16:22:28  lulin
// - remove unit: evIntf.
//
// Revision 1.266.2.7  2005/06/01 14:02:20  lulin
// - new unit: evCursor.
//
// Revision 1.266.2.6  2005/05/31 12:06:33  lulin
// - cleanup: при работе с курсорами используем интерфейсы, а не объекты.
//
// Revision 1.266.2.5  2005/05/30 16:33:38  lulin
// - убрано ненужное свойство.
//
// Revision 1.266.2.4  2005/05/26 15:35:00  lulin
// - базовая канва вывода теперь избавлена от знания о контролах управления.
//
// Revision 1.266.2.3  2005/05/20 08:33:52  migel
// - fix: не компилировалось (забыли включить юнит `nevFacade`).
//
// Revision 1.266.2.2  2005/05/19 13:18:45  lulin
// - remove unit: evFont.
//
// Revision 1.266.2.1  2005/05/18 12:42:49  lulin
// - отвел новую ветку.
//
// Revision 1.256.2.8  2005/05/18 12:32:12  lulin
// - очередной раз объединил ветку с HEAD.
//
// Revision 1.256.2.7  2005/04/28 09:18:32  lulin
// - объединил с веткой B_Tag_Box.
//
// Revision 1.256.2.6  2005/04/15 12:11:45  lulin
// - bug fix: не компилировалось в Немезисе.
//
// Revision 1.256.2.5  2005/04/11 18:16:06  lulin
// - bug fix: не компилировалось.
//
// Revision 1.256.2.4  2005/04/11 10:08:50  lulin
// - спрятан мусор, связанный с тем, что TextSource хранил максимальную ширину форматирования.
//
// Revision 1.256.2.3  2005/04/11 09:21:10  lulin
// - поправлены заметки.
//
// Revision 1.256.2.2  2005/04/10 10:39:45  lulin
// - слил с HEAD.
//
// Revision 1.256.2.1  2005/04/09 12:06:25  lulin
// - bug fix: не компилировалось.
//
// Revision 1.257  2005/04/09 14:59:24  dinishev
// Выключение "скобок" FromHistory
//
// Revision 1.261.2.3  2005/04/27 10:50:37  lulin
// - bug fix: не удалялись комментарии (CQ OIT5-13601).
//
// Revision 1.261.2.2  2005/04/23 16:07:28  lulin
// - удален временный интерфейс Ik2TagBox.
//
// Revision 1.261.2.1  2005/04/22 06:33:53  lulin
// - bug fix: не компилировалось.
//
// Revision 1.261  2005/04/20 17:40:52  lulin
// - избавился от промежуточного интерфейса Ik2TagBoxQT.
//
// Revision 1.260  2005/04/18 17:18:25  lulin
// - используем _Box, а не Ik2Tag (пока выигрыша в производительности не дало).
//
// Revision 1.259  2005/04/15 08:59:54  lulin
// - теперь держим ссылку на тег, а не собственно тег.
//
// Revision 1.258  2005/04/12 07:06:37  mmorozov
// bugfix: обработчик MouseDown защищаем скобками, чтобы форма не умерла раньше, чем мы выйдем из обработчика;
//
// Revision 1.257  2005/04/09 14:59:24  dinishev
// Выключение "скобок" FromHistory
//
// Revision 1.266  2005/05/17 11:46:23  lulin
// - убран "лишний" метод.
//
// Revision 1.265  2005/05/17 11:19:27  lulin
// - cleanup: возвращаем более общий интерфейс.
//
// Revision 1.264  2005/05/12 14:05:20  lulin
// - в связи с уничтожением свойства RecalcMode убрана заплатка Димы Инишева - для хождения по истории без переформатирования.
//
// Revision 1.263  2005/04/28 15:03:40  lulin
// - переложил ветку B_Tag_Box в HEAD.
//
// Revision 1.262  2005/04/21 07:12:23  mmorozov
// change: k2TagBox.imp ->k2TagBox.int;
//
// Revision 1.261.2.5  2005/04/28 10:46:55  lulin
// - для Design-time убрано лишнее.
//
// Revision 1.261.2.4  2005/04/28 10:06:40  lulin
// - bug fix: при вставке комментария оставалась надпись "Загрузка документа".
//
// Revision 1.261.2.3  2005/04/27 10:50:37  lulin
// - bug fix: не удалялись комментарии (CQ OIT5-13601).
//
// Revision 1.261.2.2  2005/04/23 16:07:28  lulin
// - удален временный интерфейс Ik2TagBox.
//
// Revision 1.261.2.1  2005/04/22 06:33:53  lulin
// - bug fix: не компилировалось.
//
// Revision 1.261  2005/04/20 17:40:52  lulin
// - избавился от промежуточного интерфейса Ik2TagBoxQT.
//
// Revision 1.260  2005/04/18 17:18:25  lulin
// - используем _Box, а не Ik2Tag (пока выигрыша в производительности не дало).
//
// Revision 1.259  2005/04/15 08:59:54  lulin
// - теперь держим ссылку на тег, а не собственно тег.
//
// Revision 1.258  2005/04/12 07:06:37  mmorozov
// bugfix: обработчик MouseDown защищаем скобками, чтобы форма не умерла раньше, чем мы выйдем из обработчика;
//
// Revision 1.257  2005/04/09 14:59:24  dinishev
// Выключение "скобок" FromHistory
//
// Revision 1.256  2005/04/06 12:48:19  lulin
// - bug fix: не вставлялся текст из буфера обмена (CQ OIT5-13223).
//
// Revision 1.255  2005/04/06 09:10:31  lulin
// - bug fix: не компилировалось.
//
// Revision 1.254  2005/04/05 09:55:29  lulin
// - используем IevShape.
//
// Revision 1.253  2005/04/04 15:54:36  lulin
// - bug fix: из-за блядства Delphi с неосвобождением глобальных ссылок на интерфейсы оставались неосвобожденные объекты.
//
// Revision 1.252  2005/04/04 06:44:00  lulin
// - в связи с появлением механизма событий и фасада библиотеки K-2, удалены глобальные "заплатки" связанные с созданием/уничтожением таблицы тегов.
//
// Revision 1.251  2005/03/30 15:56:25  lulin
// - _TevLocation теперь наследуется от Tk2ToolPrim - базового класса для инструментов тегов.
//
// Revision 1.250  2005/03/30 15:12:21  lulin
// - в _QueryTool теперь подаем тег для которого надо сделать инструмент.
//
// Revision 1.249  2005/03/30 14:23:32  lulin
// - bug fix: зависание при Undo удаления комментария (CQ OIT5-13093).
//
// Revision 1.248  2005/03/28 11:32:10  lulin
// - интерфейсы переехали в "правильный" модуль.
//
// Revision 1.247  2005/03/25 17:09:04  lulin
// - избавляемся от метода Tk2AtomW.sLong.
//
// Revision 1.246  2005/03/24 12:08:15  lulin
// - remove method: Ik2TagBox._Tag.
// - new method: Ik2TagBox.Target.
//
// Revision 1.245  2005/03/23 11:48:00  lulin
// - вызов метода заменен на обращение к свойству.
//
// Revision 1.244  2005/03/21 16:28:19  lulin
// - переходим к Ik2Tag.
//
// Revision 1.243  2005/03/21 10:04:52  lulin
// - new interface: _Ik2Type.
//
// Revision 1.242  2005/03/19 16:39:54  lulin
// - спрятаны ненужные методы.
//
// Revision 1.241  2005/03/18 16:11:25  lulin
// - remove method: Tk2AtomR.Write.
//
// Revision 1.240  2005/03/16 12:16:55  lulin
// - переходим к Ik2Tag.
//
// Revision 1.239  2005/03/15 11:18:21  lulin
// - cleanup.
//
// Revision 1.238  2005/03/15 10:30:21  lulin
// - от Tk2AtomR переходим к Ik2Tag.
//
// Revision 1.237  2005/03/11 14:21:25  lulin
// - от Tk2AtomR переходим к Ik2Tag.
//
// Revision 1.236  2005/03/10 17:44:05  lulin
// - от Tk2AtomR переходим к Ik2Tag.
//
// Revision 1.235  2005/03/10 11:35:12  lulin
// - от Tk2AtomR переходим к Ik2Tag.
//
// Revision 1.234  2005/03/04 16:01:23  lulin
// - спрятана процедура Tk2Type.New.
//
// Revision 1.233  2005/03/04 13:59:20  lulin
// - remove method: Tk2AtomR._AddChild.
//
// Revision 1.232  2005/03/01 10:09:52  lulin
// - new prop: IeeHyperlink.FromDocument.
// - new prop: IeeDocument.ExternalHandle.
//
// Revision 1.231  2005/02/16 15:31:37  lulin
// - поборолся с пустым экраном документа 10035750 (CQ OIT5-12250). Осталось добить, чтобы позиционировалось правильно на закладку.
//
// Revision 1.230  2005/02/07 08:52:26  demon
// - fix: AV при переходе по истории и несохраненном комментарии
//
// Revision 1.229  2005/02/04 15:30:09  lulin
// - bug fix: не всегда сохранялись ссылки в комментариях (после dnd из папок).
//
// Revision 1.228  2005/02/04 14:33:46  lulin
// - new behavior: закладкам пользователя ставим флаг 3.
// - из Drag'n'drop возвращаем Effect.
//
// Revision 1.227  2005/02/03 16:02:39  lulin
// - bug fix: был AV при обращению к пустому, HotSpot'у, который остался от предыдущего редактора.
//
// Revision 1.226  2005/02/02 10:33:33  lulin
// - оптимизация: если оглавления нету, то и не пытаемся с ним синхронизироваться.
//
// Revision 1.225  2005/01/31 17:38:21  lulin
// - bug fix: параграфам в таблицах и блоках не выставлялся стиль "Пользовательский комментарий".
//
// Revision 1.224  2005/01/31 15:18:48  lulin
// - bug fix: из буфера обмена не вставлялся пользовательский комментарий если курсор стоял на параграфе без ID.
//
// Revision 1.223  2005/01/28 15:35:02  lulin
// - bug fix: был нарушен баланс между временем жизни HotSpot'а и редактора - соответственно не убивалась мертвая ссылка на редактор и был AV.
//
// Revision 1.222  2005/01/27 08:42:07  lulin
// - new behavior: не показываем операции с коментариями в контекстном меню, если они недоступны пользователю.
//
// Revision 1.221  2005/01/20 15:23:26  demon
// - fix: при поиске ближайшего для пользовательских комментариев не учитывался идентификатор слоя
//
// Revision 1.220  2005/01/20 12:16:14  lulin
// - new prop: _IeeSub.InContents.
//
// Revision 1.219  2005/01/19 10:40:52  lulin
// - учитываем Readonly от предка.
//
// Revision 1.218  2005/01/14 17:24:16  lulin
// - в ProcessCommand добавлен параметр aForce - сигнализирующий, что такого ShortCut'а нету в VCM и что не надо умничать с обработкой комманды.
//
// Revision 1.217  2005/01/14 11:42:42  lulin
// - сделано удаление комментариев целиком, а не одного параграфа (CQ OIT5-11506).
//
// Revision 1.216  2004/12/03 12:21:44  lulin
// - bug fix: после прерывания Print-_Preview не пересчитывалось число страниц.
//
// Revision 1.215  2004/12/02 13:49:47  lulin
// - bug fix: не запрещались операции редактирования в свернутых комментариях (CQ OIT5-11011).
//
// Revision 1.214  2004/12/02 12:56:52  lulin
// - поправлено форматирование.
//
// Revision 1.213  2004/11/29 11:55:21  lulin
// - bug fix: не вставлялся комментарий после подписи.
//
// Revision 1.212  2004/11/26 17:00:50  lulin
// - bug fix: не даем вставлять два комментария подряд.
//
// Revision 1.211  2004/11/25 15:28:52  lulin
// - new behavior: редактор для Немезиса теперь обрабатывает Ctrl-стрелки ТОЛЬКО в пользовательских комментариях.
//
// Revision 1.210  2004/11/25 13:22:03  lulin
// - используем в TeeEditorExport._GetHotspotOnPoint вызов TevCustomEditorWindow._GetHotspotOnPoint.
//
// Revision 1.209  2004/11/25 12:17:24  lulin
// - bug fix: был забыт модификатор const.
//
// Revision 1.208  2004/11/25 08:07:12  lulin
// - new unit: TevTunedEditor.
//
// Revision 1.207  2004/11/24 16:50:45  lulin
// - восстановлена возможность вставки картинок.
//
// Revision 1.206  2004/11/24 15:50:53  lulin
// - добавлена операция - вставить таблицу.
//
// Revision 1.205  2004/11/18 15:58:53  lulin
// - отвязываем библиотеки от VCM без использования inc'ов.
//
// Revision 1.204  2004/11/17 17:32:06  lulin
// - окончательно починена синхронизация вставки/удаления комментариев, отъехавшая в связи с переходом на блоки.
//
// Revision 1.203  2004/11/16 10:33:15  lulin
// - не умничаем при разрывании параграфа, если редактор неспецифический.
//
// Revision 1.202  2004/11/16 10:27:42  lulin
// - bug fix: в таблицы внутри комментария не вставлялись параграфы по Enter.
//
// Revision 1.201  2004/11/16 10:02:23  lulin
// - cleanup: избавляемся от кода, связанного с тем, что комментарии были не в блоке.
//
// Revision 1.200  2004/11/16 09:22:40  lulin
// - избавляемся от дублирования кода.
//
// Revision 1.199  2004/11/16 09:14:16  lulin
// - new behavior: учитываем, что комментарии теперь "живут" в особом блоке.
//
// Revision 1.198  2004/11/11 18:24:13  lulin
// - в первом приближении сделано корректное удаление блоков с комментариями.
//
// Revision 1.197  2004/11/11 17:35:24  lulin
// - new behavior: для блока с комментарием сделано нормальное сохранение и рисование человечков на полях.
//
// Revision 1.196  2004/11/10 16:36:26  lulin
// - new behavior: вставляем вместо просто комментария - блок с комментарием.
//
// Revision 1.195  2004/10/22 10:27:22  lulin
// - Сделал сохранение картинки в базу комментариев. Можно ли ее вставлять в документ - пусть решает УМ (CQ OIT5-10512).
//
// Revision 1.193  2004/10/21 10:43:37  lulin
// - new param: в TeeEditorExport.GetNearestSub - теперь можно указывать, что интересуют только блоки.
//
// Revision 1.192  2004/10/15 10:18:35  lulin
// - new: в метод _GetNearestSubByCursor добавлен список типов меток, которые ищем.
//
// Revision 1.191  2004/10/13 16:22:37  lulin
// - new method: TevDocumentsCache.NotifyUserCommentAdded - пока ничего не делает.
//
// Revision 1.190  2004/10/13 16:02:10  lulin
// - bug fix: при записи пользовательского комментария неправильно определяли, что он пустой.
//
// Revision 1.189  2004/10/13 10:33:33  lulin
// - new behavior: синхронизируем удаление комментариев.
//
// Revision 1.188  2004/10/12 17:39:37  lulin
// - new param: в метод TevDocumentsCache.NotifyUserCommentDeleted теперь подается контейнер.
//
// Revision 1.187  2004/10/12 14:03:32  lulin
// - bug fix: не сбрасывались параметры оформления при установке стиля.
//
// Revision 1.186  2004/10/11 16:28:58  lulin
// - new method: TevDocumentsCache.NotifyUserCommentDeleted - пока ничего не делает, только вызывается.
//
// Revision 1.185  2004/10/11 16:18:17  lulin
// - new method: TeeEditorExport.NotifyUserCommentDeleted.
//
// Revision 1.184  2004/10/06 15:28:24  lulin
// - для Немезиса при скроллинге не выводим хинт "Метка №.." (CQ OIT5-10039).
//
// Revision 1.183  2004/10/01 11:37:19  lulin
// - bug fix: при догрузке документа не всегда правильно работал Back по истории (CQ OIT5-9601).
//
// Revision 1.182  2004/10/01 08:01:28  lulin
// - new prop: _IeeSub.Flags.
//
// Revision 1.181  2004/10/01 06:15:51  lulin
// - bug fix: после вставки комментария за подписью (SBS) не появлялся "зеленый человечек" на полях (CQ OIT5-9913).
//
// Revision 1.180  2004/09/28 15:38:20  lulin
// - свойство Processor перенесено с _TevCustomTextSource на _TevDocumentContainerWithProcessor (это для возможности кеширования DocumentContainer'ов).
//
// Revision 1.179  2004/09/20 16:22:48  lulin
// - bug fix: два раза подряд спрашивали у пользователя о непоказываемых комментариях (CQ OIT5-9515).
//
// Revision 1.178  2004/09/16 12:20:53  lulin
// - удалено большинство нечитабельных include'ов.
//
// Revision 1.177  2004/09/16 09:25:03  lulin
// - bug fix: наследники от evCtrl убивались в DesignTime произвольным образом.
//
// Revision 1.176  2004/09/15 16:45:00  lulin
// - в зависимости от DesignTimeLibrary перекрываем Destroy или Cleanup.
//
// Revision 1.175  2004/08/05 10:17:27  law
// - восстановлена функциональность TevMemo в Немезисе.
//
// Revision 1.174  2004/08/02 09:37:02  law
// - bug fix: не ставился "парень" при вставке комментариев, забранных в буфер обмена из этого же текста (CQ OIT5-8343).
//
// Revision 1.173  2004/07/21 16:31:26  law
// - new behavior: TeeEditor теперь не "сжирает" Tab.
//
// Revision 1.172  2004/07/21 12:34:48  law
// - new event: TeeEditorExport.OnUserCommentsHidden.
//
// Revision 1.171  2004/07/21 11:00:54  law
// - bug fix: переход по ссылке срабатывал даже после выделения текста.
//
// Revision 1.170  2004/07/21 10:32:57  law
// - new behavior: при попытке вставки комментария при выключенных комментариях кидаем исключение EeeUserCommentsHidden.
// - new behavior: запрещаем Drag'n'Drop в редактор при выключенных комментариях.
//
// Revision 1.169  2004/07/20 13:21:50  law
// - new behavior: при невозможности вставки комментария - пытаемся сместиться вверх.
//
// Revision 1.168  2004/07/20 13:06:18  law
// - new behavior: при невозможности вставки комментария - пытаемся сместиться вверх.
//
// Revision 1.167  2004/07/19 14:46:16  law
// - bug fix: некорректно работало Undo пользовательских комментариев, а Redo не было доступно вообще.
//
// Revision 1.166  2004/07/08 12:20:42  law
// - new behavior: вставляем комментарий не в SBS а после него (CQ OIT5-8052).
//
// Revision 1.165  2004/07/07 07:11:36  demon
// - fix: AV при попытке посчитать NearestSubByCursor, если aCursor и Selection = nil
//
// Revision 1.164  2004/07/01 12:06:11  law
// - bug fix: при переходе на параграф скроллировались в два приема.
//
// Revision 1.163  2004/06/25 14:20:21  law
// - bug fix: AV при перемещении по истории.
//
// Revision 1.162  2004/06/25 13:35:39  law
// - bug fix: информация о документе (число прогруженных параграфов и т.п) не сохранялась в историю.
//
// Revision 1.161  2004/06/23 15:24:15  law
// - если Hint получился пустой, то формируем ео автоматически.
//
// Revision 1.160  2004/06/23 15:04:16  law
// - придаем окошку с Hint'ом фиксированную позицию.
//
// Revision 1.159  2004/06/23 14:27:16  law
// - new behavior: при скроллировании выводим Hint о текущем положении.
//
// Revision 1.158  2004/06/18 10:31:25  law
// - bug fix: не компилировалось в связи с исчезновением свойства Empty у Tl3Base.
//
// Revision 1.157  2004/06/08 12:13:49  law
// - сделана догрузка документа кусками, учитывая знания об адаптере.
//
// Revision 1.156  2004/06/01 14:56:28  law
// - удалены конструкторы Tl3VList.MakeLongint, MakeLongintSorted - пользуйтесь _Tl3LongintList.
//
// Revision 1.155  2004/05/24 14:56:17  law
// - bug fix: при хождении по истории документ не переформатировался по текущим размерам окна (CQ OIT5-7110).
//
// Revision 1.154  2004/05/21 11:58:20  law
// - bug fix: был AV при закрытии приложения после перехода по ссылке. Сейчас существует циклическая зависимость Editor -> Selection -> _FoundBlock -> Editor (CQ OIT5-7462).
//
// Revision 1.153  2004/05/14 15:27:56  law
// - remove unit: evTypesE.
//
// Revision 1.152  2004/04/28 17:29:05  law
// - new behavior: если параграф не имеет ID, то пытаемся поставить комментарий на предыдущий и так по рекурсии вверх (CQ OIT5-6280).
//
// Revision 1.151  2004/04/28 16:28:38  law
// - new behavior: TeeEditorExport теперь не позволяет вставлять данные в формате cf_Bitmap (CQ OIT5-6505).
//
// Revision 1.150  2004/04/27 12:36:22  mmorozov
// new behaviour: не сохраняем введенные пользователем параграфы, если все они пустые.
//
// Revision 1.149  2004/04/27 07:25:31  law
// - remove prop: IeeNode.Expanded.
// - cleanup: из TeeNode убрано знание про _Tl3Tree.
//
// Revision 1.148  2004/04/26 15:37:22  law
// - bug fix: в пользовательских комментариях можно было вводить подпись (Side By Side).
//
// Revision 1.147  2004/04/22 14:15:18  law
// - new param: IevTagSelection.Iterate* - aStart   : Long = l3MinIndex.
//
// Revision 1.146  2004/04/22 13:50:14  nikitin75
// поддежка итератора и по мультивыделению; промежуточный коммит
//
// Revision 1.145  2004/04/08 19:19:41  law
// - optimization: убраны директивы stdcall.
//
// Revision 1.144  2004/04/07 13:03:23  law
// - new method: TevCustomEditorWindow.MakeTextSource.
// - new event: TevCustomEditor.OnMakeTextSource.
//
// Revision 1.142  2004/04/06 09:25:43  law
// - bug fix: "Отображается комментарии при отжатой кнопке показа комменариев пользователя" (CQ OIT5-6924).
//
// Revision 1.141  2004/04/02 16:16:17  law
// - bug fix: 'Несколько комментариев для одного абзаца' (CQ OIT5-6921).
//
// Revision 1.140  2004/04/02 15:17:13  law
// - bug fix: 'Ошибка ввода пользовательских комментариев' CQ OIT5-6893.
//
// Revision 1.139  2004/03/22 14:52:43  law
// - new method: IeeEditorEx.CheckCommentsSaved.
//
// Revision 1.138  2004/03/22 13:13:32  law
// - new interface: IeeEditorEx.
//
// Revision 1.137  2004/03/03 12:45:07  law
// - new param default value: IeeSubList.Add(anID: Integer = ee_SubAutoID).
//
// Revision 1.136  2004/02/26 12:44:11  demon
// - new behavior: объект TeeEditorState при QueryInterface получил возможность дополнительно спрашивать его у поля f_Container
//
// Revision 1.135  2004/02/03 16:31:42  law
// - new const: ev_UserCommentFlags.
//
// Revision 1.134  2004/02/02 14:42:30  law
// - new behavior: сохраняем комментарии в evd-формате.
//
// Revision 1.133  2004/02/02 12:51:49  law
// - change: задел на сохранение пользовательских комментариев в бинарном виде.
//
// Revision 1.132  2004/01/20 18:43:08  law
// - new behavior: в методе TeeEditorExport.SaveTo открутил выравнивание на целый абзац, зато прикрутил мультивыделение.
//
// Revision 1.131  2004/01/10 14:49:50  law
// - new unit: evMultiSelectionEditorWindow - загготовка для множественного выделения в редакторе.
//
// Revision 1.130  2004/01/10 13:26:14  law
// - bug fix: Скроллируется документ при вызове контекстного меню (CQ OIT5-5160).
//
// Revision 1.129  2004/01/10 12:32:01  law
// - bug fix:  CQ OIT5-4347:
// demon (12.09.2003): Ошибка только в том, что эти вставленные параграфы оказываются не комментариями пользователя, а просто текстом.
// А вставлять, думаю можно....
//
// Revision 1.128  2004/01/10 11:13:17  law
// - new behavior: для Немезиса - раньше нажатие Tab, Shift-Tab приводило к изменению отступа параграфа, что неверно (CQ OIT5-5132).
//
// Revision 1.127  2004/01/10 10:48:04  law
// - new behavior: если было выделение и нажали Enter, то выделение снимается и добавляется пользовательский комментарий (CQ OIT5-4993).
//
// Revision 1.126  2004/01/05 16:42:06  nikitin75
// + function  DoSetCursor(const aHotSpot: IevHotSpot): Bool; override;
// //лапа над картинкой
//
// Revision 1.125  2003/12/24 14:22:55  law
// - bug fix: падало при закрытии 2-го окна (CQ IOT5-5568).
//
// Revision 1.124  2003/12/04 14:50:37  law
// - bug fix: Selection.Persistent переехало в _ViewParams.PersistentSelection (CQ OIT5-5457).
//
// Revision 1.123  2003/12/03 15:50:50  law
// - bug fix: не вызывалось событие OnUserCommentDelete, не исчезала иконка в SubPanel (CQ OIT5-4675).
//
// Revision 1.122  2003/11/29 18:00:38  law
// - bug fix: в историю не сохранялся "второй" TextSource (CQ OIT5-4633).
//
// Revision 1.121  2003/11/13 11:54:25  law
// - change: _MaxWidth -> Limits.
//
// Revision 1.120  2003/11/10 12:01:07  nikitin75
// + у TeeEditorExport.SaveTo параметр по-умолчанию aSaveSelection: Boolean = true;
//
// Revision 1.119  2003/10/28 13:29:18  law
// - new method: TeeEditorExport._GetNearestParaByCursor.
//
// Revision 1.118  2003/10/27 15:57:13  law
// - bug fix: TeeBlock не предоставлял метод Get_LeafPara.
//
// Revision 1.117  2003/10/21 15:19:11  law
// - rename type: TeeBlockScrollChangeEvent -> _TeeBlockScrollEvent.
//
// Revision 1.116  2003/10/21 13:38:36  narry
// - реализация направления скроллинга (OIT500004631)
//
// Revision 1.115  2003/10/21 11:51:14  demon
// - bug fix: неправильно проверялось условие переходных процессов при смене текущего параграфа.
//
// Revision 1.114  2003/10/14 16:35:46  law
// - rename unit: evTxtSrc -> evTextSource.
//
// Revision 1.113  2003/10/14 13:48:00  demon
// - bug fix: не работала _GetNearestSubByCursor.
// - new behavior: отсекаем OnBlockChange, когда стоим не на "листьевом" параграфе.
//
// Revision 1.112  2003/10/14 12:24:19  law
// - bug fix: при клонировании курсоров, не учитывался Parent.
//
// Revision 1.111  2003/10/14 12:05:17  law
// - change: TeeEditorExport._GetNearestSubByCursor теперь public.
//
// Revision 1.110  2003/10/13 15:31:14  law
// - rename unit: evEdWnd -> evEditorWindow.
//
// Revision 1.109  2003/10/09 12:47:02  nikitin75
// + procedure TeeEditorExport.SaveTo(aStream: IStream; aFormat: Tl3ClipboardFormat);
//
// Revision 1.108  2003/10/02 16:33:28  law
// - rename unit: evBseCur -> evBaseCursor.
//
// Revision 1.107  2003/10/02 14:11:47  law
// - new method: TeeEditorExport._GetNearestSubByCursor.
//
// Revision 1.106  2003/10/02 13:46:23  law
// - change: методу _GetSubByCursor первому параметру добавлено значение по умолчанию.
//
// Revision 1.105  2003/10/02 12:50:36  law
// - new methods: GetPtCursor, _GetTopCursor.
//
// Revision 1.104  2003/10/01 15:10:42  law
// - bug fix: TeeEditorExport._GetSubByCursor не поднимался выше Side By Side или таблицы.
//
// Revision 1.103  2003/10/01 14:53:19  law
// - new method: TeeEditorExport._GetSubByCursor.
//
// Revision 1.102  2003/09/17 12:37:42  law
// - bug fix: при вставке комментариев не появлялись "зеленые человечки".
//
// Revision 1.101  2003/09/12 13:44:16  demon
// - bug fix: попытка починить AV при прерывании загрузки (ничего не дало).
//
// Revision 1.100  2003/09/11 16:01:36  law
// - new prop: TeeEditor.OnCanSplitPara.
//
// Revision 1.99  2003/09/11 15:18:19  law
// - new method: TeeEditor.InsertUserComment.
//
// Revision 1.98  2003/09/11 14:40:38  law
// - bug fix: не совсем правильно работал Backspace при редактировании комментариев.
//
// Revision 1.97  2003/09/11 14:20:23  law
// - new method: IeePara.Delete.
//
// Revision 1.96  2003/09/11 13:32:30  law
// - new prop: TeeEditor.OnUserCommentDelete.
//
// Revision 1.95  2003/09/11 10:54:37  law
// - bug fix: записываем комментарии при потере фокуса.
//
// Revision 1.94  2003/09/11 10:32:30  law
// - new behavior: собираем комментарии через #10, а не через #13#10.
//
// Revision 1.93  2003/09/11 10:23:48  law
// - new method: IeePara.Next.
// - bug fix: не дописывался конец комментария.
//
// Revision 1.92  2003/09/10 18:08:04  law
// - new prop: TeeEditor.OnUserCommentChange.
//
// Revision 1.91  2003/09/10 16:58:18  law
// - new method: IeePara.IsSame.
// - change: задел на отслеживание ухода с пользовательского комментария.
//
// Revision 1.90  2003/09/10 15:44:27  law
// - new behavior: не даем редактировать/вставлять пользовательские комментарии, если они отключены.
//
// Revision 1.89  2003/09/10 13:06:59  law
// - cleanup.
//
// Revision 1.88  2003/09/09 17:30:24  law
// - new prop: _IeeSub.Next.
//
// Revision 1.87  2003/09/09 15:19:25  demon
// - bug fix: при загрузке документа не всегда осуществляся корректный переход на метку.
//
// Revision 1.86  2003/09/09 09:49:47  law
// - new prop: _IeeSelection.Para.
//
// Revision 1.85  2003/09/09 09:33:54  law
// - change: свойство _IeeSub.Name сделано редактируемым.
//
// Revision 1.84  2003/09/08 18:18:31  law
// - bug fix: не совсем правильно восстанавливались из истории после перехода по локальной ссылке.
//
// Revision 1.83  2003/09/08 17:22:31  law
// - change: убрано ненужное ожидание форматирования параграфа при переходе на него (это ожидание и так есть в CheckScrollCaret).
//
// Revision 1.82  2003/09/08 17:05:43  law
// - bug fix: при включенном фоновом форматировании не работал переход на Sub в конец длинного документа, а также на параграф в конце длинного документа.
//
// Revision 1.81  2003/09/08 16:10:34  law
// - bug fix: верхняя граница параграфа не подравнивалась при переходе на него (сейчас тоже не совсем работает - если в этот момент параграф не сформатирован).
//
// Revision 1.80  2003/09/08 14:12:43  law
// - new method: TeeSubList.Make.
// - new prop: IeeDocument.Bookmarks.
//
// Revision 1.79  2003/09/08 12:54:58  law
// - new method: TeeEditorExport.GotoPara.
//
// Revision 1.78  2003/09/08 11:48:40  law
// - new behavior: по умолчанию убрано левое поле документа.
//
// Revision 1.77  2003/09/08 10:38:15  migel
// - bug fix: зацикливался итератор по параграфам.
//
// Revision 1.76  2003/09/03 15:16:57  law
// - new behavior: сделано сохранение переходов по локальным ссылкам.
//
// Revision 1.75  2003/09/03 14:04:24  law
// - change: добавлен тип TvcmStateType (задел на сохранение перехода по локальным ссылкам).
//
// Revision 1.74  2003/09/02 13:38:21  law
// - new prop: _IeeSelection._ParaIterator.
//
// Revision 1.73  2003/09/02 12:42:44  law
// - new interfaces: _IeeSelection, _IeeParaIterator.
//
// Revision 1.72  2003/09/02 12:26:25  law
// - new method: TeeHotSpot.Make.
//
// Revision 1.71  2003/09/01 10:50:35  law
// - bug fix: непрогруженный документ не попадал в историю (OIT5-4281).
//
// Revision 1.70  2003/09/01 09:14:13  law
// - bug fix: AV при скроллинге за границу документа.
//
// Revision 1.69  2003/08/29 12:17:22  law
// - bug fix: не вызывался inherited Notification.
// - bug fix: были циклические зависимости между TeeDocumentTool и редактором.
// - bug fix: после вставки inherited было зависание (бесконечная рекурсия).
// - bug fix: в итоге поправлена ошибка от Опоссума.
//
// Revision 1.68  2003/08/28 16:13:40  law
// - new behavior: событие OnBlockChange теперь учитывает и Sub'ы (ошибка OIT5-4300).
//
// Revision 1.67  2003/08/28 16:06:11  law
// - new behavior: событие OnBlockScroll теперь учитывает и Sub'ы (ошибка OIT5-4300).
//
// Revision 1.66  2003/08/28 15:39:48  law
// - change: изменен список параметров сообщения _TeeBlockChangeEvent.
//
// Revision 1.65  2003/08/28 15:32:16  law
// - new method: _IeeSub.IsSame.
//
// Revision 1.64  2003/08/28 15:24:47  law
// - change: интерфейс _IeeBlock теперь наследуется от _IeeSub.
//
// Revision 1.63  2003/08/27 08:44:42  migel
// - bug fix: падение при переходе на картинку.
//
// Revision 1.62  2003/07/31 13:10:07  demon
// - bug fix: при скроллировании неправильно определялся блок вверху экрана (подогнана константа к значению evEpsilon * 3).
//
// Revision 1.61  2003/07/31 12:37:46  demon
// - bug fix: спри скроллировании неправильно определялся блок вверху экрана.
//
// Revision 1.60  2003/07/21 15:55:25  law
// - bug fix: устранена вторая причина AV при переходе по ссылке из синхронного просмотра (остался еще один редкий случай, которые непонятно как повторяется).
//
// Revision 1.59  2003/07/15 15:37:25  law
// - bug fix: метод _MakeHotSpot не возвращал результат, а возвращал мусор.
// - bug fix: в методe _MakeHotSpot была исключительня ситуация, когда документ не был загружен.
//
// Revision 1.58  2003/07/11 18:55:55  law
// - bug fix: доделаны операции Back/Forward для редактора, при смене контента.
//
// Revision 1.57  2003/07/10 19:07:43  law
// - bug fix: при смене TextSource не уничтожался TextSource, которым владеет редактор.
//
// Revision 1.56  2003/07/09 13:10:30  law
// - new behavior: в событие _OnMouseAction теперь передается параметр aWasSelection.
//
// Revision 1.55  2003/07/01 13:05:11  law
// - new method: _IeeEditor._GetHotspotOnPoint.
//
// Revision 1.54  2003/06/27 19:07:28  law
// - new behavior: TeeEditorExport теперь поддерживает сохранение состояния.
//
// Revision 1.53  2003/06/20 13:11:22  law
// - new prop: IeeDocument.Contents.
//
// Revision 1.52  2003/05/29 18:30:16  law
// - bug fix: восстановлена реакция редактора на события мышью.
//
// Revision 1.51  2003/05/29 13:31:10  law
// - new behavior: TeeEditorExport теперь создает TextSource, если его не было.
//
// Revision 1.50  2003/05/29 12:39:12  law
// - bug fix: восстановлена функциональность ScrollBar'ов.
//
// Revision 1.49  2003/05/29 11:03:18  law
// - bug fix: восстановлен вызов OnBlockScroll.
//
// Revision 1.48  2003/05/29 10:54:20  law
// - bug fix: восстановлен вызов OnBlockChange.
//
// Revision 1.47  2003/05/28 16:15:20  law
// - change: отрезал ee.dll.
//
// Revision 1.46  2003/04/18 11:12:35  law
// - new unit: eeGeneratorEx.
//
// Revision 1.45  2003/04/18 10:55:55  law
// - new unit: eeGenerator.
//
// Revision 1.44  2003/04/18 09:30:59  law
// - new unit: eeBaseInterfaces.
//
// Revision 1.43  2003/04/15 09:42:03  law
// - new behavior: для ee.dll сделана возможность вводить и редактировать в редакторе только пользовательские комментарии.
//
// Revision 1.42  2003/04/14 14:42:50  law
// - new style: ev_saUserComment.
//
// Revision 1.41  2003/03/19 10:47:49  law
// - new directives: evForEE, _evNeedDisp, _evNotNeedDisp.
//
// Revision 1.40  2003/03/03 11:00:46  law
// - new method versions: _IeeData._Load.
//
// Revision 1.39  2003/02/20 16:50:33  law
// - new interfaces: _IeeTable, _IeeTablesIterator.
//
// Revision 1.38  2003/02/13 10:35:44  law
// - new interface: _IeePicturesIterator.
//
// Revision 1.37  2003/02/12 15:50:20  law
// - new interface: IeePicture.
// - new unit: eePicture.
//
// Revision 1.36  2003/02/12 15:29:17  law
// - new units.
//
// Revision 1.35  2003/02/11 14:20:20  law
// - change: расширена работа со списком меток - сделана возможность добавлять и удалять метки.
//
// Revision 1.34  2003/02/11 10:31:30  law
// - cleanup.
//
// Revision 1.33  2003/02/06 15:31:30  law
// - новая сборка ee.dll.
//
// Revision 1.32  2002/11/29 13:32:32  law
// - new prop: _IeeBlock._ChildrenIterator, _IeeBlock.Name.
//
// Revision 1.31  2002/11/20 15:18:02  law
// - new prop: _IeeViewParams.PersistentSelection.
// - new behavior: переставляется курсор по клику правой кнопкой мыши.
//
// Revision 1.30  2002/11/14 09:31:07  law
// - new event: TeeCustomEditor.OnBlockScroll.
//
// Revision 1.29  2002/11/13 17:46:22  law
// - move classes: TeeTagEditorTool, TeePara, TeeHotSpot переехали в eeHotSpot.
//
// Revision 1.28  2002/11/13 15:22:48  law
// - new class: TeeSubPanel.
//
// Revision 1.27  2002/11/13 12:54:21  law
// - change: начата работа над экспортом панели Sub'ов.
//
// Revision 1.26  2002/11/12 14:33:04  law
// - new prop: _IeeBlock.ParentBlock.
//
// Revision 1.25  2002/11/12 12:18:57  law
// - new prop: IeeHotSpot.InSelection.
//
// Revision 1.24  2002/11/11 16:32:29  law
// - new prop: _IeeBlock.Document, IeePara.Block.
//
// Revision 1.23  2002/11/10 14:32:22  law
// - new interface: IeeHyperlink.
//
// Revision 1.22  2002/11/10 13:55:28  law
// - new interfaces: IeeHotSpot, IeePara.
//
// Revision 1.21  2002/11/04 15:58:28  law
// - new prop: TeeCustomEditor.OnBlockChange.
//
// Revision 1.20  2002/11/04 13:50:35  law
// - new interfaces: IeeDocument, _IeeBlock.
//
// Revision 1.19  2002/10/28 12:10:02  law
// - bug fix: изменение позиции курсора не синхронизировалось со ScrollBar'ами.
//
// Revision 1.18  2002/10/28 10:10:31  law
// - new behavior: синхронизация редактора со скроллерами.
//
// Revision 1.17  2002/10/28 09:10:36  law
// - new prop: TeeCustomEditor.HScrollBar, TeeCustomEditor.VScrollBar.
//
// Revision 1.16  2002/10/21 16:20:25  law
// - change: заточки для Builder'а.
//
// Revision 1.15  2002/10/17 10:10:22  law
// - bug fix: падала IDE при уничтожении окна редактора.
// - new prop: ScrollStyle.
//
// Revision 1.14  2002/10/07 09:54:41  law
// no message
//
// Revision 1.13  2002/10/07 09:34:17  law
// - new behavior: в Design-Time транслируем сообщения от редактора к панели-контейнеру.
//
// Revision 1.12  2002/10/04 13:28:14  law
// - new behavior: в Design-Time не передаем окну редактирования фокус.
//
// Revision 1.11  2002/10/04 12:29:33  law
// - new interface: IeeWindow.
//
// Revision 1.10  2002/10/04 10:29:51  law
// - new interface: Iee.
//
// Revision 1.9  2002/10/02 15:21:24  law
// - new methods: _IeeEditor.Invalidate, IeeCommands.HideSelection.
//
// Revision 1.8  2002/10/02 12:26:11  law
// - new interface: IeeGenerator.
//
// Revision 1.7  2002/10/02 11:33:02  law
// - new interface: IeeFormats.
//
// Revision 1.6  2002/10/01 16:22:44  law
// - new method: _IeeData._Load(hGlobal, TeeClipboardFormatID).
//
// Revision 1.5  2002/10/01 14:44:48  law
// - new interface: _IeeData.
//
// Revision 1.4  2002/10/01 13:42:21  law
// - new interface: IeeCommands.
//
// Revision 1.3  2002/09/27 09:18:43  law
// - new interface: _IeeViewParams.
//
// Revision 1.2  2002/09/26 16:14:36  law
// - new behavior: передаем фокус встроенному редактору из dll.
//
// Revision 1.1  2002/09/26 15:20:53  law
// - rename unit: evEverestEngineInterfaces -> eeInterfaces.
// - new unit: eeEditorExport.
//

{$Include evDefine.inc }

interface

uses
  Windows,
  ActiveX,

  Messages,

  Classes,
  Controls,
  StdCtrls,

  l3Interfaces,
  l3InternalInterfaces,
  l3Types,
  l3Base,
  l3IID,
  l3Units,

  afwInterfaces,

  k2BaseTypes,
  k2Interfaces,
  k2Base,

  evdTypes,

  evExcept,
  evTypes,
  evInternalInterfaces,
  evCustomTextSource,
  evTunedEditor,

  nevTools,
  nevGUIInterfaces,

  eeBaseInterfaces,
  eeBaseTypes,
  eeInterfaces,
  eeInterfacesEx,
  eeHotSpot,
  eeEditorExportModelPart,

  vtScrollBar
  ;

type
  TeeBlockChangeEvent = procedure (aSender      : TObject) of object;
  TeeBlockScrollEvent = procedure (aSender      : TObject;
                                   const aDown  : Boolean) of object;
  TeeCanSplitParaEvent = procedure (aSender        : TObject;
                                    const aPara    : IeePara;
                                    var Allow      : Boolean) of object;

  {$IfDef DesignTimeLibrary}
  _k2TagBox_ = TeeEditorExportModelPart;
  {$Else  DesignTimeLibrary}
  _k2TagBox_Parent_ = TeeEditorExportModelPart;
  {$Define k2BoxHasProcessor}
  {.$Define k2BoxHasNotChange}
  {$Include k2TagBox.imp.pas}
  {$EndIf DesignTimeLibrary}
  TeeEditorExport = class(_k2TagBox_,
                          IevF1LikeEditor,
                          IeeEditor,
                          IeeCommands,
                          IeeData,
                          IeeDocument,
                          IeeDocumentEx)
   {* Компонент для экспорта интерфейса IeeEditor. }
    private
    // internal fields
      f_VScrollBar           : TvtScrollBar;
      f_PrevScrollPos        : Integer;
      f_PrevScrollPart       : IevSub;
      f_PrevPart             : IevSub;
      f_NeedDrawDocumentEdge : Boolean;
    protected
    // internal fields
      f_OnBlockChange        : TeeBlockChangeEvent;
      f_OnBlockScroll        : TeeBlockScrollEvent;
      f_OnMouseAction        : TeeMouseActionEvent;
      f_OnCanSplitPara       : TeeCanSplitParaEvent;
      f_OnUserCommentsHidden : TNotifyEvent;
      f_OnVScroll            : TNotifyEvent;
    protected
    // property methods
(*      function  IsReadOnly: Bool;
        override;
        {-}*)
      procedure pm_SetTextSource(Value: TevCustomTextSource);
        override;
        {-}
      procedure pm_SetVScrollBar(Value: TvtScrollBar);
        {-}
      procedure DoHitTest(const aHotSpot : IevHotSpot;
                          const aState   : TafwCursorState;
                          var theInfo    : TafwCursorInfo);
        override;
        {-}
      function DontBreakInAACMode: Boolean;
        {-}
    public
    // interface methods
      // IeeEditor
      function  Get_Commands: IeeCommands;
        {-}
      function  Get_Data: IeeData;
        {-}
      function Get_Document: IeeDocument;
        {-}
      function Get_Block(anID: Integer): IeeBlock;
        {-}
      function Get_BlockEx(anID     : Integer;
                           aLayerID : Integer): IeeBlock;
        {-}
      function Get_Subs: IeeSubList;
        {-}
      function Get_Markers: IeeSubList;
        {-}
      function Get_Bookmarks: IeeSubList;
        {-}
      function Get_Marks: IeeSubList;
        {-}
      function pm_GetExternalHandle: Integer;
        {-}
      // IeeCommands
      procedure Cut;
        {-}
      procedure Copy;
        {-}
      procedure Delete;
        {-}
      procedure SelectAll;
        {* - выделить весь текст. }
      procedure HideSelection;
        {* - снять выделение. }
      // IeeData
(*      procedure Load(const anInStream: IStream; aFormat: TeeClipboardFormatID);
        overload;
        {* - загрузить данные из потока. }
      procedure Load(aHMem: hGlobal; aFormat: TeeClipboardFormatID);
        overload;
        {* - загрузить данные из памяти. }
      procedure Load(const anInStream: IStream; aFormat: TeeFormat = ee_fEverestBin);
        overload;
        {* - загрузить данные из потока. }
      procedure Load(aHMem: hGlobal; aFormat: TeeFormat = ee_fEverestBin);
        overload;
        {* - загрузить данные из памяти. }*)
(*      procedure Save(const anOutStream: IStream; aFormat: TeeClipboardFormatID);
        {* - сохранить данные в поток. }*)
      function  GetHotspotOnPoint(const aPt      : TPoint;
                                  out theHotSpot : IeeHotSpot): Windows.Bool;
        {-}
      function  CanSplitPara(const aPara: IeePara): Windows.Bool;
        {-}
      function  MakeHotSpot(const aPt      : TafwPoint;
                            const aHotSpot : IevHotSpot;
                            out theHotSpot : IeeHotSpot): Windows.Bool;
        {-}
      function  IeeDocumentEx_Get_Block(anID: Integer): IevDocumentPart;
      function  IeeDocumentEx.Get_Block = IeeDocumentEx_Get_Block;
        {-}
      function  IeeDocumentEx_Get_BlockEx(anID, aLayerID: Integer): IevDocumentPart;
      function  IeeDocumentEx.Get_BlockEx = IeeDocumentEx_Get_BlockEx;
        {-}
      function  IeeDocumentEx_Get_Sub(anID: Integer): IevSub;
      function  IeeDocumentEx.Get_Sub = IeeDocumentEx_Get_Sub;
        {-}
      function  IeeDocumentEx_Get_SubEx(anID, aLayerID: Integer): IevSub;
      function  IeeDocumentEx.Get_SubEx = IeeDocumentEx_Get_SubEx;
        {-}
      function  Get_NewSub: IevSub;
        {-}
      function  Get_NewSubEx(aLayerID: Integer): IevSub;
        {-}
      function  IeeDocumentEx_Get_Selection: InevSelection;
      function  IeeDocumentEx.Get_Selection = IeeDocumentEx_Get_Selection;
        {-}
      function  IeeDocumentEx_Get_EntryPoint: Ik2Tag;
      function  IeeDocumentEx.Get_EntryPoint = IeeDocumentEx_Get_EntryPoint;
        {-}
      function  Get_Processor: InevProcessor;
        {-}
      procedure SaveTo(aStream: IStream; aFormat: Tl3ClipboardFormat; aSaveSelection: Boolean = true);
        {-}
    protected
    // internal methods
      function  TextGetTarget(const aPt     : TPoint;
                              out theTarget : IUnknown): Boolean;
        override;
        {-}
      function  InTable: Bool; override;
      function  IsReadOnlyTarget(const aTarget: IUnknown): Boolean;
        override;
        {-}
      function  InUserComment: Boolean;
        {-}
      procedure MakeTextSource(out theTextSource: TevCustomTextSource);
        override;
        {-}
      procedure ParaChange;
        override;
        {-}
      procedure MouseUp(Button : TMouseButton;
                        Shift  : TShiftState;
                        aX, aY : Integer);
        override;
        {-}
      function  CheckMouseUp(const aHotSpot : IevHotSpot;
                             const aState   : TevMouseState): Boolean;
        override;
        {-}
      procedure MouseDown(Button : TMouseButton;
                          Shift  : TShiftState;
                          aX, aY : Integer);
        override;
        {-}
      procedure ScrollInfoChange(aVert             : Boolean;
                                 const aScrollInfo : TScrollInfo;
                                 aPosChanged       : Boolean);
        override;
        {-}
      procedure Notification(AComponent: TComponent; Operation: TOperation);
        override;
        {-}
      function  DoBreakPara(aDrawLines : Boolean;
                            const anOp : InevOp): Boolean;
        override;
        {-}
      function  HandledReadOnly(E: EevReadOnly): Boolean;
        override;
        {-}
      function DoDoDrop(aFormat       : Tl3ClipboardFormat;
                      const aMedium : TStgMedium;
                      var dwEffect  : Longint): Bool;
        override;
        {-}
      function DoDoDragOver(const aData  : IDataObject;
                            const aPoint : TPoint): Bool;
        override;
        {-}
      function DoGetAcceptableFormats: Tl3ClipboardFormats;
        override;
        {-}
      function  WantTab(aKeyPressed: Bool = False): Bool;
        override;
        {-}
      function  CanCut: Boolean;
        override;
        {-}
      function COMQueryInterface(const IID: Tl3GUID; out Obj): Tl3HResult;
        override;
        {-}
      function CanInsertParaOnMove: Boolean;
        {* Можно ли вставлять параграфы при движении курсора }
      function IsInReadOnlyPara(const aPara: InevPara; Delete: Boolean): Boolean;
        {* Находимся ли в параграфе, в котором запрещено редактирование }
      function AllowDrawDocumentEdge: Boolean; override;
      function GetInfoCanvas: InevInfoCanvas; override;
      procedure Paint(const CN: Il3Canvas); override;
      procedure Cleanup;
        override;
        {-}
      function VScrollWidth(anIC: Il3InfoCanvas): Integer; override;
    public
    // public methods
      constructor Create(anOwner: TComponent);
        override;
        {-}
      function  GetBlockByCursor(const aCursor : InevBasePoint): IevDocumentPart;
        {-}
      function  InsertPageBreak(NeedNewSection   : Bool = false;
                                aPageOrientation : TevPageOrientation = ev_poPortrait): Bool;
        override;
        {-}
      procedure InsertUserComment;
        {-}
      function  GetNearestSubByCursor(const aCursor : InevBasePoint = nil): IeeSub;
        {-}
      function  GetNearestBlockByCursor(const aCursor : InevBasePoint): IevDocumentPart;
        {-}
      procedure DecIndent;
        override;
        {-}
      procedure IncIndent;
        override;
        {-}
   public
    // public properties
      property VScrollBar: TvtScrollBar
        read f_VScrollBar
        write pm_SetVScrollBar;
        {* - вертикальный скроллер. }
      property AllowMultiSelect
        default true;
        {-}
      property NeedDrawDocumentEdge: Boolean
        read f_NeedDrawDocumentEdge
        write f_NeedDrawDocumentEdge
        default true;
    public
    // public events
      property OnVScroll: TNotifyEvent
        read f_OnVScroll
        write f_OnVScroll;
        {-}
      property OnMouseAction: TeeMouseActionEvent
        read f_OnMouseAction
        write f_OnMouseAction;
        {-}
  end;//TeeEditorExport

implementation

uses
  SysUtils,
  
  Forms,

  afwFacade,

  l3TreeInterfaces,
  l3MinMax,
  l3Const,
  l3Except,
  l3Chars,
  l3Stream,
  l3String,
  l3InterfacesMisc,
  l3Memory,
  l3Defaults,

  k2Facade,
  k2Tags,
  k2TagGen,
  k2TagTools,

  evdWriter,

  evConst,
  evMsgCode,

  {$IfDef evNeedDisp}
  evStandardActions,
  {$EndIf evNeedDisp}

  nevBase,
  nevInternalInterfaces,
  nevNavigation,
  nevFacade,

  eeExceptions,
  evOp,
  //eeBase,
  eeTextSourceExport,
  evSubPn,
  evDocumentPart,
  evOpProc,

  eeTagEditorTool,
  eeDocumentTool,
  eeSubList,
  eePicture,
  
  evdStyles,
  evParaTools,
  evCursorTools,
  evDocumentsCache,

  eeNode,
  eeSub,
  eePara,

  Block_Const,
  BitmapPara_Const,
  ParaList_Const,
  Table_Const,
  CommentPara_Const,
  LeafPara_Const,
  LeafParaDecorationsHolder_Const,
  Document_Const
  ;

{$IfNDef DesignTimeLibrary}
type _Instance_R_ = TeeEditorExport;
{$Include k2TagBox.imp.pas}
{$EndIf  DesignTimeLibrary}

// start class TeeBlock

type
  TeeBlock = class(TeeDocumentTool, IeeSub, IeeBlock)
    private
    // internal fields
      f_ID      : Integer;
      f_LayerID : Integer;
    protected
    // property methods
      // IeeSub
      function  Get_LayerID: Integer;
        {-}
      function  Get_Flag: Integer;
        {-}
      function  Get_Flags: Integer;
        {-}
      function  Delete: Windows.Bool;
        {* - удаляет метку. }
      function  IsSame(const aSub: IeeSub): Windows.Bool;
        {* - проверяет совпадение меток. }
      // IeeBlock
      function  Get_SubPlace: TevSubPlace;
        {-}
      function  Get_ID: Integer;
        {-}
      function  Get_Name: Tl3WString;
      procedure Set_Name(const aValue: Tl3WString);
        {-}
      function  Get_Next: IeeSub;
        {-}
      function  Get_LeafPara: IeeLeafPara;
       {-}
      function  Get_Para: IeePara;
       {-}
      function  Get_Document: IeeDocument;
        {-}
      function  Get_ParentBlock: IeeBlock;
        {-}
      function InheritsFrom(aType: TeeTypeID): Windows.Bool;
        {* - наследуется ли от aType? }
    public
    // public methods
      constructor Create(const aDocument : IeeDocumentEx;
                         anID            : Integer;
                         aLayerID        : Integer);
        reintroduce;
        {-}
      class function Make(const aDocument: IeeDocumentEx;
                          anID            : Integer;
                          aLayerID        : Integer): IeeBlock;
        {-}
      function Exists: Windows.Bool;
        {* - существует ли данный блок. }
      function Select: Windows.Bool;
        {* - перейти на блок. }
      function COMQueryInterface(const IID: Tl3GUID; out Obj): Tl3HResult;
        override;
        {-}
  end;//TeeBlock

constructor TeeBlock.Create(const aDocument: IeeDocumentEx;
                            anID            : Integer;
                            aLayerID        : Integer);
  //reintroduce;
  {-}
begin
 inherited Create(aDocument);
 f_ID := anID;
 f_LayerID := aLayerID;
end;

class function TeeBlock.Make(const aDocument : IeeDocumentEx;
                             anID            : Integer;
                             aLayerID        : Integer): IeeBlock;
  {-}
var
 l_Block : TeeBlock;
begin
 l_Block := Create(aDocument, anID, aLayerID);
 try
  Result := l_Block;
 finally
  l3Free(l_Block);
 end;//try..finally
end;

function TeeBlock.Get_SubPlace: TevSubPlace;
  {-}
var
 l_Sub : IevSub;
begin
 l_Sub := Document.SubEx[f_ID, Get_LayerID];
 if (l_Sub = nil) then
  Result := ev_spNoWhere
 else
  Result := l_Sub.SubPlace;
end;

function TeeBlock.Get_ID: Integer;
  {-}
begin
 Result := f_ID;
end;

function TeeBlock.Get_LayerID: Integer;
  {-}
begin
 Result := f_LayerID;
end;

function TeeBlock.Get_Flag: Integer;
  {-}
begin
 Result := 0;
end;

function TeeBlock.Get_Flags: Integer;
  {-}
var
 l_Sub : IevSub;
begin
 l_Sub := Document.SubEx[f_ID, Get_LayerID];
 if (l_Sub = nil) then
  Result := 0
 else
  Result := l_Sub.Flags;
end;

function TeeBlock.IsSame(const aSub: IeeSub): Windows.Bool;
  {* - проверяет совпадение меток. }
begin
 Result := l3IEQ(Self, aSub) OR
           ((aSub <> nil) AND (Get_ID = aSub.ID) AND (Get_LayerID = aSub.LayerID) AND
            (Get_Flag = aSub.Flag));
end;
  
function TeeBlock.Delete: Windows.Bool;
  {* - удаляет метку. }
var
 l_Block : IevDocumentPart;
begin
 Result := false;
 if (Document <> nil) then
 begin
  l_Block := Document.BlockEx[f_ID, f_LayerID];
  if (l_Block <> nil) then
   Result := l_Block.Delete(nil);
 end;//Document <> nil
end;

function TeeBlock.Get_Name: Tl3WString;
  {-}
begin
 if Exists then
  Result := Document.BlockEx[f_ID, f_LayerID].Name
 else
  l3AssignNil(Result);
end;

procedure TeeBlock.Set_Name(const aValue: Tl3WString);
  {-}
begin
 if Exists then
  Document.BlockEx[f_ID, f_LayerID].Name := aValue;
end;

function TeeBlock.Get_Next: IeeSub;
  {-}
var
 l_Sub : IevSub;
begin
 if Exists then
 begin
  l_Sub := Document.BlockEx[f_ID, f_LayerID].Next;
  if (l_Sub = nil) then
   Result := nil
  else
   Result := TeeSub.Make(Document, l_Sub.ID, l_Sub.LayerID, 0);
 end
 else
  Result := nil;
end;

function TeeBlock.Get_LeafPara: IeeLeafPara;
 {-}
var
 l_Sub : IevSub;
begin
 if Exists then
 begin
  l_Sub := Document.BlockEx[f_ID, f_LayerID];
  if (l_Sub = nil) then
   Result := nil
  else
   Result := TeePara.Make(l_Sub.LeafPara, Document) As IeeLeafPara;
 end
 else
  Result := nil;
end;

function TeeBlock.Get_Para: IeePara;
 {-}
var
 l_Sub : IevSub;
begin
 if Exists then
 begin
  l_Sub := Document.BlockEx[f_ID, f_LayerID];
  if (l_Sub = nil) then
   Result := nil
  else
   Result := TeePara.Make(l_Sub.Para, Document);
 end
 else
  Result := nil;
end;

function TeeBlock.Get_Document: IeeDocument;
  {-}
begin
 Result := Document;
end;

function TeeBlock.Get_ParentBlock: IeeBlock;
  {-}
var
 l_ParentBlock : IevDocumentPart;
begin
 Result := nil;
 if Exists then begin
  l_ParentBlock := Document.BlockEx[f_ID, f_LayerID].ParentDocumentPart;
  if (l_ParentBlock <> nil) then
   Result := IeeDocument(Document).BlockEx[l_ParentBlock.ID, l_ParentBlock.LayerID];
 end;//Exists
end;

function TeeBlock.InheritsFrom(aType: TeeTypeID): Windows.Bool;
  {* - наследуется ли от aType? }
var
 l_Block : IevDocumentPart;
begin
 Result := false;
 if (Document <> nil) then
 begin
  l_Block := Document.BlockEx[f_ID, f_LayerID];
  if (l_Block <> nil) then
   Result := l_Block.Para.InheritsFrom(aType);
 end;//Document <> nil
end;

function TeeBlock.Exists: Windows.Bool;
  {* - существует ли данный блок. }
var
 l_Block : IevDocumentPart;
begin
 Result := false;
 if (Document <> nil) then begin
  l_Block := Document.BlockEx[f_ID, f_LayerID];
  if (l_Block <> nil) then
   Result := l_Block.Exists;
 end;//Document <> nil
end;

function TeeBlock.Select: Windows.Bool;
  {* - перейти на блок. }
begin
 Result := Exists;
 if Result then
  with Document do
   BlockEx[f_ID, f_LayerID].Select(Selection);
end;

function TeeBlock.COMQueryInterface(const IID: Tl3GUID; out Obj): Tl3HResult;
  //override;
  {-}
begin
 if IID.EQ(Ik2Tag) then
 begin
  if Exists then
   Result := Tl3HResult_C(Document.BlockEx[f_ID, f_LayerID].QueryInterface(IID.IID, Obj))
  else
   Result.SetNoInterface;
 end//IID.EQ(Ik2Tag)
 else
 if IID.EQ(IeePara) then
 begin
  IeePara(Obj) := Get_Para;
  if (IeePara(Obj) = nil) then
   Result.SetNoInterface
  else
   Result.SetOk;
 end//IID.EQ(IeePara)
 else
  Result := inherited COMQueryInterface(IID, Obj);
end;

// start class TeeEditorExport

constructor TeeEditorExport.Create(anOwner: TComponent);
  //override;
  {-}
begin
 inherited;
 PersistentSelection := false;
 LeftIndentDelta := 16;
 AllowMultiSelect := true;
 f_NeedDrawDocumentEdge := true;
end;

procedure TeeEditorExport.Cleanup;
  //override;
  {-}
begin
 f_PrevPart := nil;
 f_PrevScrollPart := nil;
 f_PrevScrollPos  := 0;
 VScrollBar := nil;
 inherited;
end;

function TeeEditorExport.VScrollWidth(anIC: Il3InfoCanvas): Integer;
begin
 if Assigned(f_VScrollBar) then
  if f_VScrollBar.Visible
   then Result := 0
   else Result := anIC.DP2LP(PointX(f_VScrollBar.Width)).X
 else
  Result := inherited VScrollWidth(anIC);
end;

function TeeEditorExport.AllowDrawDocumentEdge: Boolean;
begin
 Result := f_NeedDrawDocumentEdge;
end;

function TeeEditorExport.GetInfoCanvas: InevInfoCanvas;
begin
 Result := inherited GetInfoCanvas;
(* if (Result <> nil) then
  Result.LineSpacing := def_BigLineSpacing;*)
end;

procedure TeeEditorExport.Paint(const CN: Il3Canvas);
begin
 //CN.LineSpacing := def_BigLineSpacing;
 inherited;
end;

function TeeEditorExport.CanCut: Boolean;
  //override;
  {-}
var
 l_Block  : InevRange;
 l_S, l_F : InevBasePoint;
begin
 Result := inherited CanCut;
 if Result then
 begin
  l_Block := InevSelection(Selection).GetBlock;
  l_Block.GetBorderPoints(l_S, l_F);
  if evInPara(l_S.MostInner, k2_idCommentPara, l_S) AND
     evInPara(l_F.MostInner, k2_idCommentPara, l_F) then
  begin
   if not l_S.Obj.IsSame(l_F.Obj^) then
    Result := false;
  end//evInPara
  else
   Result := false;   
 end;//Result
end;

procedure TeeEditorExport.MakeTextSource(out theTextSource: TevCustomTextSource);
  //override;
  {-}
begin
 theTextSource := TeeTextSourceExport.Create(Self);
end;

procedure TeeEditorExport.pm_SetTextSource(Value: TevCustomTextSource);
  //override;
  {-}
var
 l_OldTextSource : TevCustomTextSource;
begin
 if (f_TextSource <> Value) then
 begin
  if (f_TextSource <> nil) AND (f_TextSource.Owner = Self) then
  begin
   l_OldTextSource := f_TextSource;
   try
    f_TextSource.UnlinkEditor(Self);
    f_TextSource := nil;
    RemoveComponent(l_OldTextSource);
   finally
    l3Free(l_OldTextSource);
   end;//try..finally
  end;//f_TextSource <> nil..
  inherited;
 end;//f_TextSource <> Value
end;

function TeeEditorExport.TextGetTarget(const aPt     : TPoint;
                                       out theTarget : IUnknown): Boolean;
  //override;
  {-}
begin
 Result := GetHotspotOnPoint(aPt, IeeHotSpot(theTarget));
end;

function TeeEditorExport.InTable: Bool;
var
 l_C : InevBasePoint;
begin
 Result := InPara(k2_idTable, l_C);
 if Result then
  Result := evInPara(l_C.Obj^, k2_idCommentPara);
end;

function TeeEditorExport.IsReadOnlyTarget(const aTarget: IUnknown): Boolean;
  //override;
  {-}
var
 l_HotSpot : IeeHotSpot;
begin
 Result := inherited IsReadOnlyTarget(aTarget);
 if not Result then
  if Supports(aTarget, IeeHotSpot, l_HotSpot) then
   try
    if (l_HotSpot.Para = nil) then
     Result := true
    else
     Result := not l_HotSpot.Para.IsUserComment;
   finally
    l_HotSpot := nil;
   end;//try..finally 
end;

function TeeEditorExport.InUserComment: Boolean;
  {-}
var
 l_Cursor : InevBasePoint;
begin
 Result := InPara(k2_idCommentPara, l_Cursor);
 if Result then
 begin
  if (l_Cursor = nil) then
   Result := false
  else
   Result := not l_Cursor.Obj.BoolA[k2_tiCollapsed]; 
 end;//Result
end;

(*function TeeEditorExport.IsReadOnly: Bool;
  //override;
  {-}
begin
 Result := inherited IsReadOnly;
 if not Result then
  Result := not InUserComment;
end;*)

procedure TeeEditorExport.pm_SetVScrollBar(Value: TvtScrollBar);
  {-}
begin
 if (f_VScrollBar <> Value) then begin
  f_VScrollBar := Value;
  if (f_VScrollBar <> nil) then
  begin
   if (ScrollStyle in [ssHorizontal, ssBoth]) then
    ScrollStyle := ssHorizontal
   else
    ScrollStyle := ssNone;
   f_VScrollBar.OnScroll := VScrollEvent;
  end{ else ScrollStyle := ssBoth};
  UpdateScrollRange([afw_sbVert]);
 end;
end;

procedure TeeEditorExport.DoHitTest(const aHotSpot : IevHotSpot;
                                    const aState   : TafwCursorState;
                                    var theInfo    : TafwCursorInfo);
  //override;
  {-}
var
 l_HotSpot: IeeHotSpot;
 l_Picture: IeePicture;
begin
 inherited;
 if MakeHotSpot(aState.rPoint, aHotSpot, l_HotSpot) then
  try
   if Supports(l_HotSpot.Para, IeePicture, l_Picture) then
    try
     theInfo.rCursor := ev_csHandPoint;
    finally
     l_Picture := nil;
    end;//try..finally
  finally
   l_HotSpot := nil;
  end;//try..finally
end;

function TeeEditorExport.GetBlockByCursor(const aCursor : InevBasePoint): IevDocumentPart;
  {-}
var
 l_DocumentPart : IevDocumentPart;
 l_Cursor       : InevBasePoint;
 l_aCursor      : InevBasePoint;
 l_Block        : InevTag;
begin
 Result := nil;
 if (aCursor = nil) then
  l_aCursor := Selection.Cursor
 else
  l_aCursor := aCursor;
 if evInPara(l_aCursor.MostInner.Obj^, k2_idBlock, l_Block) then
 begin
  l_DocumentPart := TextSource.DocumentContainer.SubList.
                     BlockEx[l_Block.IntA[k2_tiHandle],
                             l_Block.IntA[k2_tiLayerID]];
     //Supports(l_Cursor, IevDocumentPart, l_DocumentPart) then
  try
   while (l_DocumentPart <> nil) AND (l_DocumentPart.LayerID <> ev_sbtSub) do
    l_DocumentPart := l_DocumentPart.ParentDocumentPart;
   Result := l_DocumentPart;
  finally
   l_DocumentPart := nil;
  end;//try..finally
 end;//evInPara(l_aCursor, k2_idBlock, l_Block)
end;

procedure RaiseUserCommentsHidden;
begin
 raise EeeUserCommentsHidden.Create('Нельзя вставить комментарий. Режим пользовательских комментариев выключен.');
end;

function TeeEditorExport.DoBreakPara(aDrawLines : Boolean;
                                     const anOp : InevOp): Boolean;
  //override;
  {-}
var
 l_WasSelection  : Bool;
 l_Pack          : InevOp;
 l_Block         : InevRange;
 l_S, l_F        : InevBasePoint;
 l_TopAnchor     : InevBasePoint;
 l_Cursor        : InevBasePoint;
 l_Reversed      : Bool;
 l_SearchCommand : Integer;
begin
 if DontBreakInAACMode then
 begin
  Result := False;
  Exit;
 end; // if DontBreakInAACMode then
 l_Pack := StartOp(ev_msgInsertPara);
 try
  Result := false;
  if not ShowUserComments then
  begin
   if IsStaticText then
    Exit;
   if Assigned(f_OnUserCommentsHidden) then
    f_OnUserCommentsHidden(Self)
   else
    RaiseUserCommentsHidden;
  end;//not ShowUserComments
  if ShowUserComments then
  begin
   l_WasSelection := not Selection.Collapsed;
   if l_WasSelection then
   begin
    l_Block := InevSelection(Selection).GetBlock;
    l_Block.GetBorderPoints(l_S, l_F);
    if not evInPara(l_S.MostInner, k2_idCommentPara) OR
       not evInPara(l_F.MostInner, k2_idCommentPara) then
     InevSelection(Selection).Unselect;
   end;//l_WasSelection

   try
    if not GetTopCursor(l_TopAnchor) then
     l_TopAnchor := nil;
   except
    on EnevMaybeBaseSwitched do
     l_TopAnchor := nil;
   end;//try..except
   l_Cursor := Selection.Cursor.ClonePoint(View);
   l_Reversed := False;
   //l_SearchCommand := ev_ocPrevParaBottomRight;
   l_SearchCommand := ev_ocNextParaTopLeft;

   while not Result do
   begin
    try
     if inherited DoBreakPara(aDrawLines, anOp) then
     begin
      Result := true;
      Exit;
     end//inherited DoBreakPara
     else
     if IsStaticText then
      Exit;
    except
     on EeeCannotInsertPara do
      Result := false;
     on EeeCannotDeletePara do
      Result := false;
    end;//try..except
    if l_WasSelection {AND Selection.Collapsed} then
    begin
     if (l_Pack <> nil) then
      l_Pack.Undo(Processor);
     InevSelection(Selection).Unselect;
     l_WasSelection := false;
     continue;
     // - типа повторяем попытку :-)
    end;//l_WasSelection
    if not MoveLeafCursor(l_SearchCommand) then
     if not MoveLeafCursor(l_SearchCommand, true) then
      // Если в одну строну найти не удалось - разворачиваемся в другую
      if not l_Reversed then
      begin
       l_Reversed := True;
       l_SearchCommand := ev_ocPrevParaBottomRight;
       //l_SearchCommand := ev_ocNextParaTopLeft;
       InevSelection(Selection).SelectPoint(l_Cursor, False, False);
       if Assigned(l_TopAnchor) then
        ScrollToCursor(l_TopAnchor);
      end
      else
       break;
   end;//while not Result
  end//ShowUserComments
  else
   Result := true;
   // - типа вставили - чтобы не спрашивать пользователя 2 раза
 finally
  l_Pack := nil;
 end;//try..finally
end;

function TeeEditorExport.HandledReadOnly(E: EevReadOnly): Boolean;
  //override;
  {-}
begin
 Result := not (E Is EeeCannotInsertPara) AND not (E Is EeeCannotDeletePara);
end;

function TeeEditorExport.DoDoDrop(aFormat       : Tl3ClipboardFormat;
                                const aMedium : TStgMedium;
                                var dwEffect  : Longint): Bool;
  //override;
  {-}

var
 l_TopAnchor     : InevBasePoint;
 l_Reversed      : Boolean;
 l_SearchCommand : Integer;
 l_Cursor        : InevBasePoint;

 function DoReverse : Boolean;
 begin//DoReverse
  if not l_Reversed then
  begin
   l_Reversed := True;
   l_SearchCommand := ev_ocNextParaTopLeft;
   InevSelection(Selection).SelectPoint(l_Cursor, False, False);
   if Assigned(l_TopAnchor) then
    ScrollToCursor(l_TopAnchor);
   Result := true; 
  end//not l_Reversed
  else
   Result := false;
 end;//DoReverse

var
 l_LastInner : InevTag;
begin
 Result := false;
 if (Selection <> nil) AND (Selection.Cursor <> nil) then
  if ShowUserComments then
  begin
   Lock(Self);
   // http://mdp.garant.ru/pages/viewpage.action?pageId=278135821
   // чтобы не дёргаться на каждый чих при вставке по DnD, которое операцию
   // то открыло, а окно - не залочило, что правильно, ну вот тут - надо бы уже залочить.
   try
    if not GetTopCursor(l_TopAnchor) then
     l_TopAnchor := nil;
    l_Cursor := Selection.Cursor.ClonePoint(View);
    l_Reversed := False;
    l_SearchCommand := ev_ocPrevParaBottomRight;
    l_LastInner := nil;
    try
     while not Result do
     begin
      try
       Result := inherited DoDoDrop(aFormat, aMedium, dwEffect);
       Exit;
      except
       on EeeCannotInsertPara do
       begin
        Result := false;
        if (Selection <> nil) then
         InevSelection(Selection).Unselect;
       end;//EeeCannotInsertPara
       on EeeCannotDeletePara do
       begin
        Result := false;
        if (Selection <> nil) then
         InevSelection(Selection).Unselect;
       end;//EeeCannotDeletePara
       on EevLimitReached do
       // http://mdp.garant.ru/pages/viewpage.action?pageId=453166247
       begin
        Result := true{false};
        Exit;
       end;//EevLimitReached
      end;//try..except
      if not MoveLeafCursor(l_SearchCommand) then
      begin
       if not MoveLeafCursor(l_SearchCommand, true) then
        // Если в одну строну найти не удалось - разворачиваемся в другую
        if not DoReverse then
         break;
      end//not MoveLeafCursor(l_SearchCommand)
      else
       if (l_LastInner <> nil) AND
          l_LastInner.IsSame(Selection.Cursor.MostInner.Obj^) then
        // http://mdp.garant.ru/pages/viewpage.action?pageId=294589436
        if not MoveLeafCursor(l_SearchCommand) then
         if not DoReverse then
         begin
          Result := true;
          break;
         end;//not DoReverse
      l_LastInner := Selection.Cursor.MostInner.Obj^;
     end;//while not Result
    finally
     l_LastInner := nil;
    end;//try..finally
   finally
    Unlock(Self);
   end;//try..finally
  end;//ShowUserComments
end;

function TeeEditorExport.DoDoDragOver(const aData  : IDataObject;
                                      const aPoint : TPoint): Bool;
  //override;
  {-}
begin
 if ShowUserComments then
  Result := inherited DoDoDragOver(aData, aPoint)
 else
  Result := false; 
end;

function TeeEditorExport.DoGetAcceptableFormats: Tl3ClipboardFormats;
  //override;
  {-}
begin
 if ShowUserComments then
  Result := inherited DoGetAcceptableFormats
 else
  Result := nil;
end;

function TeeEditorExport.WantTab(aKeyPressed: Bool): Bool;
  //override;
  {-}
begin
 Result := not ReadOnly and InUserComment;
 // - если не в комментарии, то по Tab надо переходить на другой контрол.
end;

function TeeEditorExport.GetNearestSubByCursor(const aCursor : InevBasePoint = nil): IeeSub;
  {-}
var
 l_DocumentPart : IevSub;
 l_aCursor      : InevBasePoint;
 l_Cursor       : InevBasePoint;
begin
 Result := nil;
 if (aCursor = nil) then
 begin
  if (Selection <> nil) then
   l_aCursor := Selection.Cursor
  else
  begin
   Result := nil;
   exit;
  end;
 end
 else
  l_aCursor := aCursor;
 l_aCursor := l_aCursor.ClonePoint(View);
 try
  while true do
  begin
   if Supports(l_aCursor.MostInner, IevSub, l_DocumentPart) then
   try
    if l_DocumentPart.Exists AND (l_DocumentPart.LayerID = ev_sbtSub) then
     Result := TeeSub.Make(Self, l_DocumentPart.ID, l_DocumentPart.LayerID, 0);
   finally
    l_DocumentPart := nil;
   end;//try..finally
   if (Result = nil) AND
      evInPara(l_aCursor, k2_idBlock, l_Cursor) then
   begin
    if (l_Cursor.Position = 1) AND
       Supports(l_Cursor, IevDocumentPart, l_DocumentPart) AND
       (l_DocumentPart.LayerID = ev_sbtSub) then
     try
      Result := Get_BlockEx(l_DocumentPart.ID, l_DocumentPart.LayerID);
     finally
      l_DocumentPart := nil;
     end//try..finally
    else
    if not l_aCursor.MostInner.Move(View, ev_ocPrevParaBottomRight) then
     break;
   end;//Result = nil
   if (Result <> nil) then
    if (Result.LayerID = ev_sbtSub) then
     break
    else
     Result := nil;
  end;//while true
 finally
  l_aCursor := nil;
 end;//try..finally
end;

function TeeEditorExport.GetNearestBlockByCursor(const aCursor : InevBasePoint): IevDocumentPart;
  {-}

var
 l_Cursor : InevBasePoint;
 l_Res    : IevDocumentPart absolute Result;

 function SkipLeaves: Boolean;
 var
  l_PID   : Integer;
  l_Block : InevObjectList;
  l_Child : InevTag;
 begin//SkipLeaves
  Result := false;
  l_PID := l_Cursor.Position - 1;
  l_Block := l_Cursor.Obj.ToList;
  if l_Block.InheritsFrom(k2_idDocument) then
  // http://mdp.garant.ru/pages/viewpage.action?pageId=255972328
   Exit;
  if (l_PID = 0) then
  // - не надо пересмещать позицию, т.к. можем не встать на самого внутреннего ребёнка
  //   а на k2_idContentsElement и зависнуть
  // http://mdp.garant.ru/pages/viewpage.action?pageId=221251387 
   Result := (l_Res <> nil) AND not l_Block.InheritsFrom(k2_idCommentPara)
  else
  begin
   if (l_Block.ChildrenCount = l_Block.LeafShapeCount) then
   // - заточка для плоских блоков
   begin
    l_Cursor.Move(View, ev_ocTopLeft);
    Result := not l_Block.InheritsFrom(k2_idCommentPara);
   end//l_Block.ChildrenCount = l_Block.LeafShapeCount
   else
   begin
    while (l_PID > 0) do
    begin
     l_Child := l_Block.Child[l_PID];
     if not l_Child.InheritsFrom(k2_idLeafPara) then
      if not l_Child.InheritsFrom(k2_idLeafParaDecorationsHolder) then
       break;
     Dec(l_PID);
    end;//l_PID > 0
    l_Cursor.PositionW := l_PID + 1;
    l_Cursor.Inner.Move(View, ev_ocBottomRight);
    if (l_PID = 0) then
     Result := not l_Block.InheritsFrom(k2_idCommentPara);
   end;//l_Block.ChildrenCount = l_Block.LeafShapeCount
  end;//l_PID = 0
 end;//SkipLeaves

var
 l_DocumentPart : IevDocumentPart;
 l_aCursor      : InevBasePoint;
 l_TableCursor  : InevBasePoint;
begin
 Result := nil;
 if not HasDocument OR (TextSource.DocumentContainer.ContentsTree = nil) then
  // - оглавления нету, ну и нечего дёргаться
  Exit;
 if (aCursor = nil) then
 begin
  if (Selection <> nil) then
   l_aCursor := Selection.Cursor
  else
  begin
   Result := nil;
   exit;
  end;//Selection <> nil
 end//aCursor = nil
 else
  l_aCursor := aCursor;
 l_aCursor := l_aCursor.ClonePoint(View);
 try
  while true do
  begin
   if (Result = nil) AND
      evInPara(l_aCursor, k2_idBlock, l_Cursor) then
   begin
    if (l_Cursor.Position = 1) AND
       // http://mdp.garant.ru/pages/viewpage.action?pageId=173509795
       // НЕЛЬЗЯ эту проверку трогать, ибо тогда мы находим не ближайший БЛОК,
       // а ближайшего РОДИТЕЛЯ.
       Supports(l_Cursor, IevDocumentPart, l_DocumentPart) AND
       (l_DocumentPart.LayerID = ev_sbtSub) then
     try
      Result := l_DocumentPart;
     finally
      l_DocumentPart := nil;
     end//try..finally
    else
    begin
     if EvInPara(l_aCursor, k2_idTable, l_TableCursor) then
     begin
      l_TableCursor.Move(View, ev_ocTopLeft);
     end//EvInPara(l_aCursor, k2_idTable, l_TableCursor)
     else
     if SkipLeaves then
      continue;
     if not l_aCursor.MostInner.Move(nil{View}, ev_ocPrevParaBottomRight) then
                                   //^ это не потому что Шура, сука, так захотел
                                   //  а чтобы игнорировалась скрытость параграфов
                                   //  ибо http://mdp.garant.ru/pages/viewpage.action?pageId=217690373
      break;
    end;//l_Cursor.Position = 1
   end;//Result = nil
   if (Result <> nil) then
    if (Result.LayerID = ev_sbtSub) then
     break
    else
     Result := nil;
  end;//while true
 finally
  l_aCursor := nil;
 end;//try..finally
end;

procedure TeeEditorExport.DecIndent;
  //override;
  {-}
begin
 // - ничего не делаем, т.к. для комментариев это неактуально, а остальные параграфы
 //   типа ReadOnly.
end;

procedure TeeEditorExport.IncIndent;
  //override;
  {-}
begin
 // - ничего не делаем, т.к. для комментариев это неактуально, а остальные параграфы
 //   типа ReadOnly.
end;

procedure TeeEditorExport.ParaChange;
  //override;
  {-}
var
 l_Block : IevSub;
begin
 inherited;
 if Assigned(f_OnBlockChange) AND
    (Selection <> nil) AND (Selection.Cursor <> nil) then
 begin
  if not Selection.Cursor.MostInner.Obj.InheritsFrom(k2_idLeafPara) then
   Exit;
   // - отсекаем "переходные" процессы
  l_Block := GetBlockByCursor(nil);
  try
   if (l_Block = nil) then
    Exit;
   if (f_PrevPart <> nil) then
   begin
    if (f_PrevPart.ID = l_Block.ID) AND (f_PrevPart.LayerID = l_Block.LayerID) then
     Exit;
   end//f_PrevPart <> nil
   else
   begin
    if (l_Block.ID = 0) AND (l_Block.LayerID = ev_sbtSub) then
    begin
     f_PrevPart := l_Block;
     Exit;
    end;//l_Block.ID = 0
   end;//f_PrevPart <> nil
   f_PrevPart := l_Block;
   f_OnBlockChange(Self);
  finally
   l_Block := nil;
  end;//try..finally
 end;//Assigned(f_OnBlockChange)..
end;

function MB2eeMB(aButton : TMouseButton): TeeMouseButton;
const
 _MB : array [TMouseButton] of TeeMouseButton = (ee_mbLeft, ee_mbRight, ee_mbMiddle);
begin
 Result := _MB[aButton];
end;

procedure TeeEditorExport.MouseUp(Button : TMouseButton;
                                  Shift  : TShiftState;
                                  aX, aY : Integer);
  //override;
  {-}
var
 l_HotSpot : IeeHotSpot;
begin
 if Assigned(f_OnMouseAction) AND
    (Button <> mbLeft)
    // - этот случай особо отрабатывается в CheckMouseUp
    //   см. http://mdp.garant.ru/pages/viewpage.action?pageId=155030165
    then
 begin
  if GetHotspotOnPoint(Point(aX, aY), l_HotSpot) then
   try
    {$IfDef XE}
    assert(false);
    {$Else}
    if f_OnMouseAction(Self,
                       l_HotSpot,
                       MB2eeMB(Button),
                       ee_maUp,
                       TeeShiftState(Shift),
                       fl_WasAsyncLoop) then
    begin
     fl_WasAsyncLoop := false;
     Exit;
    end;//f_OnMouseAction
    {$EndIf}
   finally
    l_HotSpot := nil;
   end;//try..finally
 end;//Assigned(f_OnMouseAction)
 inherited;
end;

function TeeEditorExport.CheckMouseUp(const aHotSpot : IevHotSpot;
                                      const aState   : TevMouseState): Boolean;
  //override;
  {-}
var
 l_HotSpot : IeeHotSpot;
begin
 if Assigned(f_OnMouseAction) then
 begin
  if MakeHotSpot(aState.rPoint, aHotSpot, l_HotSpot) then
   try
    {$IfDef XE}
    assert(false);
    {$Else}
    if f_OnMouseAction(Self,
                       l_HotSpot,
                       ee_mbLeft,
                       ee_maUp,
                       TeeShiftState(aState.rKeys),
                       fl_WasAsyncLoop) then
    begin
     fl_WasAsyncLoop := false;
     Result := true;
     Exit;
    end;//f_OnMouseAction
    {$EndIf}
   finally
    l_HotSpot := nil;
   end;//try..finally
 end;//Assigned(f_OnMouseAction)
 Result := inherited CheckMouseUp(aHotSpot, aState);
end;
  
procedure TeeEditorExport.MouseDown(Button : TMouseButton;
                                    Shift  : TShiftState;
                                    aX, aY : Integer);
  //override;
  {-}
var
 l_HotSpot : IeeHotSpot;
 l_Op      : InevOp;
begin
 afw.BeginOp;
 try
  if Assigned(f_OnMouseAction) then
  begin
   if GetHotspotOnPoint(Point(aX, aY), l_HotSpot) then
    try
     if not l_HotSpot.InSelection AND (Button = mbRight) then
     begin
      // - переставляем курсор по клику правой кнопкой
      begin
       l_Op := StartOp(ev_msgMove);
       try
        InevSelection(Selection).SelectPoint(Selection.Mouse, false);
       finally
        l_Op := nil;
       end;//try..finally
      end;//
     end;//not l_HotSpot.InSelection
    {$IfDef XE}
    assert(false);
    {$Else}
     if f_OnMouseAction(Self,
                        l_HotSpot,
                        MB2eeMB(Button),
                        ee_maDown,
                        TeeShiftState(Shift),
                        fl_WasAsyncLoop) then
      Exit;
     {$EndIf}
    finally
     l_HotSpot := nil;
    end;//try..finally
  end;//Assigned(f_OnMouseAction)
  inherited;
 finally
  afw.EndOp;
 end;//try..finally
end;

function TeeEditorExport.GetHotspotOnPoint(const aPt      : TPoint;
                                           out theHotSpot : IeeHotSpot): Windows.Bool;
  {-}
var
 l_HotSpot : IevHotSpot;
begin
 if inherited GetHotspotOnPoint(aPt, l_HotSpot, false) then
  Result := MakeHotSpot(DP2LP(aPt, false), l_HotSpot, theHotSpot)
 else
  Result := false; 
end;

function TeeEditorExport.CanSplitPara(const aPara: IeePara): Windows.Bool;
  {-}
var
 l_Result : Boolean;
begin
 l_Result := true;
 if not ShowUserComments then
 begin
  Result := false;
  Exit;
 end;//not ShowUserComments
 if Assigned(f_OnCanSplitPara) then
  f_OnCanSplitPara(Self, aPara, l_Result);
 Result := l_Result;
end;

function TeeEditorExport.MakeHotSpot(const aPt      : TafwPoint;
                                     const aHotSpot : IevHotSpot;
                                     out theHotSpot : IeeHotSpot): Windows.Bool;
  {-}
var
 l_Cursor    : InevBasePoint;
 l_Hyperlink : IevHyperlink;
begin
 if Document.IsValid then
 begin
  Result := true;
  if not Supports(aHotSpot, IevHyperlink, l_Hyperlink) then
   l_Hyperlink := nil;
  if GetPtPoint(aPt, l_Cursor) AND (Selection <> nil) then
   try
    theHotSpot := TeeHotSpot.Make(l_Cursor.MostInner.Obj^,
                                  Self,
                                  l_Hyperlink,
                                  InevSelection(Selection).Contains(l_Cursor));
   finally
    l_Cursor := nil;
   end//try..finally
  else
   Result := false; 
 end//Document.IsValid
 else
  Result := false; 
end;

function TeeEditorExport.COMQueryInterface(const IID: Tl3GUID; out Obj): Tl3HResult;
  //override;
  {-}
begin
 if IID.EQ(IeeHotSpot) then
 begin
  Assert(false);
  Result.SetNoInterface;
 end//IID.EQ(IeeHotSpot)
 else
  Result := inherited COMQueryInterface(IID, Obj);
end;

function TeeEditorExport.CanInsertParaOnMove: Boolean;
  {* Можно ли вставлять параграфы при движении курсора }
begin
 Result := false;
end;

function TeeEditorExport.IsInReadOnlyPara(const aPara: InevPara; Delete: Boolean): Boolean;
  {* Находимся ли в параграфе, в котором запрещено редактирование }
begin
 Result := false;
end;

function TeeEditorExport.InsertPageBreak(NeedNewSection   : Bool = false;
                                         aPageOrientation : TevPageOrientation = ev_poPortrait): Bool;
  //override;
  {-}
begin
 Result := false;
end;

function TeeEditorExport.Get_Commands: IeeCommands;
  {-}
begin
 Result := Self;
end;

function TeeEditorExport.Get_Data: IeeData;
  {-}
begin
 Result := Self;
end;

function TeeEditorExport.Get_Document: IeeDocument;
  {-}
begin
 Result := Self;
end;

function TeeEditorExport.Get_Block(anID: Integer): IeeBlock;
  {-}
begin
 Result := TeeBlock.Make(Self, anID, ev_sbtSub);
end;

function TeeEditorExport.Get_BlockEx(anID     : Integer;
                                     aLayerID : Integer): IeeBlock;
  {-}
begin
 Result := TeeBlock.Make(Self, anID, aLayerID);
end;

function TeeEditorExport.Get_Subs: IeeSubList;
  {-}
begin
 Result := TeeSubList.Make(Document, Self, ev_sbtSub);
end;

function TeeEditorExport.Get_Markers: IeeSubList;
  {-}
begin
 Result := TeeSubList.Make(Document, Self, ev_sbtMarker);
end;

function TeeEditorExport.Get_Bookmarks: IeeSubList;
  {-}
var
 l_Tree : InevSimpleTree;
 l_N    : Il3SimpleNode;
 l_Sub  : IevSub;
begin
 if HasDocument then
 begin
  if not f_CheckedBookmarks then
  begin
   f_CheckedBookmarks := true;
   l_Tree := TextSource.DocumentContainer.ContentsTree;
   if (l_Tree <> nil) then
   begin
    l_N := l_Tree.RootNode;
    if (l_N <> nil) then
    begin
     l_N := l_N.Child;
     while (l_N <> nil) do
     begin
      if l3Same(l_N.Text, 'Закладки') then
      begin
       // - здесь будем перебирать закладки и синхронизировать их с обратным индексом
       l_N := l_N.Child;
       while (l_N <> nil) do
       begin
        if Supports(l_N, IevSub, l_Sub) then
         try
          l_Sub.Exists;
          // - это чтобы CheckExists дёрнуть
         finally
          l_Sub := nil;
         end;//try..finally
        l_N := l_N.Next;
       end;//l_N <> nil
       break;
      end;//l_N.Text = 'Закладки'
      l_N := l_N.Next;
     end;//while (l_N <> nil)
    end;//l_N <> nil
   end;//l_Tree <> nil
  end;//not f_CheckedBookmarks
 end;//HasDocument
 Result := TeeSubList.Make(Document, Self, ev_sbtBookmark);
end;

function TeeEditorExport.Get_Marks: IeeSubList;
  {-}
begin
 Result := TeeSubList.Make(Document, Self, ev_sbtMark);
end;

function TeeEditorExport.pm_GetExternalHandle: Integer;
  {-}
begin
 if (TextSource = nil) then
  Result := 0
 else
  Result := TextSource.DocumentContainer.SubList.Block[0].ExternalHandle;
end;
  
procedure TeeEditorExport.Cut;
  {-}
begin
 inherited Cut;
end;

procedure TeeEditorExport.Copy;
  {-}
begin
 inherited Copy;
end;

procedure TeeEditorExport.Delete;
  {-}
begin
 Range.Delete;
end;

procedure TeeEditorExport.SelectAll;
  {* - выделить весь текст. }
begin
 {$IfDef evNeedDisp}
 Process(Self, Self, Ord(ev_ccSelectAll), false);
 {$Else  evNeedDisp}
 Select(ev_stDocument);
 {$EndIf evNeedDisp}
end;

procedure TeeEditorExport.HideSelection;
  {* - снять выделение. }
begin
 {$IfDef evNeedDisp}
 Process(Self, Self, Ord(ev_ccHideSelection), false);
 {$Else  evNeedDisp}
 InevSelection(Selection).Unselect;
 {$EndIf evNeedDisp}
end;

(*procedure TeeEditorExport.Load(const anInStream: IStream; aFormat: TeeClipboardFormatID);
  {* - загрузить данные из потока. }
begin
 if (TextSource <> nil) then
  TextSource.DocumentContainer.TagWriter.WriteTag(View, aFormat, anInStream);
end;

procedure TeeEditorExport.Load(aHMem: hGlobal; aFormat: TeeClipboardFormatID);
  //overload;
  {* - загрузить данные из памяти. }
begin
 Range.InsertData(aFormat, aHMem, true);
end;

procedure TeeEditorExport.Load(const anInStream: IStream; aFormat: TeeFormat = ee_fEverestBin);
  //overload;
  {* - загрузить данные из потока. }
begin
 Load(anInStream, eeCFID(aFormat));
end;

procedure TeeEditorExport.Load(aHMem: hGlobal; aFormat: TeeFormat = ee_fEverestBin);
  //overload;
  {* - загрузить данные из памяти. }
begin
 Load(aHMem, eeCFID(aFormat));
end;*)

(*procedure TeeEditorExport.Save(const anOutStream: IStream; aFormat: TeeClipboardFormatID);
  {* - сохранить данные в поток. }
begin
 Document.Range.Data.Store(aFormat, anOutStream, MakeExportFilters(false, true));
end;*)

function TeeEditorExport.IeeDocumentEx_Get_Block(anID: Integer): IevDocumentPart;
  {-}
begin
 if (TextSource = nil) then
  Result := nil
 else
  Result := TextSource.DocumentContainer.SubList.Block[anID];
end;

function TeeEditorExport.IeeDocumentEx_Get_BlockEx(anID, aLayerID: Integer): IevDocumentPart;
  {-}
begin
 if (TextSource = nil) then
  Result := nil
 else
  Result := TextSource.DocumentContainer.SubList.BlockEx[anID, aLayerID];
end;

function TeeEditorExport.IeeDocumentEx_Get_Sub(anID: Integer): IevSub;
  {-}
begin
 if (TextSource = nil) then
  Result := nil
 else
  Result := TextSource.DocumentContainer.SubList.Sub[anID];
end;

function TeeEditorExport.IeeDocumentEx_Get_SubEx(anID, aLayerID: Integer): IevSub;
  {-}
begin
 if (TextSource = nil) then
  Result := nil
 else
  Result := TextSource.DocumentContainer.SubList.SubEx[anID, aLayerID];
end;

function TeeEditorExport.Get_NewSub: IevSub;
  {-}
begin
 if (TextSource = nil) then
  Result := nil
 else
  Result := TextSource.DocumentContainer.SubList.NewSub;
end;

function TeeEditorExport.Get_NewSubEx(aLayerID: Integer): IevSub;
  {-}
begin
 if (TextSource = nil) then
  Result := nil
 else
  Result := TextSource.DocumentContainer.SubList.NewSubEx[aLayerID];
end;

function TeeEditorExport.IeeDocumentEx_Get_Selection: InevSelection;
  {-}
begin
 Result := Selection;
end;

function TeeEditorExport.IeeDocumentEx_Get_EntryPoint: Ik2Tag;
  {-}
begin
 Result := Selection.Cursor.MostInner.Obj^;
end;

function TeeEditorExport.Get_Processor: InevProcessor;
  {-}
begin
 Result := Processor; 
end;

procedure TeeEditorExport.SaveTo(aStream        : IStream;
                                 aFormat        : Tl3ClipboardFormat;
                                 aSaveSelection : Boolean);
  {-}
//var
(* l_S, l_F : _TevBaseCursor;*)
begin
 if Assigned(aStream) then
  if aSaveSelection and (not Selection.Collapsed) then
  begin
   InevSelection(Selection).GetBlock.Data.Store(aFormat, aStream, MakeExportFilters(aSaveSelection, true));
(*   Selection.SaveBlock(TevLocation(Block)); // - снимаем копию  //
   try
    Block.GetBorderCursors(TevCursor(l_S), TevCursor(l_F));
    evMoveCursor(l_S.MostInner, ev_ocTopLeft);
    evMoveCursor(l_F.MostInner, ev_ocBottomRight);
    TextSource.ReadData(aFormat, aStream, Block);
   finally
    l3Free(Block);
   end;//try..finally*)
  end//not Selection.Collaped
  else
   Document.Range.Data.Store(aFormat, aStream, MakeExportFilters(false, true));
end;

procedure TeeEditorExport.ScrollInfoChange(aVert             : Boolean;
                                           const aScrollInfo : TScrollInfo;
                                           aPosChanged       : Boolean);
  //override;
  {-}
var
 l_ScrollInfo : TeeScrollInfo;
 l_Cursor     : InevBasePoint;
 l_Block      : IevSub;
 l_ScrollBar  : TvtScrollBar;
 l_Page       : Integer;
begin
 if aVert then
  if aPosChanged then
   if Assigned(f_OnVScroll) then
    f_OnVScroll(Self);
 with l_ScrollInfo do
 begin
  rScrollInfo := aScrollInfo;
  with rScrollInfo do
  begin
   if ((fMask AND SIF_PAGE) <> 0) then
   begin
    if aVert then
    begin
     rSmallChange := l3MinMax.Max(1, nev.LineScrollDelta.Y);
     rLargeChange := l3MinMax.Max(1, nMax div 3);
    end//aVert
    else
    begin
     rSmallChange := l3MinMax.Max(1, nev.LineScrollDelta.X);
     rLargeChange := l3MinMax.Max(1, nPage);
    end;//aVert
   end;//(fMask AND SIF_PAGE) <> 0
   if ((fMask AND SIF_POS) <> 0) AND Assigned(f_OnBlockScroll) AND aVert then
   begin
    if GetTopCursor(l_Cursor) then
     try
      l_Block := GetBlockByCursor(l_Cursor);
      if (l_Block <> nil) then
       try
        if (f_PrevScrollPart = nil) OR
           not ((f_PrevScrollPart.ID = l_Block.ID) AND
                (f_PrevScrollPart.LayerID = l_Block.LayerID)) then
        begin
         f_PrevScrollPart := l_Block;
         f_OnBlockScroll(Self, f_PrevScrollPos < aScrollInfo.nPos);
         f_PrevScrollPos := aScrollInfo.nPos;
        end;//f_PrevScrollPart = nil..
       finally
        l_Block := nil;
       end;//try..finally
     finally
      l_Cursor := nil;
     end;//try..finally
   end;//(fMask AND SIF_POS) <> 0..
  end;//with rScrollInfo
 end;//with l_ScrollInfo
 if aVert then
 begin
  l_ScrollBar := f_VScrollBar;
  if (l_ScrollBar <> nil) and (aScrollInfo.nMax > 0) then
  begin
   l_Page := aScrollInfo.nPage;
   if not WasFirstPaint then
    Inc(l_Page);
   l_ScrollBar.Visible := (aScrollInfo.nPos > 0) OR (l_Page {+ 1} < aScrollInfo.nMax);
   if not WasFirstPaint then
    Invalidate;
   //if l_ScrollBar.Visible then
    with l_ScrollBar, l_ScrollInfo, rScrollInfo do
    begin
     if ((fMask AND SIF_PAGE) <> 0) then
      PageSize := nPage;
     if ((fMask AND SIF_RANGE) <> 0) then
     begin
      if (nMax < PageSize) then
       nMax := PageSize;
       // - чтобы не летел exception в TvtScrollBar.SetParams
      SetParams(nPos, nMin, nMax);
      SmallChange := rSmallChange;
      LargeChange := rLargeChange;
     end//(fMask AND SIF_RANGE) <> 0
     else
     if ((fMask AND SIF_POS) <> 0) then
      Position := nPos;
    end;//with l_ScrollBar
  end;//l_ScrollBar <> nil
 end;//aVert
end;

procedure TeeEditorExport.Notification(AComponent: TComponent; Operation: TOperation);
  //override;
  {-}
begin
 inherited;
 if (Operation = opRemove) then begin
  if (aComponent = f_VScrollBar) then
   VScrollBar := nil;
 end;//Operation = opRemove
end;

procedure TeeEditorExport.InsertUserComment;
  {-}
begin
 ProcessCommand(ev_msgBreakPara, true, 1);
end;

function TeeEditorExport.DontBreakInAACMode: Boolean;
begin
 Result := AACLike > nev_aacNone;
end;

end.
