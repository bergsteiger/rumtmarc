USES
 WordsTranslation.script
 SysUtils.script
 Forms.script
;

OBJECT FUNCTION "Найти контрол на форме" STRING IN aControl OBJECT IN aForm
 aControl aForm pop:control:FindControlByName =: Result
 Result pop:object:IsNil ! 'Не удалось найти ' aControl Cat
  ASSERTS 
;

OBJECT FUNCTION  "Найти контрол по имени на форме" STRING IN aControl OBJECT IN aForm
 "Найти контрол {(aControl)} на форме {(aForm)}" =: Result
 Result pop:object:IsNil ! 
 [[ 'Не нашли контрол ' aControl ]] strings:Cat
 ASSERTS
; // "Найти контрол по имени на форме"

WORDWORKER EnumerateControls OBJECT IN aParent
 aParent ЯВЛЯЕТСЯ class::TWinControl ? (
  VAR I
  0 =: I
  aParent pop:control:ControlCount LOOP ( I aParent pop:control:GetControl WordToWork DO ++! I )
 )
;

WORDWORKER TotalEnum OBJECT IN aControl

 FORWARD DoItem

 : DoItem OBJECT IN aControl
  aControl ( WordToWork DO )
  aControl EnumerateControls DoItem
 ;

 aControl DoItem
;

BOOLEAN FUNCTION "Контрол является формой с именем ?" OBJECT IN aControl STRING IN aName

 ( aControl ЯВЛЯЕТСЯ class::TvcmForm ) И
 ( aControl pop:vcm:form:FormID РАВНО aName ) =: Result
;

CONST cBreak 'BreakTotalEnum'

WORDWORKER "выполнить для всех контролов" OBJECT IN aControl
 "Выполнить {(@ ( aControl TotalEnum ( WordToWork DO ) ) )} обработав исключение {(cBreak)}"
;

: "Закончить перебор контролов"
 cBreak RAISE
;

OBJECT FUNCTION "Найти на главной форме форму с типом и именем" INTEGER IN aUserType STRING IN aForm

 : Действия OBJECT IN Контрол
  ( "Контрол {(Контрол)} является формой с именем {(aForm)} ?" ) И
  (
    ( aUserType РАВНО ANYUSERTYPE ) ИЛИ
    ( Контрол pop:vcm:form:UserType РАВНО aUserType ) 
  ) ? (  
    Контрол =: Result
    "Закончить перебор контролов"
  )
 ;    
   
 focused:control:push pop:control:GetTopParentForm "выполнить для всех контролов" Действия 
;

: "Перевести фокус в на форме типа" STRING IN aControl STRING IN aForm INTEGER IN aUserType
 true IF
  false aUserType aControl aForm TryFocusOnForm 
   [[ 'Не удалось поставить фокус в ' aControl ' на форме ' aForm ' типа ' aUserType IntToStr ]] strings:Cat 
    ASSERTS
 ELSE
  OBJECT VAR "Контрол"
 
  : Действия OBJECT IN aObj
   ( aControl РАВНО ( aObj pop:control:Name ) ) IF
    aObj =: "Контрол"
    "Контрол" pop:control:SetFocus
    "Закончить перебор контролов"
   ENDIF
  ;
 
  OBJECT VAR "Форма"
  "Найти на главной форме форму с типом {(aUserType)} и именем {(aForm)}" =: "Форма"
  "Форма" pop:object:IsNil ! 
   [[ 'Не удалось найти ' aForm ' типа ' aUserType IntToStr ]] strings:Cat 
    ASSERTS
  "Форма" "выполнить для всех контролов" Действия
  "Контрол" pop:object:IsNil ! 
   [[ 'Не удалось поставить фокус в ' aControl ' на форме ' aForm ' типа ' aUserType IntToStr ]] strings:Cat
    ASSERTS 
 ENDIF  
;  

: "Перевести фокус в на форме" STRING IN aControl STRING IN aForm
 "Перевести фокус в на {(aControl)} форме {(aForm)} типа {(ANYUSERTYPE)}"
; 

BOOLEAN FUNCTION "Удалось перевести фокус в ?" STRING IN aControl

 false =: Result

 : Действия OBJECT IN aObj
  aControl РАВНО ( aObj pop:control:Name ) IF
   aObj pop:control:SetFocus =: Result
   "Закончить перебор контролов"
  ENDIF
 ;

 "Найти главное окно" "выполнить для всех контролов" Действия
;

: "Привести координаты для контрола к экранным" OBJECT IN X OBJECT IN Y OBJECT IN aControl
 X DO Y DO aControl pop:control:ClientToScreen =:^ Y =:^ X
;

OBJECT FUNCTION "Найти контрол  на форме  и найти на нем контрол с классом " STRING IN aControl OBJECT IN aForm CLASS IN aClass

 : Действия_с_контролом OBJECT IN aCtrl
  ( aCtrl ЯВЛЯЕТСЯ aClass )
   IF 
    aCtrl =: Result
    cBreak    // или EXIT
   ENDIF
 ; // Действия_с_контролом

  OBJECT VAR Parent
  "Найти контрол {(aControl)} на форме {(aForm)}" >>> Parent
  "выполнить для всех контролов {(Parent)}" Действия_с_контролом 
; // "Найти контрол  на форме  и выполнить  с его контролами"
