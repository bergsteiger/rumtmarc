USES
 SysUtils.script
 Controls.script
 Mouse.script
;

: "Установить окно модуля Администратора на передний план"
  VAR l_Handle
  'ГАРАНТ аэро - Администрирование пользователей ' FindWindowByCaption =: l_Handle
  l_Handle 0 ?!= ASSERT
  l_Handle SetForegroundWindow
;

: "Установить фокус в модуль Администратора"
 OBJECT VAR l_Form
 ANYUSERTYPE форма::UserList vcm:FindForm 'Не найдена форма UserList' ASSERTS
 >>> l_Form
 l_Form pop:control:SetFocus
; // "Установить фокус в модуль Администратора"

: StyleTable:Restore
 "Установить фокус в модуль Администратора"
 // заглушка
;

: ОсновноеМеню
 // заглушка
;

: "Сбрасываем вкладку БП в умолчательное состояние"
 // заглушка
;

: "Сравнить с эталоном размеры контрола" OBJECT IN aControl
 [[ 'Width = ' aControl "Померить ширину" IntToStr ]] strings:Cat .
 [[ 'Height = ' aControl "Померить высоту" IntToStr ]] strings:Cat .
; // "Сравнить с эталоном размеры контрола"

: "Получить размеры и координаты контрола" OBJECT IN aControl
 [[ 'Left = ' aControl "Померить отступ слева" IntToStr ]] strings:Cat .
 [[ 'Top = ' aControl "Померить отступ сверху" IntToStr ]] strings:Cat .
 [[ 'Width = ' aControl "Померить ширину" IntToStr ]] strings:Cat .
 [[ 'Height = ' aControl "Померить высоту" IntToStr ]] strings:Cat .
; // "Получить размеры и координаты контрола"

: "Сравнить меню с эталоном расширенно" OBJECT IN aMenu BOOLEAN IN anItemName

 FORWARD DoItem
 
 INTEGER VAR l_Indent 
 : DoItem OBJECT IN anItem
  VAR l_Index
  0 =: l_Index
  anItem menuitem:GetCount LOOP (
   VAR l_Item
   l_Index anItem menuitem:GetItem =: l_Item
   l_Item menuitem:IsVisible ? (
    [[ 
      l_Indent #32 char:Dupe
	  anItemName ? ( 'name' l_Item pop:object:GetStrProp ':' Cat )
      l_Item menuitem:GetCaption
      l_Item menuitem:IsEnabled ! ? (
       ' [Запрещён]'
       ' ' l_Item pop:component:Name
      )
    ]] strings:Cat .
    ++! l_Indent
    TRY
     l_Item DoItem
    FINALLY
     --! l_Indent
    END // TRY..FINALLY
   ) // l_Item menuitem:IsVisible
   ++! l_Index
  ) // anItem menuitem:GetCount LOOP
 ; // DoItem
 
 0 =: l_Indent
 
 aMenu DoItem
; // "Сравнить меню с эталоном"

: "Сравнить меню с эталоном" OBJECT IN aMenu
 "Сравнить меню {(aMenu)} с эталоном расширенно {(false)}"
;

: "Сравнить контекстное меню для контрола для точки с эталоном" OBJECT IN aControl INTEGER IN anX INTEGER IN anY
 OBJECT VAR l_Menu
 anX anY aControl pop:control:GetPopupMenu >>> l_Menu
 ( l_Menu pop:object:IsNil ) IF
  'У контрола нет контекстного меню' .
 ELSE
  l_Menu "Сравнить меню с эталоном"
 ENDIF
; // "Сравнить контекстное меню для контрола для точки с эталоном"

: "Сравнить контекстное меню для точки с эталоном" INTEGER IN anX INTEGER IN anY
 "Сравнить контекстное меню для контрола {(focused:control:push)} для точки {(anX anY)} с эталоном"
;

: "Сравнить контекстное меню с эталоном"
 "Сравнить контекстное меню для точки {(0 0)} с эталоном"
; // "Сравнить контекстное меню с эталоном"
: "Уменьшить окно" OBJECT IN "Окно"
 CONST wsNormal 0
 wsNormal "Окно" pop:form:SetWindowState
; // "Уменьшить окно"

: "Развернуть окно" OBJECT IN "Окно"
 CONST wsMaximized 2
 wsMaximized "Окно" pop:form:SetWindowState
; // "Развернуть окно"

: "Выставить форме размеры и " INTEGER IN formW INTEGER IN formH OBJECT IN aProc
 "Найти главное окно модуля Администратора" "Уменьшить окно"
 formW "Найти главное окно модуля Администратора" "Установить ширину"
 formH "Найти главное окно модуля Администратора" "Установить высоту"
 TRY
  aProc DO
 FINALLY
  "Найти главное окно модуля Администратора" "Развернуть окно"
 END
;

: "Сделать с изменением состояния и размеров окна" OBJECT IN aProc OBJECT IN aForm
  VAR aState
  VAR L
  VAR T
  VAR W
  VAR H
  aForm pop:form:GetWindowState >>> aState
  aForm "Померить отступ слева" >>> L
  aForm "Померить отступ сверху" >>> T
  aForm "Померить ширину" >>> W
  aForm "Померить высоту" >>> H
  TRY
   aProc DO
  FINALLY
   aState aForm pop:form:SetWindowState
   L aForm pop:control:SetLeft
   T aForm pop:control:SetTop
   W aForm "Установить ширину"
   H aForm "Установить высоту"
  END
 ; // "Сделать с изменением состояния и размеров окна"

:  "Сравнить содержимое тулбаров с эталоном расширенно" BOOLEAN IN aCheckEnabled

 : Действия OBJECT IN aObj
  ( aObj ЯВЛЯЕТСЯ class::TvcmToolbar ) ? (
   ( aObj pop:control:Visible И ( aObj pop:control:ControlCount БОЛЬШЕ 1 ) ) ? (
    aObj .
    'Order = ' 'DockRow' aObj pop:object:GetOrdProp IntToStr Cat .
    '---------------' .
    aObj EnumerateControls ( OBJECT IN aControl
    ( aControl "НЕ ЯВЛЯЕТСЯ" class::Ttb97MoreButton ) ? (
      aControl .
      ( aControl "НЕ ЯВЛЯЕТСЯ" class::TvcmComboBox ) ? (
       aControl pop:control:Caption .
       aCheckEnabled ? ( 'Активность:' aControl "Убедиться, что контрол активен"  ToPrintable Cat . ) 
      )
     )
    )
    '' .
   )
  )
 ;

 : "Получить содержимое тулбаров"
  "Найти главное окно модуля Администратора" "выполнить для всех контролов" Действия
 ;

 "Выставить форме размеры {(1400 900)} и {(@ "Получить содержимое тулбаров")}"

; // "Сравнить содержимое тулбаров с эталоном расширенно"

: "Сравнить содержимое тулбаров с эталоном"
 "Сравнить содержимое тулбаров с эталоном расширенно {(false)}"
;

: "Сравнить содержимое тулбаров с эталоном полностью"
 "Сравнить содержимое тулбаров с эталоном расширенно {(true)}"
;

 : "Нажать кнопку Сохранить"
  OBJECT VAR "Кнопка Сохранить"
  "Найти контрол {('bt_enResult_opSave')} на форме {("Найти главное окно модуля Администратора")}" =: "Кнопка Сохранить"
  "Кнопка Сохранить" "Узнать, существует ли объект" ! 'Не нашли кнопку Сохранить' ASSERTS
  "Кнопка Сохранить" "Кликнуть"
  OnTest
 ; // 

 : "Нажать кнопку Отмена"
  OBJECT VAR "Кнопка Отмена"
  "Найти контрол {('bt_enResult_opCancel')} на форме {("Найти главное окно модуля Администратора")}" =: "Кнопка Отмена"
  "Кнопка Отмена" "Узнать, существует ли объект" ! 'Не нашли кнопку Отмена' ASSERTS
  "Кнопка Отмена" "Кликнуть"
  OnTest
 ; // "Нажать кнопку Отмена"

: "Нажать Del"
 "Нажать {('Del')}"
;

BOOLEAN FUNCTION "Удалить ссылку в дереве" STRING IN aContext STRING IN aControl

 false =: Result
 
 STRING VAR l_Name
 
 focused:control:push pop:component:Name =: l_Name
 l_Name РАВНО aControl 
  [[ 'Почему то в фокусе ' l_Name ' а не ' aControl ]] strings:Cat
   ASSERTS

 : "Ищем ноду по контексту" IN aProc
  INTEGER VAR "Предельное количество"
  500 >>> "Предельное количество"
 
  BOOLEAN VAR Сделано
  НЕТ >>> Сделано
 
  INTERFACE VAR l_Node
  
  VAR l_CompareOp
   @ StartsStr =: l_CompareOp
 
  TRY  
   ПОКА ( НЕ Сделано И ( "Предельное количество" >0 ) )
   BEGIN
    --! "Предельное количество"
    aControl byname:control:push tree:CurrentNode >>> l_Node
    
    STRING VAR l_Text
    l_Node Node:Text =: l_Text
        
    aContext l_Text l_CompareOp DO IF 
     ДА >>> Сделано
     true =: Result
    ELSE
 
     TRY
      aProc DO
     EXCEPT
      // - наверное добежали до конца дерева
      ДА >>> Сделано
     END 
    ENDIF
   END
  
  FINALLY 
   nil =: l_Node
  END
 ; // "Ищем ноду по контексту"
 
 @ "Стрелка вниз" "Ищем ноду по контексту"
 
 Result IF
    "Ответить один раз Да для {(@ "Нажать Del")}"
  OnTest
 ELSE 
  
   @ "Стрелка вверх" "Ищем ноду по контексту"
   Result IF
    "Ответить один раз Да для {(@ "Нажать Del")}"
    OnTest
   ENDIF //  Result IF
  
 ENDIF // Result IF
; // "Удалить ссылку в дереве"


: "Создать пользователя, выполнить с ним и удалить его" OBJECT IN aProc

: aName  "Полный путь скрипта" "Имя скрипта" ;

 "Установить фокус в модуль Администратора"
 "Создать нового пользователя"
 "Найти контрол {('edLogin')} на форме {("Найти главное окно модуля Администратора")}" "Установить фокус"
 "Ввести {(aName)}"  
 "Найти контрол {('edUserName')} на форме {("Найти главное окно модуля Администратора")}" "Установить фокус"
 "Ввести {(aName)}"  
 "Нажать кнопку Сохранить"
 TRY
  aProc DO
 FINALLY
  "Установить фокус в модуль Администратора"
  "Удалить ссылку {(aName)} в дереве {('trUserList')}"
 END
; // "Создать поьзователя, выполнить с ним и удалить его" 

: "При помощи Shift выделяем элементов" IN aNum
 VAR l_Finish
 "Контрол в фокусе" "Узнать номер позиции фокуса в списке" aNum + >>> l_Finish // Подсчитываем конец выделения
 l_Finish "Контрол в фокусе" "Выделить с помощью Shift"  // Ну и выделяем
; // "При помощи Shift выделяем элементов"

: "Установить фокус во вкладку Группы пользователей"
 "Перевести фокус в {(контрол::GroupsTree)} на форме {(форма::GroupList)}"
; // "Установить фокус во вкладку Группы пользователей"

: "Создать группу, выполнить с ней и удалить ее" OBJECT IN aProc

: aName  "Полный путь скрипта" "Имя скрипта" ;

 "Установить фокус во вкладку Группы пользователей"
 @ ( "Создать новую группу" ) MODAL ( 
 "Ввести {(aName)}"  
 "Нажать {('Enter')}" )
 TRY
  aProc DO
 FINALLY
  "Установить фокус во вкладку Группы пользователей"
  "Удалить ссылку {(aName)} в дереве {('GroupsTree')}"
 END
; // "Создать группу, выполнить с ней и удалить ее" 

OBJECT FUNCTION  "Проверить доступность кнопки" IN aControl
 aControl "Найти главное окно модуля Администратора" "Найти контрол по имени на форме" =: Result
 Result pop:control:Enabled .
; // "Проверить доступность кнопки"

: "Отделить текст в эталоне"
'----------' .
; // "Отделить текст в эталоне"

: "Узнать, существует ли контрол и проверить его доступность" IN aControl
 aControl "Найти главное окно модуля Администратора" "Найти контрол по имени на форме" "Узнать, существует ли объект" ! IF
 [[ 'Свойство Enable контрола ' aControl  ' имеет значение: ' ]] strings:Cat .
 "Проверить доступность кнопки {(aControl)}"
 ELSE
  aControl  ' не найден!'  Cat .
 ENDIF
; // "Узнать, существует ли контрол и проверить его доступность"

